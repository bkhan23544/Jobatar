{"version":3,"sources":["route/auth.route.js","common/redux/actions/auth.actions.js","common/redux/actions/user.actions.js","common/redux/actions/default.actions.js","common/redux/actions/job.actions.js","common/redux/actions/service.actions.js","common/redux/actions/search.actions.js","common/redux/actions/favorite.actions.js","helpers/module.helper.js","helpers/common.helper.js","helpers/url.js","common/redux/actions/message.actions.js","common/redux/actions/proposal.actions.js","common/redux/actions/blog.actions.js","common/redux/actions/notification.actions.js","helpers/FormValidator.js","helpers/DocumentTitle.js","views/auth/Login/index.js","views/auth/Register/index.js","views/auth/ForgotPassword.js","views/auth/ResetPassword.js","views/auth/EmailVerify.js","views/layout/Header/Search.js","views/layout/Header/Notification.js","views/layout/Header/LoggedUser.js","views/layout/Header/index.js","views/layout/Footer/partials/NewsletterForm.js","views/layout/Footer/index.js","views/layout/Main.js","views/components/Home/Banner.js","views/layout/Modal.js","views/components/Home/partials/HomeSearch.js","views/components/Home/ExploreCategories.js","views/components/Home/JoinOurCommunity.js","views/components/Home/LimitlessExperience.js","views/components/Home/GrowWithJobarter.js","views/components/Home/Testimonials.js","views/components/Home/index.js","views/components/DashBoard/index.js","views/components/NotFound/NotFoundPage.js","views/components/NotFound/index.js","views/components/Logout/index.js","views/components/common/About.js","views/components/common/Media.js","helpers/Pagination.js","common/loaders/FreelancerListLoader.js","common/loaders/SearchLoader.js","common/loaders/ContetLIneLoader.js","common/loaders/FormLoader.js","views/components/common/PressRelease.js","views/components/common/PressReleaseView.js","views/components/common/PrivacyPolicy.js","views/components/common/Testimonials.js","views/components/common/HowItWorks.js","views/components/common/HelpAndFAQ.js","views/components/common/ContactUs.js","views/components/common/TermsOfService.js","views/components/common/ComingSoon.js","helpers/ScrollTop.js","views/components/Search/partials/FreelancerListing.js","views/components/Search/partials/ServiceListing.js","views/components/Search/partials/JobListing.js","views/components/Search/FreelancerSearch.js","views/components/Search/JobSearch.js","views/components/Search/ServiceSearch.js","helpers/file.helper.js","views/components/common/FileUploader.js","views/components/Service/partials/ServiceForm.js","views/components/Service/ServiceCreate.js","views/components/common/StripeConnection.js","views/components/Exceptions/NonAuthoritative.js","views/components/Exceptions/BadRequest.js","views/components/Service/ServiceUpdate.js","views/components/Exceptions/NotAcceptable.js","views/components/Exceptions/NotFound.js","views/components/Exceptions/NotImplemented.js","views/components/Exceptions/ServiceUnavailable.js","views/components/Exceptions/UpgradeRequired.js","views/components/Exceptions/ExpectationFailed.js","views/components/Exceptions/UnprocessableEntity.js","views/components/Service/ServiceListing.js","views/components/Contract/partials/ContractDeclined.js","views/components/Contract/partials/PlaceOffer.js","views/components/Contract/partials/CounterOffer.js","views/components/Contract/partials/RatingReviewForm.js","views/components/Contract/partials/MessageForm.js","views/components/Contract/partials/MilestoneForm.js","views/components/Contract/partials/BuyerView.js","views/components/Contract/partials/ItemView.js","views/components/Contract/partials/Milestones.js","views/components/Contract/partials/ContractItems.js","views/components/Contract/partials/ProposalReceived.js","views/components/Contract/partials/DisputeForm.js","views/components/Contract/partials/BidProposal.js","views/components/Service/partials/CounterOffer.js","views/components/Service/ServiceView.js","views/components/Service/ServiceSuccess.js","views/components/Service/ServiceProposalView.js","views/components/Job/dialog/ConnectionsDialog.js","views/components/Job/dialog/QuestionDialog.js","views/components/Job/partials/JobForm.js","views/components/Job/JobCreate.js","views/components/Job/JobUpdate.js","views/components/Job/partials/JobsNavbar.js","views/components/Job/JobLayout.js","views/components/Job/JobListing.js","views/components/Job/JobView.js","views/components/Job/JobSuccess.js","views/components/Job/JobProposalView.js","views/components/Blog/BlogCategory.js","views/components/Blog/BlogList.js","views/components/Blog/BlogView.js","helpers/Notifier.js","views/components/User/Private/partials/NavBar.js","views/components/User/Private/partials/ExperienceList.js","views/components/User/Private/partials/EducationList.js","views/components/User/Private/partials/EducationForm.js","views/components/User/Private/partials/ExperienceForm.js","views/components/User/Private/ProfileUpdate.js","views/components/User/Private/ExperienceAndEducation.js","views/components/User/Private/CoFounder.js","views/components/User/Private/Membership.js","views/components/User/Private/Support.js","views/components/User/Public/partials/Sidebar.js","views/components/User/Public/partials/PublicNavbar.js","views/components/User/Public/PublicLayout.js","views/components/User/Public/PublicAbout.js","views/components/User/Public/PublicJob.js","views/components/User/Public/PublicService.js","views/components/User/Public/PublicCoFounder.js","views/components/Service/partials/RatingReview.js","views/components/User/Public/PublicRating.js","views/components/User/Public/partials/OtherServices.js","views/components/User/Public/PublicServiceView.js","views/components/User/Public/PublicJobView.js","views/components/User/Favorites/partials/FavoriteNavbar.js","views/components/User/Favorites/FavoriteLayout.js","views/components/User/Favorites/FavoriteJobs.js","views/components/User/Favorites/FavoriteFreelancer.js","views/components/User/Favorites/FavoriteCoFounder.js","views/components/User/Favorites/FavoriteService.js","views/components/User/Favorites/partials/CoFounderNavbar.js","views/components/User/Favorites/ConnectionsMy.js","views/components/User/Favorites/ConnectionsRequest.js","views/components/User/Favorites/ConnectionsSent.js","views/components/User/Settings/partials/NavBar.js","views/components/User/Settings/ChangePassword.js","views/components/User/Settings/ManageMembership.js","views/components/User/Settings/Notifications.js","views/components/User/Settings/UserDetails.js","views/components/User/Settings/StripConnect.js","views/components/User/Settings/partials/DetailsPreview.js","views/components/User/Settings/Transactions.js","views/components/Contract/partials/ContractNavbar.js","views/components/Contract/ContractLayout.js","views/components/Contract/ContractListing.js","views/components/Contract/OffersListing.js","views/components/Contract/partials/CoverLatter.js","views/components/Contract/ContractView.js","views/components/Messanger/Compose/index.js","views/components/Messanger/UserProfile/index.js","views/components/Messanger/MessageList/Attachment.js","views/components/Messanger/MessageList/index.js","views/components/Messanger/ConversationSearch/index.js","views/components/Messanger/ConversationModule/index.js","views/components/Messanger/ConversationListItem/index.js","views/components/Messanger/ConversationList/index.js","views/components/Messanger/index.js","App.js"],"names":["AuthRoute","Component","component","rest","render","props","gs","identity","to","pathname","state","from","location","authActions","params","dispatch","processSelectors","start","authService","login","then","authentication","token","storeItem","authSelectors","success","alertSelectors","message","stop","firebaseLogin","username","user","navigation","catch","exception","text","errorMessage","JSON","parse","undefined","length","unVerified","code","errors","map","item","error","params2","loginByAuth","firebaseLogout","data","register","response","messageAlert","join","logout","forgotPassword","resetPassword","emailVerification","console","log","resendVerification","userActions","service","method","param2","itemService","showErrors","job","userItem","is_publish","action","isNotified","recipients","profile","key","redirectTo","experience","userSelectors","experiences","education","educations","changePassword","stripeConnect","stripeDisconnect","stripeRetrieve","verification","account","individual","status","capitalize","details","publicProfile","favorite","favorites","favoriteSelectors","connection","connections","defaultActions","files","upload","uploadedFiles","defaultService","uploadAndProgress","image","filter","file","mimetype","video","docs","allFiles","concat","uploadSelectors","respond","id","deleteFile","item_id","categories","commonSelectors","skills","countries","questions","platforms","newsletter","contact","jobActions","jobSelectors","publish","draft","clear","serviceActions","serviceSelectors","list","searchActions","users","searchSelectors","freelancers","jobs","services","favoriteActions","jobRemove","freelancerRemove","connectionsRemove","serviceRemove","UserItem","UserService","UserConnection","ModuleHelper","status_pending","status_declined","status_accepted","status_bid","status_offers","status_counter_offers","status_payment_confirm","status_mark_as_completed","status_not_completed","status_completed","status_accepted_and_closed","module","title","commonHelper","process","REACT_APP_IS_WEB","end","step","Array","fill","_","idx","countryCode","push","name","subject","proposal","attachment","userItemProposalRecipients","recipient","avatar","hometown","user_id","groupImage","cover","groupImageId","cover_id","group","group_id","image_id","mh","moduleType","moduleId","val","searchParams","URLSearchParams","set","toString","urlHelper","url","messageActions","messageSelectors","dateNow","created_at","Date","now","cId","parseInt","forEach","el","uId","unread","is_attachment","attachments","deleted","sender","updated_at","userMessage","messageToFirebase","messageKey","proposal_id","userProposal","message_id","proposalSelectors","history","model","messenger","common","comment","proposalActions","items","milestone","dispute","blogAction","blogSelectors","notificationActions","notification","notificationSelectors","FormValidator","validations","this","refs","validation","valid","rule","field","isInvalid","field_value","args","validator","validWhen","isValid","DocumentTitle","description","content","Login","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","setState","isSignedIn","providerData","authclient","handleChange","e","formField","target","value","handleSubmit","preventDefault","validate","submitted","alert","accessToken","Blob","stringify","access_token","type","password","className","onSubmit","noValidate","src","alt","firebaseAuth","onChange","placeholder","autoFocus","style","float","Checkbox","size","color","inputProps","fontWeight","loading","data-style","EXPAND_RIGHT","fontSize","marginBottom","onClick","Button","display","justifyContent","height","React","authSelector","createSelector","processSelector","alertSelector","mapStateToProps","connect","Register","handleConfirmPassword","email","first_name","last_name","confirm_password","terms","bind","ForgotPassword","width","ResetPassword","allValid","showMessages","password_repeat","SimpleReactValidator","autoForceUpdate","messages","query","search","get","htmlFor","in","required","userSelector","EmailVerify","Search","category","listen","checkUrl","event","nextProp","maxWidth","margin","FormControl","variant","Select","input","Input","MenuProps","disableScrollLock","MenuItem","Notification","getUser","db","ref","on","snap","fetchFirst","notificationPull","page","count","pagination","totalCount","fetchMoreData","hasMore","fetchNoti","offset","lists","read","notificationRead","initilizeState","Dropdown","Toggle","as","Menu","dataLength","next","loader","endMessage","index","thumb","moment","format","minHeight","notificationSelector","notifications","LoggedUser","componentWillMount","isNew","recipientCounter","onLogout","isnew","userKey","orderByChild","equalTo","ObjectToArray","a","rs","Object","values","r","find","renderNotification","loggedIn","Nav","href","NavDropdown","offers","counter","requests","Divider","proposalSelector","proposals","Header","window","addEventListener","activeClass","scrollY","changeClasseToOpen","document","getElementById","classList","changeClasseToClose","remove","changeClasseToOpen2","changeClasseToClose2","toggle","toggle2","Navbar","bg","expand","Container","Collapse","activeClassName","authenticationSelector","NewsletterForm","submitForm","initializeState","Footer","getFullYear","getYear","rel","Main","children","onlycontent","Banner","ExploreCategories","class","JoinOurCommunity","LimitlessExperience","handleClose","show","handleShow","onHide","centered","closeButton","Title","Body","controls","autoPlay","GrowWithJobarter","Testimonials","Home","DashBoard","date","nedDate","getMonth","match","prevProps","about","userProfile","experienceSelector","educationSelector","NotFoundPage","NotFound","Logout","About","Row","Col","md","sm","Media","Pagination","pager","setPage","initialPage","prevState","pageSize","totalPages","getPager","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","startIndex","endIndex","min","pages","keys","i","aria-hidden","defaultProps","FreelancerListLoader","loop","listCount","speed","primaryColor","primaryBg","secondaryColor","secondaryBg","cx","cy","x","y","rx","ry","SearchLoader","ContetLIneLoader","px","FormLoader","PressRelease","onRouteChanged","pagesize","blog","blog_image","path","slug","created_by_press","blogSelector","PressReleaseView","dangerouslySetInnerHTML","__html","FacebookShareButton","rootUrl","quote","FacebookIcon","TwitterShareButton","TwitterIcon","LinkedinShareButton","windowWidth","windowHeight","LinkedinIcon","PrivacyPolicy","xs","HowItWorks","innerWidth","innerHeight","post","HelpAndFAQ","ContactUs","contactForm","body","xl","TermsOfService","ComingSoon","backgroundImage","withRouter","useEffect","scrollTo","FreelancerListing","markAsFavorite","favorite_id","is_favorite","param","confirmAlert","buttons","label","results","is_co_founder","IconButton","aria-label","feautured","avg_job_rating","opacity","substr","ServiceListing","number","random","effect","sold_count","avg_rating","Box","mx","borderColor","Rating","floor","readOnly","count_rating","JobListing","settlement","parent","budget","charLimit","readMoreText","readLessText","readMoreClassName","readLessClassName","html2text","flexDirection","flexWrap","alignItems","marginRight","ratingList","FreelancerSearch","onResetForm","is_verified","ratings","sort","listObj","handleCheckboxChange","checked","handleAll","RadioButtonChanger","ev","noRecords","onChangeCategory","onSelectCategory","onCloseCategory","category_id","rating_id","country_code","filterToggle","fields","groupBy","getOwnPropertyNames","nextProps","categoriesArr","countriesArr","catlist","parent_id","paddingTop","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","paddingLeft","paddingRight","cssClassNamclassName","popupHeight","dataSource","mode","enableGroupCheckBox","allowFiltering","dropdownlist","filterBarPlaceholder","change","select","close","showDropDownIcon","noRecordsTemplate","CheckBoxSelection","RadioGroup","FormControlLabel","control","Radio","classNamePrefix","isClearable","isSearchable","options","PureComponent","searchSelector","categoriesSelector","countriesSelector","JobSearch","proposal_count","encType","ServiceSearch","cssClass","fileManupulate","uploadFiles","oldFiles","includes","NoUploadedFiles","FileUploader","handleRemove","removeFile","handleUpload","coverPhoto","filesArr","docsIdx","findIndex","splice","imageIdx","videoIdx","filesList","accept","OverlayTrigger","placement","overlay","Tooltip","multiple","progress","role","hasFiles","filename","maxHeight","coverImage","defaultChecked","uploadSelector","ServiceForm","selectedOptions","handleChangeVirtual","handleSelect","handleSelectSkills","f","onCover","onEditorStateChange","subcategory_id","draftToHtml","convertToRaw","getCurrentContent","userService","virtual","subCategories","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","editorState","EditorState","createWithContent","skillsArr","smooth","duration","wrapperClassName","editorClassName","toolbarOnFocus","toolbar","inline","inDropdown","dropdownClassName","subscript","defaultValue","Form","Check","custom","isMulti","skillsSelector","ServiceCreate","strip_account_number","NonAuthoritative","ServiceUpdate","res","isOwner","media","deactiveService","received_offers","serviceSelector","ContractDeclined","_mount","open","declinedClose","servicesList","Dialog","onClose","disableBackdropClick","disableEscapeKeyDown","fullWidth","DialogTitle","Fab","DialogContent","rows","DialogActions","validService","validBudget","PlaceOffer","provider_id","modelTitle","handleAnswer","answers","question_id","answer","offerClose","action_by","any_questions","proposalStatus","validForm","buttonTitle","isJob","overflow","userItemQuestions","question","onBlur","CounterOffer","moduleTitle","RatingReviewForm","reviewClose","review","rating_communication","rating_competence","rating_quality","rating_deadline","rating_recommend","rating_avg","parseFloat","toFixed","userItemProposalReview","rating_skills","rating_availability","rating_cooperation","buyer","totalRating","mb","MessageForm","recipient_id","messageClose","MilestoneForm","componentWillReceiveProps","dateFieldTitle","fromType","handleBudget","budgetForTimesheet","milestoneClose","handleDateChange","dated","milestone_id","getTime","userMilestone","typeTitle","utils","DateFnsUtils","KeyboardButtonProps","pattern","ideal","max","isVisibleMessage","messageOpen","itemType","pgLinkOwner","pgLink","padding","submittionStatuses","Milestones","itemAction","capitalizeType","alert_message","is_paid","is_active","onPayment","isConfirmDialog","onApproved","onDeclined","isVisiblePayment","itemPayment","stripeKey","amount","ComponentClass","panelLabel","isVisibleSubmit","isVisibleActions","isDisabled","milestoneOpen","setMilestone","milestoneDelete","REACT_APP_STRIPE_PUBLIC_KEY","userItemProposalMilestones","proposalItem","isJobProposal","proposalTypeTitle","ContractItems","statusTitle","cls","isActionBy","_getName","actionBy","proposalRecipient","toLowerCase","isDispute","ProposalReceived","toRedirect","findPath","statusId","menuOpen","provider","DisputeForm","disputeClose","userItemProposalDispute","BidProposal","offerOpen","proposalDeclined","popUpClose","price","ServiceSuccess","connectionSelector","useState","setChecked","setSearch","setConnections","takingData","connectionList","Set","inviteMember","selected","aria-labelledby","dividers","TextField","q","List","marginLeft","dense","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","edge","currentIndex","indexOf","newChecked","QuestionDialog","handleQuestion","handleOk","disabled","deadlineList","validConnections","JobForm","handleChangeNda","connectionOpen","connectionDialogOpen","questionOpen","questionDialogOpen","handleConnection","customquestions","visibility","is_nda","is_closed","deadline","locations","scroll","scrollToTop","saveDraft","connectionToShow","categoriesList","subCategoriesList","skillsList","countriesList","questionsList","Switch","obj","b","selectedValue","questionsSelector","JobCreate","JobUpdate","userItemLocations","country_id","iniDeadline","iniIsClosed","isClosed","JobsNavbar","JobLayout","loadJobs","is_visibility","renderItem","viewLink","view_counts","initializedStated","jobSelector","JobView","setOffer","toLocaleDateString","year","month","day","skill","userItemProposals","JobSuccess","BlogCategory","category_slug","created_by","BlogList","exact","BlogView","Notifier","enqueueSnackbar","closeSnackbar","anchorOrigin","vertical","horizontal","withSnackbar","NavBar","prop","parseItem","instruction","ExperienceList","onEdit","onDelete","is_present","experiencesSelector","EducationList","educationsSelector","EducationForm","handlePresentChange","handleFromDate","handleToDate","userEducation","institute","setTimeout","hideToggle","cancelForm","minDate","today","getDate","maxDate","boxShadow","ExperienceForm","userExperience","industry_name","autoOk","ProfileUpdate","updatedState","profileSkills","languages","lans","profileLanguage","userProfilePlatforms","link","mobile","website","timezone","avatar_id","FieldModel","addCoFounder","removeCoFounder","languagesSelect","handlePlatform","handleChangeAddress","address","handleSelectAddress","geocodeByAddress","getLatLng","latLng","loadingProfile","uploadWithoutProgress","fileId","date_of_birth","languageList","coreField","platformsList","Card","onPlaceSelected","place","types","componentRestrictions","country","onSelect","shouldFetchSuggestions","getInputProps","suggestions","getSuggestionItemProps","suggestion","active","backgroundColor","cursor","showMessageFor","errorMessages","option_code","option_value","platform","platformsSelector","ExperienceAndEducation","onSelectItem","experienceItem","toggleExperience","educationItem","toggleEducation","onDeleteItem","itemId","onSubmitData","addNew","editItem","showDeleteConfirmation","deleteConfirmationProps","userId","experienceItems","educationsItems","Accordion","timeCommitment","CoFounder","coFounderField","userCoFounderExperience","exp_title","exp_description","years_experience","exp_years_experience","working_hour","exp_working_hour","startup_experience","exp_startup_experience","exp_status","userCoFounderIdeal","ideal_title","ideal_description","ideal_years_experience","ideal_working_hour","ideal_startup_experience","ideal_locations","coFounderDeactivate","coFounderSkills","coFounderCountries","cf","Control","Membership","Support","formValue","userSupport","info","support","language","setValue","since","PublicLayout","PublicAbout","PublicJob","jobsSelector","PublicService","findUserIdByServies","service_user_id","serviceArr","numbe","PublicCoFounder","addConnection","connection_id","is_connection","connected","customUI","closeOnEscape","closeOnClickOutside","getTimeCommitment","o","pointerEvents","num_of_connections","Tab","defaultActiveKey","Item","Link","eventKey","RatingReview","reviews","changable","isShowDropdown","isShowAvgRating","selectedReviews","avg_rating_communication","avg_rating_competence","avg_rating_quality","avg_rating_deadline","avg_rating_recommend","marginTop","PublicRating","service_id","slice","cashSettlement","PublicServiceView","makingImagesArray","loginUser","responce","images","images2","original","thumbnail","renderFullscreenButton","isFullscreen","position","getElementsByClassName","showSendOfferButton","private","isService","slideOnThumbnailOver","lazyLoad","showPlayButton","thumbnailPosition","doc","download","PublicJobView","FavoriteNavbar","FavoriteLayout","FavoriteJobs","favoriteSelector","FavoriteFreelancer","freelancer","FavoriteCoFounder","FavoriteService","CoFounderNavbar","ConnectionsMy","request","decline","ConnectionsRequest","ConnectionsSent","ChangePassword","newPassword","confirmNewPassword","oldPassword","autoComplete","ManageMembership","Notifications","seen","delete","notificationDelete","UserDetails","StripConnect","stripeViewDetails","viewDetails","stripeHideDetails","handleConnect","mcc","bank_name","id_number","routing_number","account_number","ssn_last_4","city","postal_code","phone","currency","isStripeConnect","Text","currency_code","currency_name","mask","mccList","labelStyle","Transactions","fulldate","transactions","startDate","endDate","classes","TableContainer","Paper","Table","table","TableHead","TableRow","TableCell","align","TableBody","colSpan","scope","transactionID","admin_fee","total_amount","transfer_amount","pageCount","withStyles","theme","minWidth","itemLink","ContractLayout","ContractListing","loadProposal","submitSerch","OffersListing","deleteProposal","CoverLatter","userItemProposalAnswers","confirmedStatuses","paymentConfirmedStatuses","offersStatuses","forWaitingStatuses","deletedStatuses","acceptedStatuses","ContractView","componentWillUpdate","setDeclined","setMessage","reviewOpen","setReview","disputeOpen","setDispute","isHideMesageButton","proposalAccepted","markAsCompleted","contractAccepted","contractDeclined","proposalAcceptAndClosed","proposalRemoved","viewCoverLatter","currentState","proposalAction","menuTitle","menuItem","deleteFirebaseMessage","tip","proposalOffers","proposalHistories","initialize","declined","showTip","setAccepted","proposalServices","isProvider","proposalInitialOffer","proposalCounterOffer","proposalDeclinedOffer","proposalMilestones","userItemProposalServices","userItemProposalHistories","itemModule","itemProvider","itemOwner","proposalFromProvider","proposalFromOwner","proposalMarkCompleted","proposalMarkNotCompleted","proposalCompleted","isVisibleConformation","proposalApproved","isFinalOffer","isRefunded","isVisibleOffer","isBid","isVisibleWaitingApproval","isVisibleDelete","isVisibleMilestone","transcation_id","proposalPaymentConfirm","isVisibleReview","isReview","isVisibleRatingReview","isVisibleEndContract","isVisibleConfirmEndContract","isVisibleDispute","proposalAmount","proposalTitle","providerTitle","contractCompletedTitle","offerTitle","toUpperCase","Compose","findUnRead","activeKey","current","currentRecipients","rootRef","once","addAttachment","createdAt","storage","self","mime","metadata","contentType","put","snapshot","getDownloadURL","downloadURL","bytesTransferred","totalBytes","is_uploaded","Icon","UserProfile","_showName","avater","messageSelector","Attachment","extension","fileExtension","checkImage","getImagesHttpUrl","storageRef","listAll","result","imageRef","uri","icons","classIcon","MessageList","_isMounted","preState","threads","scrollToBottom","animateScroll","containerId","getProfile","renderMessage","isMine","Number","isInteger","friendlyTimestamp","renderLoading","previousAt","lastAt","refreshing","isOnly","attachmentDated","messagingRef","createRef","thread","ConversationSearch","ConversationModule","setModule","modules","ConversationListItem","loadNewMessage","changeCurrent","getImage","getTitle","searchParam","searchKey","cr","dateTime","oldDay","dateFormat","truncateString","ConversationList","loadMessage","per_page","searchResult","overflowX","overflowY","Messenger","sortedItems","v","sortedMessage","currentMessage","getParamKey","keyMessage","setCurrent","recent","mountCurrent","loadRecipient","p","readMessageThread","loadConversation","renderEmpty","renderLoadingEmpty","paramKey","App","Message"],"mappings":"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","file":"static/js/4.f3df4a76.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { globalService as gs } from '../common/services';\r\n\r\nexport const AuthRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        gs.identity\r\n            ? <Component {...props} {...rest} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n);\r\n","import { globalService as gs, authService } from '../../services';\r\nimport { alertSelectors, processSelectors, authSelectors } from \"../selectors\";\r\n\r\nconst login = (params) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        authService.login(params)\r\n            .then(authentication => {\r\n                // login successful if there's a jwt token in the response\r\n                if (authentication.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    gs.storeItem('authentication', authentication);\r\n                    gs.storeItem('token', authentication.token);\r\n                    dispatch(authSelectors.success(authentication));\r\n                    dispatch(alertSelectors.success(authentication.message));\r\n                    dispatch(processSelectors.stop());\r\n                    gs.firebaseLogin(params.username)\r\n                    .then((user) => {\r\n                        if (user)  {\r\n                             gs.navigation('service-search', true);\r\n                        }\r\n                    });\r\n                 \r\n                }\r\n            })\r\n            .catch(exception => {\r\n                //console.log('exception', exception);\r\n               // if(exception.statusText === 'Unauthorized') dispatch(alertSelectors.unVerified('Registered successfully, please check your email for verification', exception.code));\r\n               exception && exception.text().then(message => {\r\n                    const errorMessage = JSON.parse(message);\r\n                   (errorMessage !== undefined) && (errorMessage.message !== undefined) && (errorMessage.message.length > 0) && dispatch(alertSelectors.unVerified(errorMessage.message, errorMessage.code));\r\n                   (errorMessage !== undefined) && (errorMessage.errors !== undefined) && (errorMessage.errors.length > 0) && errorMessage.errors.map(item => dispatch(alertSelectors.error(item)));\r\n\r\n               });\r\n              //  gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\n\r\nconst loginByAuth = (params, params2) => {\r\n\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        authService.loginByAuth(params, params2).then(authentication => {\r\n            // login successful if there's a jwt token in the response\r\n            if (authentication.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                gs.storeItem('authentication', authentication);\r\n                gs.storeItem('token', authentication.token);\r\n            }\r\n            dispatch(authSelectors.success(authentication));\r\n            dispatch(alertSelectors.success(authentication.message));\r\n            dispatch(processSelectors.stop());\r\n            gs.navigation('welcome', true);\r\n\r\n        })\r\n            .catch(exception => {\r\n                gs.firebaseLogout();\r\n                exception && exception.text().then(message => {\r\n                    const errorMessage = JSON.parse(message);\r\n                    (errorMessage !== undefined) && (errorMessage.message !== undefined) && (errorMessage.message.length > 0) && dispatch(alertSelectors.unVerified(errorMessage.message, errorMessage.code));\r\n                    (errorMessage !== undefined) && (errorMessage.errors !== undefined) && (errorMessage.errors.length > 0) && errorMessage.errors.map(item => dispatch(alertSelectors.error(item)));\r\n\r\n                });\r\n                //  gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    }\r\n};\r\n\r\nconst register = (data) => {\r\n\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        authService.register(data)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n                dispatch(processSelectors.stop());\r\n                //gs.firebaseRegister(data.email);\r\n                gs.messageAlert('Check your email to complete the sign up process.');\r\n                // gs.navigation('login'); // this is remove by sadiq we are navigating to login when upper message alert is press a close button the function is send from them of navigation\r\n            })\r\n            .catch(exception => {\r\n                exception.text().then(errorMessage => {\r\n                    const errors = JSON.parse(errorMessage).errors.join(',');\r\n                    dispatch(alertSelectors.error(errors));\r\n                    dispatch(processSelectors.stop());\r\n                })\r\n            });\r\n    };\r\n};\r\n\r\nconst forgotPassword = (data) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        authService.forgotPassword(data)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n                dispatch(processSelectors.stop());\r\n                gs.navigation('home');\r\n            })\r\n            .catch(exception => {\r\n                exception.text().then(errorMessage => {\r\n                    const errors = JSON.parse(errorMessage).errors.join(',');\r\n                    dispatch(alertSelectors.error(errors));\r\n                    dispatch(processSelectors.stop());\r\n                })\r\n            });\r\n    };\r\n};\r\n\r\nconst resetPassword = (params = null, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        authService.resetPassword( params, params2)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n                dispatch(processSelectors.stop());\r\n                gs.navigation('home');\r\n            })\r\n            .catch(exception => {\r\n                exception.text().then(errorMessage => {\r\n                    const errors = JSON.parse(errorMessage).errors.join(',');\r\n                    dispatch(alertSelectors.error(errors));\r\n                    dispatch(processSelectors.stop());\r\n                })\r\n            });\r\n    };\r\n};\r\n\r\nconst emailVerification = (token) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        authService.emailVerification(null, { token: token })\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n                dispatch(processSelectors.stop());\r\n                gs.navigation('login', true);\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n                exception.text().then(errorMessage => {\r\n                    const errors = JSON.parse(errorMessage).errors.join(',');\r\n                    dispatch(alertSelectors.error(errors));\r\n                    dispatch(processSelectors.stop());\r\n                })\r\n            });\r\n    };\r\n};\r\n\r\nconst resendVerification = (params = null, params2 = null) => {\r\n    return dispatch => {\r\n        //dispatch(processSelectors.start());\r\n        authService.resendVerification(params, params2)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n                exception.text().then(errorMessage => {\r\n                    const errors = JSON.parse(errorMessage).errors.join(',');\r\n                    dispatch(alertSelectors.error(errors));\r\n                    dispatch(processSelectors.stop());\r\n                })\r\n            });\r\n    };\r\n};\r\n\r\nconst logout = () => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        authService.logout()\r\n            .then(response => {\r\n                gs.logout();\r\n                dispatch(authSelectors.logout(response.message));\r\n                dispatch(alertSelectors.success('Logout Successful.'));\r\n                dispatch(processSelectors.stop());\r\n                gs.navigation('logout');\r\n            })\r\n            .catch(exception => {\r\n                exception.text().then(errorMessage => {\r\n                    const errors = JSON.parse(errorMessage).errors.join(',');\r\n                    dispatch(alertSelectors.error(errors));\r\n                    dispatch(processSelectors.stop());\r\n                })\r\n            });\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\nexport const authActions = {\r\n    login,\r\n    loginByAuth,\r\n    register,\r\n    logout,\r\n    forgotPassword,\r\n    resetPassword,\r\n    emailVerification,\r\n    resendVerification,\r\n};\r\n","import { itemService, globalService as gs} from '../../services';\r\nimport {alertSelectors} from \"../selectors/alert.selectors\";\r\nimport {processSelectors} from \"../selectors/process.selectors\";\r\nimport {authSelectors, userSelectors, favoriteSelectors} from \"../selectors\";\r\n\r\n\r\nconst service = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.service(method, params, param2 )\r\n            .then(response => {\r\n                if (response.success === true) {\r\n                    dispatch(alertSelectors.success(response.message));\r\n                } else {\r\n                    dispatch(alertSelectors.error(response.message));\r\n                }\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst job = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.job(method, params, param2)\r\n            .then(response => {\r\n                if (response.success === true){\r\n                    if(params.userItem.is_publish === 'draft') {\r\n                        dispatch(alertSelectors.success('You have successfully saved the job as draft. Please go to \"My Jobs\", and then select \"Drafts\" to complete and submit the job posting.'));\r\n                    } else {\r\n                        let action = (method === \"POST\" && param2 !== null) ? 'update' : 'add';\r\n                        dispatch(alertSelectors.success(`You did successfully ${action} the job post.`));\r\n                        gs.isNotified(response.recipients);\r\n                    }\r\n                } else {\r\n                    let action = (method === \"POST\" && param2 !== null) ? 'update' : 'add';\r\n                    dispatch(alertSelectors.success(`You did not ${action} the job post.`));\r\n                }\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst changePassword = (params) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.changePassword(\"POST\", params )\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n        };\r\n};\r\n\r\nconst profile = (method = \"POST\", params = null, key='profile') => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.profile(method, params)\r\n            .then(response => {\r\n                if (response.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    gs.storeItem('authentication', response);\r\n                    dispatch(authSelectors.success(response));\r\n                    let message = null;\r\n                    let redirectTo = null;\r\n                    switch(key){\r\n                        case 'profile':\r\n                            message = 'You have updated your profile.';\r\n                            redirectTo = '/user/experience-and-education';\r\n                            //history.push('/user/experience-and-education');\r\n                            break;\r\n                        case 'co-founder':\r\n                            message = 'You have updated your co-founder information.';\r\n                            redirectTo = '/user/stripe-connect';\r\n                            break;\r\n                        case 'avatar':\r\n                            message = 'You have uploaded your picture.';\r\n                        break;\r\n                        default:\r\n                    }\r\n                    if(key !== 'delete_photo') {\r\n                        dispatch(alertSelectors.success(message));\r\n                    }\r\n                    dispatch(processSelectors.stop());\r\n                    redirectTo && gs.navigation(redirectTo);\r\n                }\r\n\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\n\r\nconst stripeConnect = (method = \"POST\", params = null, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.stripeConnect(method, params, params2)\r\n            .then(authentication => {\r\n                if (authentication.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    gs.storeItem('authentication', authentication);\r\n                    dispatch(authSelectors.success(authentication));\r\n                    dispatch(alertSelectors.success('You have successfully connected to stripe.'));\r\n                    dispatch(processSelectors.stop());\r\n                }\r\n                if (authentication.code === false){\r\n                    dispatch(alertSelectors.error(authentication.message));\r\n                }\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\n\r\n\r\nconst stripeDisconnect = (method = \"POST\", params = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.stripeDisconnect(method, params)\r\n            .then(response => {\r\n                if (response.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    gs.storeItem('authentication', response);\r\n                    dispatch(authSelectors.success(response));\r\n                    dispatch(alertSelectors.success('You have successfully updated your profile.'));\r\n                    dispatch(processSelectors.stop());\r\n                }\r\n                dispatch(processSelectors.stop());\r\n\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst stripeRetrieve = (method = \"GET\") => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.stripeRetrieve(method)\r\n            .then(response => {\r\n                if (response) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    let verification = response.account.individual.verification;\r\n                    let status = gs.capitalize(verification.status)\r\n                    let message = `${status}!`;\r\n                    if (verification.details !== null){\r\n                        message = `${status}: ${verification.details}`;\r\n                    }\r\n                    dispatch(alertSelectors.success(message));\r\n                    dispatch(processSelectors.stop());\r\n                }\r\n                dispatch(processSelectors.stop());\r\n\r\n            })\r\n            .catch(exception => {\r\n                exception && exception.text().then(message => {\r\n                    const errorMessage = JSON.parse(message);\r\n                    (errorMessage !== undefined) && (errorMessage.message !== undefined) && (errorMessage.message.length > 0) && dispatch(alertSelectors.error(errorMessage.message, errorMessage.code));\r\n                    (errorMessage !== undefined) && (errorMessage.errors !== undefined) && (errorMessage.errors.length > 0) && errorMessage.errors.map(item => dispatch(alertSelectors.error(item)));\r\n\r\n                });\r\n                //gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst experience = (method = \"GET\", params = null, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.experience(method, params, params2 )\r\n            .then(response => {\r\n                if(method === 'GET') dispatch(userSelectors.experiences(response));\r\n                if(method === 'POST') {\r\n                    dispatch(userActions.experience());\r\n                    if(params2 === null) dispatch(alertSelectors.success('You have add your experience.'));\r\n                    if(params2 !== null) dispatch(alertSelectors.success('You have updated your experience.'));\r\n                }\r\n                if(method === 'DELETE') dispatch(alertSelectors.success('You have deleted your experience.'));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst education = (method = \"GET\", params = null, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.education(method, params, params2 )\r\n            .then(response => {\r\n                if(method === 'GET') dispatch(userSelectors.educations(response));\r\n                if(method === 'POST') {\r\n                    dispatch(userActions.education());\r\n                    if(params2 === null) dispatch(alertSelectors.success('You have add your education.'));\r\n                    if(params2 !== null) dispatch(alertSelectors.success('You have updated your education.'));\r\n                }\r\n                if(method === 'DELETE') dispatch(alertSelectors.success('You have deleted your education.'));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\n\r\n\r\nconst favorite = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        itemService.favorite(method, params, param2)\r\n            .then(response => {\r\n                if(method === 'GET') dispatch(userSelectors.favorites(response));\r\n                if(method === 'GET') dispatch(favoriteSelectors.job(response));\r\n                if(method === 'POST') dispatch(alertSelectors.success('You have successfully selected a favorite.'));\r\n                if(method === 'DELETE') dispatch(alertSelectors.success('You have successfully removed a favorite.'));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst favorites = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.favorite(method, params, param2)\r\n            .then(response => {\r\n                if(method === 'GET') dispatch(favoriteSelectors.job(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst connection = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.connection(method, params, param2 )\r\n            .then(response => {\r\n                if(method === 'GET') dispatch(userSelectors.connections(response));\r\n                if(method === 'POST') dispatch(alertSelectors.success('You have successfully added a connection.'));\r\n                if(method === 'DELETE') dispatch(alertSelectors.success('You have successfully deleted a connection.'));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst publicProfile = (method = \"GET\", params = null, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.profile(method, params, params2)\r\n            .then(response => {\r\n                dispatch(userSelectors.publicProfile(response.user));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nexport const userActions = {\r\n    service,\r\n    job,\r\n    profile,\r\n    experience,\r\n    education,\r\n    changePassword,\r\n    stripeConnect,\r\n    stripeDisconnect,\r\n    stripeRetrieve,\r\n    publicProfile,\r\n    favorite,\r\n    favorites,\r\n    connection,\r\n};\r\n\r\n","import { alertSelectors, processSelectors, uploadSelectors, commonSelectors } from \"../selectors\";\r\nimport { globalService as gs, defaultService } from '../../services';\r\nimport {userActions} from \"./user.actions\";\r\n\r\nconst upload = (files, upload) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        let uploadedFiles = upload.files;\r\n        defaultService.uploadAndProgress(files, dispatch)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success('File successfully uploaded.'));\r\n                dispatch(processSelectors.stop());\r\n                let files = response.files &&\r\n                    {\r\n                        image: response.files.filter(file => (file.mimetype === 'image')),\r\n                        video: response.files.filter(file => (file.mimetype === 'video')),\r\n                        docs: response.files.filter(file => (file.mimetype !== 'video' && file.mimetype !== 'image')),\r\n                    };\r\n                const allFiles = {\r\n                    image: (uploadedFiles && uploadedFiles.image) ? files.image.concat(uploadedFiles.image) : files.image,\r\n                    video: (uploadedFiles && uploadedFiles.video) ? files.video.concat(uploadedFiles.video) : files.video,\r\n                    docs: (uploadedFiles && uploadedFiles.docs) ? files.docs.concat(uploadedFiles.docs) : files.docs,\r\n                };\r\n                dispatch(uploadSelectors.respond(allFiles));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst remove = (id, type = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        defaultService.deleteFile(null, { item_id: id})\r\n            .then(response => {\r\n                (response.code === 1) && dispatch(alertSelectors.success('File successfully deleted.'));\r\n                //(response.code === 1) && dispatch(uploadSelectors.remove({id: id, type: type}));\r\n                (response.code === 1) && dispatch(userActions.profile(\"GET\", null, 'delete_photo'));\r\n                (response.code === false) && dispatch(alertSelectors.error(response.message));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst categories = () => {\r\n    return dispatch => {\r\n        defaultService.categories()\r\n            .then(response => {\r\n                dispatch(commonSelectors.categories(response.categories));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst skills = () => {\r\n    return dispatch => {\r\n\r\n        defaultService.skills()\r\n            .then(response => {\r\n                dispatch(commonSelectors.skills(response.skills));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst countries = () => {\r\n    return dispatch => {\r\n        defaultService.countries()\r\n            .then(response => {\r\n                dispatch(commonSelectors.countries(response));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            })\r\n    }\r\n};\r\n\r\nconst questions = () => {\r\n    return dispatch => {\r\n        defaultService.questions()\r\n            .then(response => {\r\n                dispatch(commonSelectors.questions(response.questions));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            })\r\n    }\r\n};\r\n\r\nconst platforms = () => {\r\n    return dispatch => {\r\n        defaultService.platforms()\r\n            .then(response => {\r\n                dispatch(commonSelectors.platforms(response.platforms));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\nconst contact = (params) => {\r\n    return dispatch => {\r\n        defaultService.contact(params)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            })\r\n    }\r\n};\r\n\r\nconst newsletter = (params) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        defaultService.newsletter(params)\r\n            .then(response => {\r\n                (response.code === true) ?\r\n                    dispatch(alertSelectors.success(response.message)) :\r\n                    dispatch(alertSelectors.error(response.message));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n            })\r\n    }\r\n};\r\n\r\n\r\nexport const defaultActions = {\r\n    upload,\r\n    remove,\r\n    categories,\r\n    skills,\r\n    countries,\r\n    questions,\r\n    platforms,\r\n    newsletter,\r\n    contact,\r\n};\r\n\r\n\r\n\r\n","import { alertSelectors, processSelectors, jobSelectors } from \"../selectors\";\r\nimport { itemService, globalService as gs } from \"../../services\";\r\n\r\nconst create = (params) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.job(\"POST\", params)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst update = (id, params) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.job(\"POST\", params)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n\r\n    };\r\n};\r\n\r\n\r\nconst list = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.job(method, params, param2)\r\n            .then(response => {\r\n                dispatch(jobSelectors.list(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n\r\n    };\r\n};\r\n\r\nconst remove = (item_id) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.job(\"DELETE\", { item_id: item_id })\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n\r\n    };\r\n};\r\n\r\nconst index = (method = \"GET\", params = null, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.job(method, params, params2)\r\n            .then(response => {\r\n                switch (params2.is_publish) {\r\n                    case \"publish\":\r\n                        dispatch(jobSelectors.publish(response));\r\n                        break;\r\n                    case \"draft\":\r\n                        dispatch(jobSelectors.draft(response));\r\n                        break;\r\n                    default:\r\n                        dispatch(jobSelectors.item(response));\r\n                }\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst clear = () => {\r\n    return dispatch => {\r\n        dispatch(jobSelectors.clear());\r\n    };\r\n};\r\n\r\nexport const jobActions = {\r\n    index,\r\n    clear,\r\n    create,\r\n    update,\r\n    list,\r\n    remove,\r\n};","import { processSelectors, alertSelectors, serviceSelectors } from \"../selectors\";\r\nimport { itemService } from '../../services';\r\n\r\nconst create = (params) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.service(\"POST\", params)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n            });\r\n    };\r\n};\r\n\r\nconst update = (id, params) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.service(\"POST\", params)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n            });\r\n\r\n    };\r\n};\r\n\r\nconst remove = (item_id) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.service(\"DELETE\", {item_id:item_id})\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n            });\r\n\r\n    };\r\n};\r\n\r\nconst index = (method = \"GET\", params = null, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.service(method, params, params2)\r\n            .then(response => {\r\n                dispatch(serviceSelectors.list(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                console.log( exception );\r\n            });\r\n    };\r\n};\r\n\r\nconst clear = () => {\r\n    return dispatch => {\r\n        dispatch(serviceSelectors.clear());\r\n    };\r\n};\r\n\r\nexport const serviceActions = {\r\n    index,\r\n    create,\r\n    update,\r\n    remove,\r\n    clear,\r\n};\r\n\r\n","import { processSelectors, searchSelectors } from \"../selectors\";\r\nimport { itemService } from \"../../services\";\r\n\r\nconst freelancers = (method = \"GET\", params = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.users(method, params)\r\n            .then(response => {\r\n                dispatch(searchSelectors.freelancers(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                console.log( exception );\r\n            });\r\n    };\r\n};\r\n\r\n//services search\r\nconst services = (method = \"GET\", params = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.services(method, null, params)\r\n            .then(response => {\r\n                dispatch(searchSelectors.services(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n            });\r\n    };\r\n};\r\n//jobs search\r\nconst jobs = (method = \"GET\", params = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.jobs(method, params)\r\n            .then(response => {\r\n                console.log(response)\r\n                dispatch(searchSelectors.jobs(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                console.log( exception );\r\n            });\r\n    };\r\n};\r\n\r\nconst clear = () => {\r\n    return dispatch => {\r\n        dispatch(searchSelectors.clear());\r\n    };\r\n};\r\n\r\n\r\nexport const searchActions = {\r\n    freelancers,\r\n    jobs,\r\n    services,\r\n    clear\r\n};\r\n","import { itemService, globalService as gs } from '../../services';\r\nimport { processSelectors, favoriteSelectors, alertSelectors } from \"../selectors\";\r\n\r\nconst favorites = (method = \"GET\", params = null, param2 = null, key = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.favorite(method, params, param2)\r\n            .then(response => {\r\n                switch(key){\r\n                    case 'jobs':\r\n                        if(method === 'GET') dispatch(favoriteSelectors.jobs(response));\r\n                        break;\r\n                    case 'freelancer':\r\n                        if(method === 'GET') dispatch(favoriteSelectors.freelancers(response));\r\n                        break;\r\n                    case 'co-founder':\r\n                        if(method === 'GET') dispatch(favoriteSelectors.freelancers(response));\r\n                        break;\r\n                    case 'services':\r\n                        if(method === 'GET') dispatch(favoriteSelectors.services(response));\r\n                        break;\r\n                    default:\r\n                }\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst connections = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.connection(method, params, param2)\r\n            .then(response => {\r\n                if(method === 'GET') dispatch(favoriteSelectors.connections(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst add = (data = null, key = null) => {\r\n    return dispatch => {\r\n        switch(key){\r\n            case 'jobs':\r\n                dispatch(favoriteSelectors.jobAdd(data));\r\n                break;\r\n            case 'freelancer':\r\n                dispatch(favoriteSelectors.freelancerAdd(data));\r\n                break;\r\n            case 'co-founder':\r\n                dispatch(favoriteSelectors.freelancerAdd(data));\r\n                break;\r\n            case 'connections':\r\n                dispatch(favoriteSelectors.connectionsAdd(data));\r\n                break;\r\n            case 'services':\r\n                dispatch(favoriteSelectors.serviceAdd(data));\r\n                break;\r\n            default:\r\n        }\r\n    };\r\n};\r\n\r\nconst remove = (data = null, key = null) => {\r\n    return dispatch => {\r\n        switch(key){\r\n            case 'jobs':\r\n                dispatch(favoriteSelectors.jobRemove(data));\r\n                break;\r\n            case 'freelancer':\r\n                dispatch(favoriteSelectors.freelancerRemove(data));\r\n                break;\r\n            case 'co-founder':\r\n                dispatch(favoriteSelectors.freelancerRemove(data));\r\n                break;\r\n            case 'connections':\r\n                dispatch(favoriteSelectors.connectionsRemove(data));\r\n                break;\r\n            case 'services':\r\n                dispatch(favoriteSelectors.serviceRemove(data));\r\n                break;\r\n            default:\r\n        }\r\n        //dispatch(favoriteSelectors.remove(data));\r\n    };\r\n};\r\n\r\nconst clear = () => {\r\n    return dispatch => {\r\n        dispatch(favoriteSelectors.clear());\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const favoriteActions = {\r\n    favorites,\r\n    add,\r\n    connections,\r\n    remove,\r\n    clear\r\n};\r\n\r\n","const UserItem = \"common\\\\models\\\\UserItem\";\r\nconst UserService = \"common\\\\models\\\\UserService\";\r\nconst UserProfile = \"common\\\\models\\\\UserProfile\";\r\nconst UserItemProposal = \"common\\\\models\\\\UserItemProposal\";\r\nconst UserCoFounder = \"common\\\\models\\\\UserCoFounder\";\r\nconst UserConnection = \"common\\\\models\\\\UserConnection\";\r\nconst statuses = () => {\r\n    return {\r\n        status_pending: 0,\r\n        status_declined: 2,\r\n        status_accepted: 1,\r\n        status_bid: 11,\r\n        status_offers: 3,\r\n        status_counter_offers: 9,\r\n        status_payment_confirm: 4,\r\n        status_mark_as_completed: 5,\r\n        status_not_completed: 6,\r\n        status_completed: 7,\r\n        status_accepted_and_closed: 8\r\n    }\r\n};\r\n\r\nconst moduleClass = (moduleType) => {\r\n    let module;\r\n    switch (moduleType) {\r\n        case UserItem:\r\n            module = \"UserItem\";\r\n            break;\r\n        case UserService:\r\n            module = \"UserService\";\r\n            break;\r\n        case UserConnection:\r\n            module = \"UserConnection\";\r\n            break;\r\n        default:\r\n            module = 'All';\r\n    }\r\n    return module;\r\n}\r\n\r\nconst moduleName = (moduleType) => {\r\n    let module;\r\n    switch (moduleType) {\r\n        case \"UserItem\":\r\n            module = UserItem;\r\n            break;\r\n        case \"UserService\":\r\n            module = UserService;\r\n            break;\r\n        case \"UserConnection\":\r\n            module = UserConnection;\r\n            break;\r\n        default:\r\n            module = 'All';\r\n    }\r\n    return module;\r\n}\r\n\r\nconst moduleTitle = (module) => {\r\n    let title;\r\n    switch (module) {\r\n        case UserItem:\r\n            title = \"Jobs\";\r\n            break;\r\n        case UserService:\r\n            title = \"Services\";\r\n            break;\r\n        case UserConnection:\r\n            title = \"Connection\";\r\n            break;\r\n        default:\r\n            title = 'All';\r\n    }\r\n    return title;\r\n}\r\n\r\n\r\nexport const ModuleHelper = {\r\n    UserItem,\r\n    UserService,\r\n    UserProfile,\r\n    UserItemProposal,\r\n    UserCoFounder,\r\n    UserConnection,\r\n    statuses,\r\n    moduleClass,\r\n    moduleName,\r\n    moduleTitle\r\n};\r\n","// eslint-disable-next-line\r\nimport { ModuleHelper as mh } from \"./module.helper\";\r\nimport { globalService as gs } from \"../common/services\";\r\n\r\n\r\nconst isWeb = process.env.REACT_APP_IS_WEB;\r\nconst range = (start, end, step = 1) => {\r\n    return Array(end - start + step).fill().map((_, idx) => start + idx);\r\n};\r\n\r\nconst locationAddress = (address, country) => {\r\n    let location = (address ? address : '');\r\n    location += country ? (',').concat(country.name) : '';\r\n    return location;\r\n};\r\n\r\nconst address = (item) => {\r\n    let location = [];\r\n    //item && (item.hometown || item.location) && (location.push(item.hometown) || location.push(item.location));\r\n    item && item.countryCode && location.push(item.countryCode.name);\r\n    //console.log(item);\r\n    return location.join(\", \");\r\n};\r\n\r\nconst messenger = (text, subject = null, proposal = null, attachment = null) => {\r\n    const params = {};\r\n    const recipients = [];\r\n    proposal.userItemProposalRecipients.map((item) => {\r\n        recipients[item.recipient.id] = {\r\n            id: item.recipient.id,\r\n            avatar: item.recipient.avatar,\r\n            hometown: item.recipient.hometown,\r\n            name: item.recipient.name\r\n        }\r\n    });\r\n    params.user_id = gs.identity.user.id;\r\n    params.recipients = recipients;\r\n    params.text = text;\r\n    let title = subject !== null ? subject : proposal.item.title;\r\n    let groupImage = proposal.item.cover === undefined ? '' : proposal.item.cover;\r\n    let groupImageId = proposal.item.cover_id === undefined ? '' : proposal.item.cover_id;\r\n    params.group = { group_id: proposal.id, title: title, image: groupImage, image_id: groupImageId };\r\n    params.item = { item_id: proposal.id, module: mh.UserItemProposal, moduleType: proposal.moduleId };\r\n    params.attachment = attachment;\r\n    return params;\r\n};\r\n\r\nconst urlParams = ( key, val ) => {\r\n    const searchParams = new URLSearchParams();\r\n    searchParams.set(key, val);\r\n    return searchParams.toString();\r\n};\r\n\r\nexport const commonHelper = {\r\n    range,\r\n    locationAddress,\r\n    address,\r\n    messenger,\r\n    urlParams\r\n};\r\n","const notifyUrl = (item) => {\r\n    let url = '';\r\n    switch (item.action) {\r\n        case 'profile-update':\r\n        case 'register':\r\n        case 'change-email':\r\n        case 'change-password':\r\n        case 'deactivate-account':\r\n        case 'block-user':\r\n        case 'unblock-user':\r\n        case 'password-reset-token':\r\n        case 'upload-avatar':\r\n        case 'upload-banner':\r\n            url = '/user/update';\r\n            break;\r\n        case 'mail-chimp-newsletter':\r\n            url = '/setting/stripe-connect';\r\n            break;\r\n        case 'create-job':\r\n            url = '/jobs';\r\n            break;\r\n        case 'stripe-connect':\r\n            url = '/setting/stripe-connect';\r\n            break;\r\n        case 'create-message':\r\n            url = '/messages';\r\n            break;\r\n        case 'connection-pending':\r\n            url = '/user/connection/received-request';\r\n            break;\r\n        case 'connection-accepted':\r\n            url = '/user/connection/my-cofounder';\r\n            break;\r\n        case 'connection-deactivated':\r\n            url = '/user/connection/sent-request';\r\n            break;\r\n        case 'alert-connect-stripe':\r\n            url = '/user/update';\r\n            break;\r\n        case 'alert-verify-account':\r\n            url = '/user/update';\r\n            break;\r\n        case 'connection-declined':\r\n            url = '/user/connection/sent-request';\r\n            break;\r\n        case 'proposal-offers':\r\n        case 'proposal-counter_offers':\r\n        case 'proposal-accepted':\r\n        case 'proposal-declined':\r\n        case 'proposal-payment_confirm':\r\n        case 'proposal-mark_as_completed':\r\n        case 'proposal-completed':\r\n        case 'proposal-not_completed':\r\n        case 'proposal-dispute':\r\n        case 'proposal-dispute_resolved':\r\n        case 'proposal-rating_review':\r\n        case 'proposal-refund-successful':\r\n        case 'proposal-refund-unsuccessful':\r\n        case 'proposal-payment_transfer':\r\n        case 'proposal-payment_notify_to_admin':\r\n        case 'proposal-refund':\r\n        case 'milestone-new':\r\n        case 'milestone-submission':\r\n        case 'milestone-accepted':\r\n        case 'milestone-declined':\r\n        case 'milestone-payment':\r\n        case 'timesheet-payment':\r\n        case 'timesheet-new':\r\n        case 'timesheet-submission':\r\n        case 'timesheet-accepted':\r\n        case 'timesheet-declined':\r\n            url = `/contracts/view/${item.item_id}`;\r\n            break;\r\n        default:\r\n            url = '/user/update';\r\n    }\r\n    return url;\r\n};\r\n\r\nexport const urlHelper = {\r\n    notifyUrl\r\n};\r\n","import { processSelectors, alertSelectors, messageSelectors } from \"../selectors\";\r\nimport { itemService, globalService as gs } from '../../services';\r\nimport { ModuleHelper as mh } from \"../../../helpers\";\r\n\r\n\r\nconst dbRecipients = (method = \"GET\", params = null, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.recipients(method, params, params2)\r\n            .then(response => {\r\n                dispatch(messageSelectors.recipients(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst index = (params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.message(\"GET\", null, params2)\r\n            .then(response => {\r\n                dispatch(messageSelectors.messages(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst send = (params, params2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        let formData = {\r\n            userMessage: {\r\n                text: params2.message.text\r\n            }\r\n        };\r\n        itemService.message(\"POST\", formData, { message_id: params2.message.message_id })\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst activeMessage = (message, key) => {\r\n    return dispatch => {\r\n        dispatch(messageSelectors.activeMessage(message, key));\r\n    }\r\n};\r\nconst recipients = (users) => {\r\n    return dispatch => {\r\n        dispatch(messageSelectors.recipients(users));\r\n    }\r\n};\r\n\r\nconst sendMessageToFirebase = (data, key = null) => {\r\n\r\n    return dispatch => {\r\n        if (data && data !== undefined) {\r\n            dispatch(processSelectors.start());\r\n            let dateNow = (data.created_at === null || data.created_at === undefined ) ? Date.now() : data.created_at;\r\n            const cId = parseInt(data.user_id);\r\n\r\n            let recipients = [];\r\n            data.recipients && data.recipients.forEach(el => {\r\n                let uId = parseInt(el.id);\r\n                let unread = (el.unread === undefined ? 0 : el.unread);\r\n                recipients[uId] = (uId === cId) ? { id: uId, status: 'read', unread: unread } : { id: uId, status: 'unread', unread: unread };\r\n            });\r\n\r\n            let is_attachment = (((data.attachment === false) || (data.attachment === null)) ? false : true);\r\n\r\n            if (is_attachment === true) {\r\n                const attachments = { id: dateNow, key: key, files: data.attachment };\r\n                data.attachment = attachments;\r\n            }\r\n            let message = {\r\n                text: data.text,\r\n                recipients: recipients,\r\n                is_attachment: is_attachment,\r\n                deleted: {},\r\n                sender: cId,\r\n                created_at: dateNow,\r\n                updated_at: dateNow,\r\n            };\r\n\r\n            const userMessage = {\r\n                message: message,\r\n                recipients: {\r\n                    message: message,\r\n                    recipients: recipients,\r\n                    is_attachment: is_attachment,\r\n                    group: data.group,\r\n                    item: data.item,\r\n                    created_at: dateNow,\r\n                    updated_at: dateNow,\r\n                },\r\n                group: (key === null || key === undefined) ? data.group : null,\r\n                item: (key === null || key === undefined) ? data.item : null,\r\n            };\r\n\r\n            /*if (data.attachment !== null) {\r\n                userMessage.attachment = data.attachment\r\n            }*/\r\n\r\n            gs.messageToFirebase(userMessage, key).then((messageKey) => {\r\n                if (data.item && ((messageKey !== '') || (messageKey !== null))) {\r\n                    if (data.item.module === mh.UserConnection) {\r\n                        itemService.connection(\"POST\", { messageKey, recipients }, { key: 'connection-message' });\r\n                        gs.navigation('connection-message',false, { key: messageKey });\r\n                    } else {\r\n                        const proposal_id = data.item.item_id;\r\n                        itemService.proposal(\"POST\", { userProposal: { message_id: messageKey } }, { proposal_id: proposal_id });\r\n                    }\r\n                }\r\n            });\r\n\r\n            dispatch(alertSelectors.success(\"Sent.\"));\r\n            dispatch(processSelectors.stop());\r\n            return true;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst clear = () => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        dispatch(messageSelectors.clear());\r\n        dispatch(processSelectors.stop());\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const messageActions = {\r\n    index,\r\n    dbRecipients,\r\n    send,\r\n    clear,\r\n    sendMessageToFirebase,\r\n    activeMessage,\r\n    recipients\r\n};\r\n\r\n","import { itemService, globalService as gs } from '../../services';\r\nimport { processSelectors, alertSelectors, proposalSelectors } from \"../selectors\";\r\nimport { messageActions } from './message.actions';\r\nimport { commonHelper as common, ModuleHelper as mh } from '../../../helpers';\r\nimport {history} from \"../../../helpers/history\";\r\n\r\n\r\nconst index = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.proposal(method, params, param2)\r\n            .then(response => {\r\n                dispatch(proposalSelectors.items(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst proposal = (method = \"GET\", params = null, param2 = null, redirectTo = null) => {\r\n\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.proposal(method, params, param2)\r\n            .then(response => {\r\n\r\n                if (((method === 'POST') || (method === 'GET') || (method === 'DELETE')) && (response.code === true)) {\r\n                    (method !== 'DELETE') && dispatch(proposalSelectors.item(response));\r\n                    (method === 'POST') && dispatch(alertSelectors.success(response.message));\r\n                    if (method === 'DELETE') {\r\n                        dispatch(alertSelectors.success(response.message));\r\n                        history.push(`/offers/sent/jobs/cash`) ;\r\n                    }\r\n                    if (response.recipients !== null) {\r\n                        gs.isNotified(response.recipients);\r\n                        if (response.model && response.model.message_id === null && response.model.moduleId === mh.UserService) {\r\n                            let messenger = common.messenger(response.model.comment, response.model.title, response.model);\r\n                            dispatch(messageActions.sendMessageToFirebase(messenger));\r\n                        }\r\n                    }\r\n                    redirectTo && gs.navigation(redirectTo);\r\n                } else {\r\n                    (response.message !== '') && dispatch(alertSelectors.error(response.message));\r\n                }\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\n\r\n\r\nconst review = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.review(method, params, param2)\r\n            .then(response => {\r\n                if (method === 'POST') {\r\n                    (response.code === true) ?\r\n                        dispatch(alertSelectors.success(response.message)) :\r\n                        dispatch(alertSelectors.error(response.message));\r\n                }\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst milestone = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.milestone(method, params, param2)\r\n            .then(response => {\r\n                if (method === 'POST') {\r\n                    (response.code === true)\r\n                        ? dispatch(alertSelectors.success(response.message))\r\n                        : dispatch(alertSelectors.error(response.message));\r\n\r\n                    if (response.recipients !== null) {\r\n                        gs.isNotified(response.recipients);\r\n                    }\r\n                }\r\n\r\n                dispatch(proposal(\"GET\", null, { proposal_id: param2.proposal_id }));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst dispute = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.dispute(method, params, param2)\r\n            .then(response => {\r\n                if (method === 'POST') {\r\n                    (response.code === true) ?\r\n                        dispatch(alertSelectors.success(response.message)) :\r\n                        dispatch(alertSelectors.error(response.message));\r\n                    gs.isNotified(response.recipients);\r\n                }\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst clear = () => {\r\n    return dispatch => {\r\n        dispatch(proposalSelectors.clear());\r\n    }\r\n};\r\n\r\nexport const proposalActions = {\r\n    index,\r\n    proposal,\r\n    review,\r\n    milestone,\r\n    clear,\r\n    dispute\r\n};","import { alertSelectors, processSelectors, blogSelectors } from \"../selectors\";\r\nimport { itemService, globalService as gs} from \"../../services\";\r\n\r\nconst item = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.item(method, params, param2)\r\n            .then(response => {\r\n                dispatch(blogSelectors.list(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst categories = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.categories(method, params, param2)\r\n            .then(response => {\r\n                dispatch(blogSelectors.categories(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst reactions = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.reactions(method, params, param2)\r\n            .then(response => {\r\n                //dispatch(blogSelectors.re(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst comment = (method = \"POST\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.comment(method, params, param2)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst reply = (method = \"POST\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        itemService.reply(method, params, param2)\r\n            .then(response => {\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst clear = () => {\r\n    return dispatch => {\r\n        dispatch(blogSelectors.clear());\r\n    };\r\n};\r\n\r\nexport const blogAction = {\r\n    item,\r\n    categories,\r\n    reactions,\r\n    comment,\r\n    reply,\r\n    clear\r\n};","import {defaultService, globalService as gs} from '../../services';\r\nimport {alertSelectors} from \"../selectors/alert.selectors\";\r\nimport {processSelectors} from \"../selectors/process.selectors\";\r\nimport {notificationSelectors} from \"../selectors\";\r\n\r\n\r\nconst list = (params = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        defaultService.notification(params)\r\n            .then(response => {\r\n                dispatch(notificationSelectors.list(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst pull = (method = \"GET\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        defaultService.notificationPull(method, params, param2 )\r\n            .then(response => {\r\n                dispatch(notificationSelectors.pull(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst read = (params = null) => {\r\n    console.log('params', params);\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        defaultService.notificationRead(params)\r\n            .then(response => {\r\n                dispatch(notificationSelectors.read(response));\r\n                dispatch(processSelectors.stop());\r\n                dispatch(alertSelectors.success(response.message));\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst trash = (method = \"POST\", params = null, param2 = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        defaultService.notificationDelete(method, params, param2 )\r\n            .then(response => {\r\n                dispatch(notificationSelectors.trash(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nconst actions = (params = null) => {\r\n    return dispatch => {\r\n        dispatch(processSelectors.start());\r\n        defaultService.notificationActions(params)\r\n            .then(response => {\r\n                dispatch(notificationSelectors.actions(response));\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n};\r\n\r\nexport const notificationActions = {\r\n    list,\r\n    pull,\r\n    read,\r\n    trash,\r\n    actions,\r\n};\r\n\r\n","import validator from 'validator';\r\n\r\nclass FormValidator {\r\n\r\n    constructor(validations) {\r\n        // validations is an array of validation rules specific to a form\r\n        this.validations = validations;\r\n        this.refs = null;\r\n    }\r\n\r\n    validate(state, refs = null) {\r\n        // start out assuming valid\r\n        let validation = this.valid();\r\n        this.refs = refs;\r\n\r\n        // for each validation rule\r\n        this.validations.forEach(rule => {\r\n\r\n            // if the field hasn't already been marked invalid by an earlier rule\r\n            if (!validation[rule.field].isInvalid) {\r\n                // determine the field value, the method to invoke and optional args from\r\n                // the rule definition\r\n                const field_value = state[rule.field].toString();\r\n                const args = rule.args || [];\r\n                const validation_method =\r\n                    typeof rule.method === 'string' ?\r\n                        validator[rule.method] :\r\n                        rule.method;\r\n\r\n                //if(rule.method == 'equals'){\r\n                //console.log(validation_method);\r\n                //}\r\n\r\n\r\n                // call the validation_method with the current field value as the first\r\n                // argument, any additional arguments, and the whole state as a final\r\n                // argument.  If the result doesn't match the rule.validWhen property,\r\n                // then modify the validation object for the field and set the isValid\r\n                // field to false\r\n\r\n                let validMethod = validation_method(field_value, ...args, state);\r\n                if (validMethod !== rule.validWhen) {\r\n                    validation[rule.field] = { isInvalid: true, message: rule.message };\r\n                    validation.isValid = false;\r\n                    if (this.refs) {\r\n                        this.showErrors(rule);\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        return validation;\r\n    }\r\n\r\n    showErrors(rule) {\r\n        //const ref = this.refs[rule.field];\r\n        //console.log(rule.field + '  ' + new  Date().toLocaleString()  );\r\n        //ref.className =  `${ref.className} is-invalid`;\r\n    }\r\n\r\n    valid() {\r\n        const validation = {};\r\n        this.validations.map(rule => (\r\n            validation[rule.field] = { isInvalid: false, message: '' }\r\n        ));\r\n        return { isValid: true, ...validation };\r\n    }\r\n}\r\n\r\nexport default FormValidator;\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\nconst DocumentTitle = ({ title, description }) => {\r\n    var defaultTitle = 'Jobarter';\r\n    var defaultDescription = 'This is a different description for this route.';\r\n    return (\r\n        <Helmet>\r\n            <title>{title ? `${defaultTitle} | ${title}` : defaultTitle}</title>\r\n            <meta name=\"description\" content={description ? description : defaultDescription} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport { DocumentTitle };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport { Link } from 'react-router-dom';\r\nimport LaddaButton, { EXPAND_RIGHT } from 'react-ladda';\r\nimport { authActions } from \"../../../common/redux/actions\";\r\nimport FormValidator from '../../../helpers/FormValidator';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { globalService as gs } from \"../../../common/services\";\r\nimport { Button } from '@material-ui/core';\r\nimport { Animated } from \"react-animated-css\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n//import GoogleLogin from 'react-google-login';\r\n//import LinkedIn from \"linkedin-login-for-react\";\r\n//import FacebookLogin from 'react-facebook-login';\r\n//import auth from '../../../common/utils/social-auth.json';\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        // reset login status\r\n        this.state = {\r\n            formField: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            isSignedIn: false,\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n    }\r\n\r\n    uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n            //firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n            //firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n            //firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n            signInSuccess: () => false\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const { dispatch } = this.props;\r\n        //globalService.firebaseLogout();\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            this.setState({ isSignedIn: !!user });\r\n            if (user !== null) {\r\n                dispatch(authActions.loginByAuth(user.providerData, { authclient: 'google' }));\r\n            } else {\r\n                console.log(\"user not login\", user);\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'username', method: 'isEmpty', validWhen: false, message: 'Email is required.' },\r\n            { field: 'username', method: 'isEmail', validWhen: true, message: 'Email is not valid.' },\r\n            { field: 'password', method: 'isEmpty', validWhen: false, message: 'Password is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n        if (validation.isValid) {\r\n            // handle actual form submission here\r\n            const { dispatch } = this.props;\r\n            dispatch(authActions.login(formField));\r\n        }\r\n    };\r\n\r\n    resendVerification = () => {\r\n        const { dispatch, alert } = this.props;\r\n        dispatch(authActions.resendVerification({ user_id: alert.user_id }, { user_id: alert.user_id }));\r\n    }\r\n\r\n    accessToken = (token) => {\r\n        return (new Blob([JSON.stringify({ access_token: token }, null, 2)], { type: 'application/json' }));\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { formField, validation, submitted } = this.state;\r\n        const { alert } = this.props;\r\n        const { username, password } = formField;\r\n        let isValid = this.submitted ?\r\n            this.validator().validate(formField) :\r\n            validation;\r\n        if (alert && alert.user_id) gs.firebaseLogout();\r\n\r\n        return (\r\n            <main className=\"login-wrap\">\r\n                <DocumentTitle title={`Login`} />\r\n                <div className=\"login-container d-flex flex-wrap justify-content-center\">\r\n                    <div className=\"login-form col-lg-12 col-md-12 order-md-2 d-flex flex-wrap align-items-center\">\r\n                        <div className=\"login-box mx-auto col\">\r\n                            <form name=\"form\" onSubmit={this.handleSubmit} noValidate>\r\n                                <div className=\"logo\">\r\n                                    <Link to=\"/\">\r\n                                        <img src=\"/images/logo.svg\" alt=\"\" className=\"img-fluid\" />\r\n                                    </Link>\r\n                                </div>\r\n                                <h2>Welcome Back</h2>\r\n                                {!this.state.isSignedIn &&\r\n                                    <StyledFirebaseAuth className={'fireLogin'}\r\n                                        uiConfig={this.uiConfig}\r\n                                        firebaseAuth={firebase.auth()}\r\n                                    />}\r\n                                <div className=\"OrDiv\">\r\n                                    <div className=\"line\"></div>\r\n                                    <div className=\"center\">OR</div>\r\n                                    <div className=\"line\"></div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group\">\r\n                                            {/* <label htmlFor=\"username\">Email</label> */}\r\n                                            <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange}\r\n                                                placeholder=\"Email\"\r\n                                                autoFocus\r\n                                                className={'form-control ' + (submitted && isValid.username.isInvalid ? 'is-invalid' : '')} />\r\n                                            {submitted && validation.username.isInvalid &&\r\n                                                <div className=\"invalid-feedback\"> {isValid.username.message} </div>\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            {/* <label htmlFor=\"password\">Password</label> */}\r\n                                            <input type=\"password\" name=\"password\" value={password}\r\n                                                placeholder=\"Password\"\r\n                                                onChange={this.handleChange}\r\n                                                className={'form-control ' + (submitted && isValid.password.isInvalid ? 'is-invalid' : '')} />\r\n                                            {submitted && validation.password.isInvalid &&\r\n                                                <div className=\"invalid-feedback\"> {isValid.password.message} </div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"forgotPassword\">\r\n                                            <span style={{float: \"left\"}}>\r\n                                                <Checkbox\r\n                                                    size=\"medium\"\r\n                                                    color=\"primary\"\r\n                                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                                />\r\n                                                Remember me\r\n                                            </span>\r\n                                            <Link to=\"/forgot-password\" style={{ fontWeight: 'bold' }}>Forgot Password ?</Link>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <LaddaButton className=\"btn btn-info btn-block\" loading={this.props.process.loading} data-style={EXPAND_RIGHT}>Sign In</LaddaButton>\r\n                                        </div>\r\n                                        {(alert && alert.user_id) && <div className=\"form-group or text-light text-center\" style={{ fontSize: '12px', marginBottom: '0px' }}>\r\n                                            Your Email is not verified yet. If you did not received a verification email then please click\r\n                                            <button className=\"btn btn-link\" type=\"button\" onClick={this.resendVerification}>Resend</button>\r\n                                        </div>}\r\n                                        {/* <div className=\"form-group or text-light text-center\">\r\n                                                or login with\r\n                                            </div> */}\r\n                                        <div className=\"hrDiv\"></div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        {this.state.isSignedIn &&\r\n                                            <Button type=\"button\" className=\"btn btn-primary\" onClick={() => gs.firebaseLogout()}>Logout</Button>\r\n                                        }\r\n\r\n                                        {/*\r\n                                            <StyledFirebaseAuth className={'fireLogin'}\r\n                                                uiConfig={this.uiConfig}\r\n                                                firebaseAuth={firebase.auth()}\r\n                                            />\r\n                                        */}\r\n\r\n                                        <div className=\"login\">\r\n                                            Don't have an account?<Link to={'/register'}> Sign Up</Link>\r\n                                        </div>\r\n                                        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n                                            <img style={{ height: 44 }} src=\"https://www.f-cdn.com/assets/main/en/assets/login-signup/app-store-badges/apple-app-store-badge.png\" />\r\n                                            <img style={{ height: 44 }} src=\"https://www.f-cdn.com/assets/main/en/assets/login-signup/app-store-badges/google-play-store-badge.png\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* <div className=\"login-bg order-md-1 d-flex flex-wrap align-items-end\"\r\n                        style={{ backgroundImage: `url('/images/signup-bg@2x.png')` }}>\r\n                        <div className=\"caption\">\r\n                            <Animated animationInDuration={1500} animationIn=\"slideInUp\">\r\n                                <div className=\"text\">As a freelancer for the past four years, JoBarter is exactly what I need to take my business to the next level.\r\n                            </div>\r\n\r\n                                <h4>Hilda Schwartz</h4>\r\n                                <h6>Manhattan, New York</h6>\r\n                            </Animated>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst alertSelector = createSelector(\r\n    state => state.alert,\r\n    alert => alert\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authSelector,\r\n    processSelector,\r\n    alertSelector,\r\n    (authentication, process, alert) => ({\r\n        authentication, process, alert\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport FormValidator from \"../../../helpers/FormValidator\";\r\nimport LaddaButton, { EXPAND_RIGHT } from 'react-ladda';\r\nimport { authActions } from \"../../../common/redux/actions\";\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { globalService as gs } from '../../../common/services';\r\nimport { Animated } from \"react-animated-css\";\r\nimport { StyledFirebaseAuth } from 'react-firebaseui';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // reset login status\r\n        //this.props.dispatch(authActions.logout());\r\n\r\n        this.state = {\r\n            formField: {\r\n                email: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                password: '',\r\n                confirm_password: '',\r\n                terms: 1,\r\n            },\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n            loading: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'email', method: 'isEmpty', validWhen: false, message: 'Email is required.' },\r\n            { field: 'email', method: 'isEmail', validWhen: true, message: 'Email is not valid.' },\r\n            { field: 'first_name', method: 'isEmpty', validWhen: false, message: 'First Name is required.' },\r\n            { field: 'last_name', method: 'isEmpty', validWhen: false, message: 'Last Name is required.' },\r\n            { field: 'password', method: 'isEmpty', validWhen: false, message: 'Password is required.' },\r\n            { field: 'confirm_password', method: 'isEmpty', validWhen: false, message: 'Confirm Password is required.' },\r\n            { field: 'confirm_password', method: this.handleConfirmPassword, validWhen: true, message: 'Confirm Password is not match.' },\r\n            { field: 'terms', method: 'isEmpty', validWhen: false, message: 'Terms & condition should be checked.' },\r\n        ]);\r\n    };\r\n\r\n    handleConfirmPassword = (password) => {\r\n        return (password === this.state.formField.password);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validation = this.validator().validate(this.state.formField);\r\n        this.setState({ validation, submitted: true });\r\n\r\n        if (validation.isValid) {\r\n            // handle actual form submission here\r\n            const { dispatch } = this.props;\r\n            dispatch(authActions.register(this.state.formField));\r\n        }\r\n    };\r\n\r\n    uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n            //firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n            //firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n            //firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n            signInSuccess: () => false\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { process } = this.props;\r\n        if (gs.identity) {\r\n            return (<Redirect to='/job-search' />)\r\n        }\r\n\r\n        /*\r\n        user:{\r\n            \"username\": \"mganesh\",\r\n            \"email\":\"mganesh.alkurn@gmail.com\",\r\n            \"first_name\": \"Mganesh\",\r\n            \"last_name\": \"Mankar\",\r\n            \"password\":\"alkurn@123#.\",\r\n            \"confirm_password\":\"alkurn@123#.\",\r\n            \"terms\":1\r\n        },\r\n        media:{{},{},{}},\r\n        skill:{{},{},{}},\r\n\r\n        *\r\n        *\r\n        * */\r\n\r\n        // otherwise just use what's in state\r\n\r\n        //const {loggingIn} = this.props;\r\n        let validation = this.submitted ?                         // if the form has been submitted at least once\r\n            this.validator().validate(this.state.formField) :    // then check validity every time we render\r\n            this.state.validation;\r\n        const { email, first_name, last_name, password, confirm_password } = this.state.formField;\r\n        const submitted = this.state.submitted;\r\n\r\n        return (\r\n            <main className=\"login-wrap\">\r\n                <DocumentTitle title={`Register`} />\r\n                <div className=\"login-container d-flex flex-wrap justify-content-center\">\r\n                    <div className=\"login-form col-lg-12 col-md-12 order-md-2 d-flex flex-wrap align-items-center\">\r\n\r\n                        <div className=\"login-box mx-auto\">\r\n                            <form name=\"form\" onSubmit={this.handleSubmit} noValidate>\r\n                                <div className=\"logo\">\r\n                                    <Link to=\"/\">\r\n                                        <img src=\"images/logo.svg\" alt=\"\" className=\"img-fluid\" />\r\n                                    </Link>\r\n                                </div>\r\n                                <h2>Sign Up</h2>\r\n                                {/* <h5>Already have an account? <Link to=\"/login\">Sign In</Link></h5>\r\n                                {!this.state.isSignedIn &&\r\n                                    <StyledFirebaseAuth className={'fireLogin'}\r\n                                        uiConfig={this.uiConfig}\r\n                                        firebaseAuth={firebase.auth()}\r\n                                    />}\r\n                                <div className=\"OrDiv\">\r\n                                    <div className=\"line\"></div>\r\n                                    <div className=\"center\">OR</div>\r\n                                    <div className=\"line\"></div>\r\n                                </div> */}\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group\">\r\n                                            {/* <label htmlFor=\"first_name\">First Name</label> */}\r\n                                            <input type=\"text\" name=\"first_name\" value={first_name} onChange={this.handleChange}\r\n                                                placeholder=\"First Name\"\r\n                                                className={'form-control ' + (submitted && validation.first_name.isInvalid ? ' is-invalid' : '')} />\r\n                                            {submitted && validation.first_name.isInvalid &&\r\n                                                <div className=\"invalid-feedback\">{validation.first_name.message}</div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group\">\r\n                                            {/* <label htmlFor=\"last_name\">Last Name</label> */}\r\n                                            <input type=\"text\" name=\"last_name\" value={last_name} onChange={this.handleChange}\r\n                                                placeholder=\"Last Name\"\r\n                                                className={'form-control ' + (submitted && validation.last_name.isInvalid ? 'is-invalid' : '')} />\r\n                                            {submitted && validation.last_name.isInvalid &&\r\n                                                <div className=\"invalid-feedback\">{validation.last_name.message}</div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group\">\r\n                                            {/* <label htmlFor=\"email\">Email</label> */}\r\n                                            <input type=\"text\" name=\"email\" value={email} onChange={this.handleChange}\r\n                                                placeholder=\"Email\"\r\n                                                className={'form-control ' + (submitted && validation.email.isInvalid ? 'is-invalid' : '')} />\r\n                                            {submitted && validation.email.isInvalid &&\r\n                                                <div className=\"invalid-feedback\">{validation.email.message}</div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            {/* <label htmlFor=\"password\">Password</label> */}\r\n                                            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange}\r\n                                                placeholder=\"Password\"\r\n                                                className={'form-control ' + (submitted && validation.password.isInvalid ? 'is-invalid' : '')} />\r\n                                            {submitted && validation.password.isInvalid &&\r\n                                                <div className=\"invalid-feedback\">{validation.password.message}</div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            {/* <label htmlFor=\"confirm_password\">Confirm Password</label> */}\r\n                                            <input type=\"password\" name=\"confirm_password\" value={confirm_password} onChange={this.handleChange}\r\n                                                placeholder=\"Confirm Password\"\r\n                                                className={'form-control ' + (submitted && validation.confirm_password.isInvalid ? 'is-invalid' : '')} />\r\n                                            {submitted && validation.confirm_password.isInvalid &&\r\n                                                <div className=\"invalid-feedback\">{validation.confirm_password.message}</div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <LaddaButton className=\"btn btn-info btn-block\" loading={process.loading} data-style={EXPAND_RIGHT}>Join Jobarter</LaddaButton>\r\n                                        </div>\r\n                                        {/* <div className=\"form-group or text-light text-center\">\r\n                                            or signup with\r\n                                        </div> */}\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        {/* <ul className=\"social-login nav nav-pills nav-justified\">\r\n                                            <li className=\"nav-item\"><Link to=\"#\" className=\"nav-link\"><img src=\"/images/facebook.png\"\r\n                                                                                                            alt=\"\"/> Facebook</Link></li>\r\n                                            <li className=\"nav-item\"><Link to=\"#\" className=\"nav-link\"><img src=\"/images/google.svg\"\r\n                                                                                                            alt=\"\"/> Google</Link></li>\r\n                                            <li className=\"nav-item\"><Link to=\"#\" className=\"nav-link\"><img src=\"/images/linkedin.svg\"\r\n                                                                                                            alt=\"\"/> Linkedin</Link></li>\r\n                                        </ul> */}\r\n                                        <h5>Already have an account? <Link to=\"/login\">Sign In</Link></h5>\r\n                                        <div className=\"privacy\">\r\n                                            <span className=\"text-light\">By clicking “Create an account”</span> I <Link to=\"/privacy-policy\">agree to\r\n                                            JoBarter’s</Link> Terms of Service <span className=\"text-light\">and</span> Privacy Policy.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    {/* <Animated animationIn=\"bounceInLeft\" animationOut=\"fadeOut\" isVisible={true}></Animated> */}\r\n                    {/* <div className=\"login-bg col-lg-5 col-md-5 order-md-1 d-flex flex-wrap align-items-end\"\r\n                        style={{ backgroundImage: `url('/images/freelancer-working.jpeg')` }}>\r\n                        <div className=\"caption\">\r\n                        <Animated animationInDuration={1500} animationIn=\"slideInUp\">\r\n\r\n                            <div className=\"text\">As a millennial who values flexible and meaningful work purpose, JoBarter gives me the freedom to work at home and anywhere I want on my own terms.\r\n                            </div>\r\n                            <h4>Paul McConnell</h4>\r\n                            <h6>Cleveland, Ohio</h6>\r\n                            </Animated>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authSelector,\r\n    processSelector,\r\n    (authentication, process) => ({\r\n        authentication, process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport LaddaButton, {EXPAND_RIGHT} from 'react-ladda';\r\nimport FormValidator from '../../helpers/FormValidator';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {authActions} from \"../../common/redux/actions\";\r\nimport { DocumentTitle } from '../../helpers/DocumentTitle';\r\nimport { globalService as gs } from '../../common/services';\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                email: '',\r\n            },\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    validator() {\r\n        return new FormValidator([\r\n            {field: 'email', method: 'isEmpty', validWhen: false, message: 'Email is required.'},\r\n            {field: 'email', method: 'isEmail', validWhen: true, message: 'Email is not valid.'},\r\n        ]);\r\n    };\r\n\r\n    handleChange(e) {\r\n        let formField = {...this.state.formField};\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({formField});\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const {formField, } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({validation, submitted: true});\r\n        if (validation.isValid) {\r\n            // handle actual form submission here\r\n            const {dispatch} = this.props;\r\n            dispatch(authActions.forgotPassword(formField));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (gs.identity) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n        const {formField, submitted, validation} = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        const {email} = formField;\r\n\r\n        return (<main className=\"login-wrap\">\r\n            <DocumentTitle title={`Forgot Password`}/>\r\n            <div className=\"login-container container d-flex flex-wrap justify-content-center\">\r\n                <div className=\"login-form order-md-2 d-flex flex-wrap align-items-center\">\r\n                    <div className=\"login-box mx-auto\">\r\n                        <form style={{width: '420px'}} name=\"forgot\" onSubmit={this.handleSubmit} noValidate>\r\n                            <div className=\"logo text-center\">\r\n                                <Link to=\"/\">\r\n                                    <img src=\"images/logo.svg\" alt=\"\" className=\"img-fluid\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <h2 className=\"text-center\">Forgot password?</h2>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Email</label>\r\n                                        <input type=\"email\" name=\"email\" value={email} onChange={this.handleChange}\r\n                                               className={'form-control ' + (submitted && isValid.email.isInvalid ? 'is-invalid' : '')}/>\r\n                                        {submitted && isValid.email.isInvalid &&\r\n                                        <div className=\"invalid-feedback\"> {isValid.email.message} </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <LaddaButton className=\"btn btn-info btn-block\" loading={this.props.process.loading}\r\n                                                     data-style={EXPAND_RIGHT}>Submit</LaddaButton>\r\n                                    </div>\r\n                                    <div className=\"form-group or text-light text-center\">\r\n                                        Back to <Link to=\"/login\">Login</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>);\r\n    }\r\n}\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    authSelector,\r\n    processSelector,\r\n    (authentication, process) => ({\r\n        authentication, process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ForgotPassword);\r\n","import React, {Component} from 'react';\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport LaddaButton, {EXPAND_RIGHT} from 'react-ladda';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {authActions} from \"../../common/redux/actions\";\r\nimport { DocumentTitle } from '../../helpers/DocumentTitle';\r\nimport { globalService as gs } from '../../common/services';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n\r\n\r\nclass ResetPassword extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                password: '',\r\n                password_repeat: '',\r\n            },\r\n            submitted: false,\r\n            //validation: this.validator().valid(),\r\n        };\r\n        this.validator = new SimpleReactValidator({\r\n            autoForceUpdate: this,\r\n            className: 'text-danger',\r\n            messages: {\r\n                password_repeat: 'Confirm Password is required.'\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        this.token = query.get('token');\r\n    }\r\n\r\n    /*validator() {\r\n        return new FormValidator([\r\n            {field: 'password', method: 'isEmpty', validWhen: false, message: 'Password is required.'},\r\n            {field: 'password_repeat', method: 'isEmpty', validWhen: false, message: 'Confirm Password is required.'},\r\n            {field: 'password_repeat', method: this.handleConfirmPassword, validWhen: true, message: 'Confirm Password is not match.'}\r\n        ]);\r\n    };*/\r\n\r\n    handleConfirmPassword = (password) => {\r\n        return (password === this.state.formField.password);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = {...this.state.formField};\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({formField});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( this.validator.allValid() ){\r\n            const {dispatch} = this.props;\r\n            dispatch(authActions.resetPassword(this.state.formField, { 'token': this.token}));\r\n        } else {\r\n            this.validator.showMessages();\r\n        }\r\n        /*return false;\r\n        const validation = this.validator().validate(this.state.formField);\r\n        this.setState({validation, submitted: true});\r\n        if (validation.isValid) {\r\n            // handle actual form submission here\r\n        }*/\r\n    }\r\n\r\n    render() {\r\n        if (gs.identity) {\r\n            return (<Redirect to='/' />)\r\n        }\r\n\r\n        //const {password, password_repeat} = this.state.formField;\r\n        //let validation = this.submitted ? this.validator().validate(this.state.formField) : this.state.validation;\r\n        //const submitted = this.state.submitted;\r\n        const { formField } = this.state;\r\n        return (<main className=\"login-wrap\">\r\n            <DocumentTitle title={`Reset Password`}/>\r\n            <div className=\"login-container container d-flex flex-wrap justify-content-center\">\r\n                <div className=\"login-form order-md-2 d-flex flex-wrap align-items-center\">\r\n                    <div className=\"login-box mx-auto\">\r\n                        <form style={{width: '420px'}} name=\"forgot\" onSubmit={this.handleSubmit} noValidate>\r\n                            <div className=\"logo text-center\">\r\n                                <Link to=\"/\">\r\n                                    <img src=\"images/logo.svg\" alt=\"\" className=\"img-fluid\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <h2 className=\"text-center\">Reset password?</h2>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        <input type=\"password\" name=\"password\" onChange={this.handleChange} className={'form-control '} />\r\n                                        {this.validator.message('password', formField.password, 'required|min:6')}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password_repeat\">Confirm Password</label>\r\n                                        <input type=\"password\" name=\"password_repeat\" onChange={this.handleChange} className={'form-control '} />\r\n                                        {/*this.validator.message('password_repeat', formField.password, `required|in:${formField.password}`)*/}\r\n                                        {this.validator.message('password_repeat', formField.password_repeat, `required|in:${formField.password}`, {messages: {in: 'Passwords need to match!', required: 'Confirm Password is required.'}})}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <LaddaButton className=\"btn btn-info btn-block\" loading={this.props.process.loading} data-style={EXPAND_RIGHT}>Submit</LaddaButton>\r\n                                    </div>\r\n                                    <div className=\"form-group or text-light text-center\">\r\n                                        Back to <Link to=\"/login\">Login</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>);\r\n    }\r\n}\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    userSelector,\r\n    processSelector,\r\n    (user, process) => ({\r\n        user, process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ResetPassword);\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {authActions} from \"../../common/redux/actions\";\r\nimport { DocumentTitle } from '../../helpers/DocumentTitle';\r\nimport { globalService as gs } from '../../common/services';\r\n\r\n\r\nclass EmailVerify extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const token = query.get('token');\r\n        const {dispatch} = this.props;\r\n        dispatch(authActions.emailVerification(token));\r\n    }\r\n\r\n    render() {\r\n\r\n        if (gs.identity) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (<main className=\"login-wrap\">\r\n            <DocumentTitle title={`Email Verify`}/>\r\n        </main>);\r\n    }\r\n}\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    userSelector,\r\n    processSelector,\r\n    (user, process) => ({\r\n        user, process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(EmailVerify);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { FormControl, Select, MenuItem, Button, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { history } from '../../../helpers/history';\r\n\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: 'jobs',\r\n            value: '',         \r\n            submitted: false,\r\n            loading: false,\r\n        };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        //this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.props.history && this.props.history.listen((location, action) => {\r\n            const { history } = this.props;\r\n            if (location && location.search) {\r\n                if(history !== undefined) {\r\n                    this.checkUrl(history && history.location);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    \r\n    handleChange(event) {\r\n        let formField = this.state;\r\n        formField[event.target.name] = event.target.value;\r\n        this.setState(formField);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProp) {\r\n        let search = new URLSearchParams(nextProp.search);\r\n        const { history } = this.props;\r\n        if(history !== undefined) {\r\n            this.checkUrl(history && history.location);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { history } = this.props;\r\n        if(history !== undefined) {\r\n            this.checkUrl(history && history.location);\r\n        }\r\n    }\r\n\r\n    checkUrl(location) {\r\n        const search = new URLSearchParams(location.search);\r\n        switch(location.pathname) {\r\n            case '/service-search':\r\n                this.setState({value: ((search.get(\"title\") !== null) ? search.get(\"title\") : ''), category: 'services'});\r\n                break;\r\n            case '/freelancer-search':\r\n                this.setState({value: ((search.get(\"name\") !== null) ? search.get(\"name\") : ''), category: 'freelancers'});\r\n                break;\r\n            case '/cofounders-search':\r\n                this.setState({value: ((search.get(\"name\") !== null) ? search.get(\"name\") : ''), category: 'co-founder'});\r\n                break;\r\n            case '/job-search':\r\n                this.setState({value: ((search.get(\"name\") !== null) ? search.get(\"name\") : ''), category: 'jobs'});\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const { value, category } = this.state;\r\n        if(category && category.length < 0) {\r\n            alert('Please select dropdown option')\r\n        }\r\n        if((value && value.length < 0) || (value && value === null)) {\r\n            alert('Please select less than 1 word')\r\n        }\r\n        switch(category) {\r\n            case 'services':\r\n                history.push('/service-search?title=' + value);\r\n                break;\r\n            case 'freelancers':\r\n                history.push('/freelancer-search?name=' + value);\r\n                break;\r\n            case 'jobs':\r\n                history.push('/job-search?name=' + value);\r\n                break;\r\n            case 'co-founder':\r\n                history.push('/cofounders-search?name=' + value);\r\n                break;\r\n            default:\r\n        }\r\n        //alert(this.state.category.length + '===' + this.state.value);\r\n    }\r\n\r\n    render() {\r\n        const { category, value} = this.state;\r\n        //console.log('Seact js', this.props);\r\n        return (\r\n            <Fragment>\r\n                <form className=\"form-inline order-1 ml-lg-5\" onSubmit={this.handleSubmit.bind(this)}>\r\n                    <div className=\"input-group\" style={{maxWidth:\"90vw\",margin:\"0 auto\"}}>\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                <FormControl variant=\"outlined\">\r\n                                    <Select\r\n                                    value={category ? category : ''}\r\n                                    onChange={this.handleChange}\r\n                                    input={<Input \r\n                                    name=\"category\"\r\n                                    id=\"outlined-age-simple\" />}\r\n                                    className=\"header-search\"\r\n                                    MenuProps={{\r\n                                        disableScrollLock: true\r\n                                      }}\r\n                                    >\r\n                                    {/*<MenuItem value=\"Select\">Select</MenuItem>*/}\r\n                                    <MenuItem value=\"jobs\">Jobs</MenuItem>\r\n                                    <MenuItem value=\"services\">Services</MenuItem>\r\n                                    <MenuItem value=\"freelancers\">Freelancers</MenuItem>\r\n                                    <MenuItem value=\"co-founder\">Co-founders</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </span>\r\n                        </div>\r\n                        <input className=\"form-control\" type=\"text\" name=\"value\" value={value ? value : ''} onChange={this.handleChange} />\r\n                        <div className=\"input-group-append button\">\r\n                            <Button type=\"submit\"> <SearchIcon /></Button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport {defaultService, globalService as gs} from \"../../../common/services\";\r\nimport {urlHelper} from \"../../../helpers\";\r\nimport {alertSelectors} from \"../../../common/redux/selectors\";\r\n\r\nclass Notification extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            hasMore: true,\r\n            count: 0,\r\n            totalCount: null\r\n        };\r\n        this.offset = 1;\r\n        this.initilizeState = this.state;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let user_id = gs.getUser().id;\r\n        gs.db.ref(`User/${user_id}/is_notified`)\r\n        .on(\"value\", (snap) => {\r\n            this.fetchFirst();\r\n        });\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.setState(this.initilizeState);\r\n    }\r\n\r\n    fetchFirst = () => {\r\n        defaultService.notificationPull({ page: 1 }).then(data => {\r\n            let items = data.items;\r\n            let count = data.pagination.totalCount;\r\n            this.setState({ items, count });\r\n            //console.log('data', data);\r\n            //console.log('this.state', this.state);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    fetchMoreData = () => {\r\n        const { items, count } = this.state;\r\n        if (items.length >= count) {\r\n          this.setState({ hasMore: false });\r\n          return;\r\n        }\r\n        this.fetchNoti();\r\n    };\r\n\r\n    fetchNoti = () => {\r\n        defaultService.notificationPull({page: this.offset}).then(data => {\r\n            this.offset = this.offset + 1;\r\n            let lists = this.state.items;\r\n            data.items.forEach(group => {\r\n                lists.push(group);\r\n            });\r\n            this.setState({\r\n                items: lists,\r\n                totalCount: data.pagination.totalCount\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    read = (item) => {\r\n        const { dispatch } = this.props;\r\n        defaultService.notificationRead({\"selection\":item.message_id}).then(data => {\r\n            dispatch(alertSelectors.success(data.message));\r\n            //dispatch(notificationActions.pull(null));\r\n            this.fetchFirst();\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        //console.log(this.state)\r\n        //const { notifications } = this.props;\r\n        const { count } = this.state;\r\n        return(\r\n            <Fragment>\r\n                <Dropdown className=\"dropdown-notification\">\r\n                    <Dropdown.Toggle as=\"a\" className=\"nav-link\" to=\"/setting/notifications\">\r\n                        <img src=\"/images/Bell.png\" alt=\"\" className=\"img-fluid\" width=\"25\" />\r\n                        <span className=\"badge badge-info\">{(count > 0) ? count : ''}</span>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"dropdown-menu-right dropdown-menu-media\">\r\n                        <div className=\"dropdown-arrow\"></div>\r\n                        <div className=\"dropdown-header text-center\">\r\n                            <div>\r\n                                <span className=\"font-18\"><strong>{count} New</strong> Notifications</span>\r\n                            </div>\r\n                            <NavLink className=\"text-muted font-13\" to=\"/setting/notifications\">view all</NavLink>\r\n                        </div>\r\n                        <div className=\"w-100 timeline\">\r\n                            {(this.state.items.length > 0) &&\r\n                                <InfiniteScroll className=\"scroll css-scroll list-group\"\r\n                                                dataLength={this.state.items.length}\r\n                                                next={this.fetchMoreData}\r\n                                                hasMore={this.state.hasMore}\r\n                                                loader={<p className=\"text-center mb-0\">Loading...</p>}\r\n                                                height={300}\r\n                                                endMessage={\r\n                                                    <p className=\"text-center mb-0\"> <b>Yay! You have seen it all</b> </p>\r\n                                                }\r\n                                >\r\n                                    {this.state.items.map((item, index) => (\r\n                                        <Link to={urlHelper.notifyUrl(item)} className={`list-group-item list-group-item-action`} key={item && item.message_id} onClick={() => this.read(item)}>\r\n                                            {item.avatar &&\r\n                                            <div className=\"image\">\r\n                                                <img src={item.avatar.thumb} alt=\"\" className=\"img-fluid border rounded-circle\" width=\"40\" height=\"40\" />\r\n                                            </div>}\r\n                                            <div className={`caption ${item.avatar ? '' : 'w-100'}`}>\r\n                                                <span className=\"text\">{item && item.notification}</span>\r\n                                                <small className=\"float-right text-muted ml-2 nowrap\">{moment(item && item.created_at * 1000).format('LL')}</small>\r\n                                            </div>\r\n                                        </Link>\r\n                                    ))}\r\n                                </InfiniteScroll>\r\n                            }\r\n                            {(this.state.items.length === 0) && <div className={'common-not-found p-3 text-center'} style={{minHeight: '240px'}}>\r\n                                <div className=\"inner\">\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/No-notification.png\" alt=\"Not found\" width=\"100\" />\r\n                                    </figure>\r\n                                    <h5>NO NOTIFICATIONS YET</h5>\r\n                                    <p className=\"title\">This is where you’ll see all your notifications</p>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst notificationSelector = createSelector(\r\n    state => state.notifications,\r\n    notifications => notifications\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authSelector, notificationSelector,\r\n    (authentication, notifications) => ({\r\n        authentication, notifications\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Notification);","\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Nav, NavDropdown, Dropdown } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport { authActions, jobActions, serviceActions, searchActions, favoriteActions, proposalActions, messageActions } from '../../../common/redux/actions';\r\nimport Notification from \"./Notification\";\r\nimport { globalService as gs, itemService } from '../../../common/services';\r\n\r\nclass LoggedUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            authentication: props.authentication,\r\n            renderNotification:true,\r\n            item: null,\r\n            unread:0,\r\n        };\r\n        this.unread = 0;\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.isNew();\r\n        this.recipientCounter()\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.setState({ renderNotification: false });\r\n    }\r\n\r\n    onLogout = () => {\r\n        const { dispatch } = this.props;\r\n        dispatch(proposalActions.clear());\r\n        dispatch(favoriteActions.clear());\r\n        dispatch(jobActions.clear());\r\n        dispatch(serviceActions.clear());\r\n        dispatch(messageActions.clear());\r\n        dispatch(searchActions.clear());\r\n        dispatch(authActions.logout());\r\n    };\r\n\r\n    isNew = () => {\r\n        itemService.isnew(\"GET\").then(response => {\r\n            this.setState({ item: response, });\r\n        });\r\n    };\r\n\r\n    recipientCounter = () => {\r\n        const userKey = parseInt(gs.identity.user.id);\r\n        gs.db.ref(`UserMessageRecipient`)\r\n            .orderByChild('recipients/' + userKey + '/id')\r\n            .equalTo(userKey)\r\n            .on(\"value\", (snap) => this.process(snap));\r\n    };\r\n\r\n    process = (snap) => {\r\n        const items = gs.ObjectToArray(snap.val());\r\n        const userKey = parseInt(gs.identity.user.id);\r\n        let unread = 0;\r\n        items.map(async (item) => {\r\n            if (item && item.recipients) {\r\n                let rs = Object.values(item.recipients),\r\n                    r = rs.find((r) => (userKey === parseInt(r.id)));\r\n                unread += parseInt(r.unread);\r\n            }\r\n        });\r\n        this.setState({ unread });\r\n    };\r\n\r\n    render() {\r\n        const { authentication, item, renderNotification } = this.state;\r\n        const user = authentication && authentication.loggedIn && authentication.authentication.user;\r\n\r\n        return (<Fragment>\r\n            <Nav className=\"navbar-nav navbar-profile order-2 order-xl-4\">\r\n                {(renderNotification === true) && <Notification />}\r\n                <a className=\"nav-link\" href=\"/messages\">\r\n                    <img src=\"/images/Message.png\" alt=\"\" className=\"img-fluid\" width=\"25\" />\r\n                    <span className=\"badge badge-info\">{this.state.unread ? this.state.unread : '' }</span>\r\n                </a>\r\n                <NavDropdown title={\r\n                    <span>\r\n                        <img src={user && user.avatar} alt=\"\" className=\"img-fluid border rounded-circle\" width=\"40\" height=\"40\" />\r\n                    </span>\r\n                } className=\"profile-dropdown\">\r\n                    <NavLink className=\"dropdown-item border-bottom-0\" to=\"/user/update\">My Profile</NavLink>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle as=\"a\" className=\"dropdown-item pr-2 border-bottom-0\" to=\"/services\">\r\n                            Services <i className=\"fas fa-angle-up float-right\"></i>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <NavLink className=\"dropdown-item\" to={\"/services\"}>My Services</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/offers/received/services/cash\"}><span className=\"badge badge-danger\">{(item && item.UserService &&  item.UserService.offers > 0 ? `new` : '')}</span> Received Offers</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/offers/sent/services/cash\"}><span className=\"badge badge-danger\">{(item && item.UserService && item.UserService.counter > 0 ? `new` : '')}</span> Sent Offers</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/contracts/services/cash\"}>Accepted Offers</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/completed/services/cash\"}>Completed Offers</NavLink>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle as=\"a\" className=\"dropdown-item pr-2 border-bottom-0\" to=\"/jobs\">\r\n                            Jobs <i className=\"fas fa-angle-up float-right\"></i>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <NavLink className=\"dropdown-item\" to={\"/jobs\"}>My Jobs</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/offers/received/jobs/cash\"}><span className=\"badge badge-danger\">{(item && item.UserItem && item.UserItem.offers > 0 ? `new` : '')}</span> Received Proposals</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/offers/sent/jobs/cash\"}><span className=\"badge badge-danger\">{(item && item.UserItem && item.UserItem.counter > 0 ? `new` : '')}</span> Sent Proposals</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/contracts/jobs/cash\"}>Accepted Proposals</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/completed/jobs/cash\"}>Completed Proposals</NavLink>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n\r\n                    {/*\r\n                   <NavLink className=\"dropdown-item border-bottom-0\" to=\"/services\">My Services</NavLink>\r\n                   <NavLink className=\"dropdown-item\" to=\"/jobs\">My Jobs</NavLink>\r\n                  <Dropdown>\r\n                        <Dropdown.Toggle as=\"a\" className=\"dropdown-item pr-2 border-bottom-0\" to=\"/offers/received/services\">\r\n                            Received Offers <i className=\"fas fa-angle-up float-right\"></i>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <NavLink className=\"dropdown-item\" to={\"/offers/received/services/cash\"}> <span className=\"badge badge-danger\">{(item && item.services > 0 ? `new` : '')}</span> Services  </NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/offers/received/jobs/cash\"}> <span className=\"badge badge-danger\">{(item && item.jobs > 0 ? `new` : '')}</span> Jobs </NavLink>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle as=\"a\" className=\"dropdown-item pr-2 border-bottom-0\" to=\"/offers/sent/services\">\r\n                            Sent Offers <i className=\"fas fa-angle-up float-right\"></i>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <NavLink className=\"dropdown-item\" to={\"/offers/sent/services/cash\"}>Services</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/offers/sent/jobs/cash\"}>Jobs</NavLink>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle as=\"a\" className=\"dropdown-item pr-2 border-bottom-0\" to=\"/contracts/jobs\">\r\n                            Contracts <i className=\"fas fa-angle-up float-right\"></i>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <NavLink className=\"dropdown-item\" to={\"/contracts/services/cash\"}>Services</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to={\"/contracts/jobs/cash\"}>Jobs</NavLink>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown> */}\r\n\r\n                    <NavLink className=\"dropdown-item border-bottom-0\" to=\"/user/connection/my-cofounder\"><span className=\"badge badge-danger\">{(item && item.connection && item.connection.requests > 0 ? `new` : '')}</span> Co-founders</NavLink>\r\n                    <NavLink className=\"dropdown-item border-bottom-0\" to=\"/user/favorite/services\">Favorites</NavLink>\r\n                    <Dropdown.Divider />\r\n                    {/* <NavLink className=\"dropdown-item\" to=\"/user/transactions\">Transactions</NavLink> */}\r\n                    <NavLink className=\"dropdown-item border-bottom-0\" to=\"/setting/account-info\">Account Settings</NavLink>\r\n                    <NavLink className=\"dropdown-item border-bottom-0\" to=\"/user/membership\">Manage Membership</NavLink>\r\n                    <NavLink className=\"dropdown-item border-bottom-0\" to=\"/user/support\">Support</NavLink>\r\n                    {/* <NavLink className=\"dropdown-item\" to={`/user/public/about/${this.user.id}`}>View Profile</NavLink>\r\n                    <NavLink className=\"dropdown-item\" to=\"/user/change-password\">Change Password</NavLink> */}\r\n                    <NavLink className=\"dropdown-item border-bottom-0\" to=\"/home\" onClick={this.onLogout}>Logout <small>({user && user.name})</small></NavLink>\r\n                </NavDropdown>\r\n            </Nav>\r\n\r\n\r\n\r\n        </Fragment>);\r\n    }\r\n}\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst proposalSelector = createSelector(\r\n    state => state.proposals,\r\n    proposals => proposals\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authSelector, proposalSelector,\r\n    (authentication, proposals) => ({\r\n        authentication, proposals\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(LoggedUser);","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport Search from \"./Search\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport LoggedUser from \"./LoggedUser\";\r\nimport { globalService as gs } from '../../../common/services';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loggedIn: props.authentication.loggedIn,\r\n            authentication: props.authentication,\r\n            activeClass: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        /*gs.db.ref(`User/${gs.getUser().id}/is_notified`)\r\n        .on(\"value\", (snap) => {\r\n            console.log('Main Component');\r\n        });*/\r\n        window.addEventListener('scroll', (e) => {\r\n            let activeClass = 'fixed';\r\n            if (window.scrollY === 0) {\r\n                activeClass = 'no-fixed';\r\n            }\r\n            this.setState({ activeClass });\r\n        }, 9000);\r\n    };\r\n\r\n    changeClasseToOpen = (id) => {\r\n        document.getElementById(id).classList += \" navDropDownOpen\"\r\n    }\r\n\r\n    changeClasseToClose = (id) => {\r\n        document.getElementById(id).classList.remove(\"navDropDownOpen\")\r\n    }\r\n\r\n    changeClasseToOpen2 = (id) => {\r\n        document.getElementById(id).classList += \" navDropDownOpen2\"\r\n    }\r\n\r\n    changeClasseToClose2 = (id) => {\r\n        document.getElementById(id).classList.remove(\"navDropDownOpen2\")\r\n    }\r\n\r\n    toggle = (id) => {\r\n        document.getElementById(id).classList.toggle(\"navDropDownOpen2\")\r\n        document.getElementById(\"browse\").classList.remove(\"navDropDownOpen\")\r\n    }\r\n\r\n    toggle2 = (id) => {\r\n        document.getElementById(id).classList.toggle(\"navDropDownOpen\")\r\n        document.getElementById(\"browse2\").classList.remove(\"navDropDownOpen2\")\r\n    }\r\n\r\n\r\n    render() {\r\n        const { history } = this.props;\r\n        const { loggedIn } = this.state;\r\n        return (\r\n            <header id=\"header\" className={`${this.state.activeClass}`}>\r\n                {/* <div className=\"text-center font-weight-bold\">Please be aware this site is under development and we are in the process of deploying many new features. Please let us know if you have any question or suggestions.</div> */}\r\n                <Navbar bg=\"light\" className=\"navbar-expand-custom\" expand=\"xl\" variant=\"light\">\r\n                    <Container>\r\n                        <Navbar.Toggle className=\"navbar-toggle\" />\r\n                        <NavLink className=\"navbar-brand\" to=\"/\">\r\n                            <img src=\"/images/logo.svg\" alt=\"\" className=\"img-fluid\" width=\"140\" />\r\n                        </NavLink>\r\n                       \r\n                        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"order-4 order-xl-3 mr-lg-5\">\r\n                            <Nav> <Search history={history} /></Nav>\r\n                            <Nav className=\"navbar-nav ml-auto navbar-main mt-2\">\r\n                                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/how-it-works\"><b>HOW IT WORKS</b></NavLink>\r\n                                <NavDropdown title=\"BROWSE\">\r\n                                    <NavLink to=\"/job-search\" className=\"dropdown-item\"><b>Browse for Jobs</b><br/><small>To Apply For</small></NavLink>\r\n                                    <NavLink to=\"/service-search\" className=\"dropdown-item\"><b>Browse for Services</b><br/> <small>To Buy or Exchange</small></NavLink>\r\n                                    <NavLink to=\"/freelancer-search\" className=\"dropdown-item\"><b>Browse for Freelancers</b><br/> <small>To Hire</small></NavLink>\r\n                                    <NavLink to=\"/cofounders-search\" className=\"dropdown-item\"><b>Browse for Co-founders</b><br/> <small>To Partner With</small></NavLink>\r\n                                </NavDropdown>\r\n                                <NavDropdown title=\"POST\">\r\n                                    <NavLink to=\"/job/create\" className=\"dropdown-item\"><b>Post a Job</b><br/><small>To Receive Offers</small></NavLink>\r\n                                    <NavLink to=\"/service/create\" className=\"dropdown-item\"><b>Post a Service</b><br/><small>To Sell or Exchange</small></NavLink>\r\n                                </NavDropdown>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n\r\n                        {loggedIn ?\r\n                            <LoggedUser /> :\r\n                            <Nav className=\"navbar-nav navbar-profile order-2 order-xl-4\">\r\n                                <NavLink className=\"nav-link btn login-btn\" to=\"/login\">Login</NavLink>\r\n                                <NavLink className=\"nav-link btn ml-3 sign-up-btn\" to=\"/register\">Sign Up</NavLink>\r\n                            </Nav>\r\n                        }\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector,\r\n    (authentication) => ({\r\n        authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Header);","import React, { Component } from \"react\";\r\nimport FormValidator from \"../../../../helpers/FormValidator\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { defaultActions } from \"../../../../common/redux/actions\";\r\n\r\nclass NewsletterForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                email: '',\r\n            },\r\n            loading: false,\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n        this.initializeState = this.state;\r\n    }\r\n\r\n    validator() {\r\n        return new FormValidator([\r\n            { field: 'email', method: 'isEmpty', validWhen: false, message: 'Valid email address is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n        if (validation.isValid) {\r\n            const { dispatch } = this.props;\r\n            dispatch(defaultActions.newsletter({ newsletter: formField }));\r\n            this.setState(this.initializeState);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { formField, submitted, validation } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n\r\n        return (\r\n            <div className=\"col-lg-4 col-12\">\r\n                <h4 className=\"pb-1\">Get the latest updates from jobarter</h4>\r\n\r\n                <form name=\"newsletter\" onSubmit={this.submitForm}>\r\n                    <div className=\"input-group mb-3\">\r\n                        {submitted && isValid.email.isInvalid &&\r\n                            <div className=\"invalid-feedback\"> {isValid.email.message} </div>}\r\n                            <input type=\"email\" name=\"email\" placeholder=\"Your email here..\" id=\"newsletter-input\" onChange={this.handleChange}\r\n                                value={formField.email} className={'form-control ' + (submitted && isValid.email.isInvalid ? 'is-invalid' : '')} />\r\n\r\n                        <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-info subscribe-btn\" type=\"submit\" id=\"button-addon2\">Subscribe</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    }),\r\n);\r\n\r\nexport default connect(mapStateToProps)(NewsletterForm);","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NewsletterForm from './partials/NewsletterForm';\r\n\r\nclass Footer extends Component {\r\n\r\n    getYear() {\r\n        const d = new Date();\r\n        return d.getFullYear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n\r\n\r\n            <footer id=\"footer\">\r\n                <div className=\"menus\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            {/* <div className=\"col-12 logos mb-3\">\r\n                                <NavLink className=\"navbar-brand\" to=\"/\">\r\n                                    <img src=\"/images/logo.svg\" alt=\"\" className=\"img-fluid\" width=\"107\" />\r\n                                </NavLink>\r\n                            </div> */}\r\n                            <div className=\"col-lg-8 col-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4 col-12\">\r\n                                        <h4 className=\"pb-1\">Company</h4>\r\n                                        <ul className=\"list-inline\">\r\n                                            <li><NavLink to=\"/about-us\">About Us</NavLink></li>\r\n                                            <li><NavLink to=\"/privacy-policy\">Privacy Policy </NavLink></li>\r\n                                            <li><NavLink to=\"/terms-of-service\">Terms of Service</NavLink></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 col-12\">\r\n                                        <h4 className=\"pb-1\">Support</h4>\r\n                                        <ul className=\"list-inline\">\r\n                                            <li><NavLink to=\"/how-it-works\">How it Works</NavLink></li>\r\n                                            {/* <li><NavLink to=\"/help-and-faq\">Help and FAQ</NavLink></li> */}\r\n                                            <li><NavLink to=\"/contact-us\">Contact Us</NavLink></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 col-12\">\r\n                                        <h4 className=\"pb-1\">Resources</h4>\r\n                                        <ul className=\"list-inline\">\r\n                                            {/* <li><NavLink to=\"/testimonials\">Testimonials</NavLink></li> */}\r\n                                            <li><NavLink to=\"/media\">Media</NavLink></li>\r\n                                            <li><NavLink to=\"/blog/category/all\">Blog</NavLink></li>\r\n                                            <li><NavLink to=\"/press-release\">Press Release</NavLink></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <NewsletterForm />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"copy-right\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 d-flex align-items-center\">\r\n                                <div className=\"text col pl-0\"><NavLink to=\"/\">jobarter</NavLink>. &copy; {this.getYear()} All Rights Reserved.</div>\r\n                                <ul className=\"social-menu list-inline d-flex justify-content-center mb-0\">\r\n\r\n                                    <li><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.facebook.com/jobarterapp/`}><i className=\"fab fa-facebook-f\"></i></a></li>\r\n\r\n                                    <li><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://twitter.com/BarterJo`}><i className=\"fab fa-twitter\"></i></a></li>\r\n\r\n                                    <li><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.pinterest.com/jobarterapp/`}><i className=\"fab fa-pinterest\"></i></a></li>\r\n\r\n                                    <li><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.instagram.com/jobarterapp/`}><i className=\"fab fa-instagram\"></i></a></li>\r\n\r\n                                    <li><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.youtube.com/channel/UCQbb96RGviEu1kXNLjv93bw?view_as=subscriber`}><i className=\"fab fa-youtube\"></i></a></li>\r\n\r\n                                    <li><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.linkedin.com/company/49642886/admin/`}><i className=\"fab fa-linkedin\"></i></a></li>\r\n\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Footer from './Footer';\r\nimport {globalService as gs} from \"../../common/services\";\r\n\r\nclass Main extends Component {\r\n\r\n    render() {\r\n        const { children, history, onlycontent } = this.props;\r\n        //console.log('this.props', this.props)\r\n        return (\r\n            <Fragment>\r\n                {(parseInt(onlycontent) !== parseInt(1)) && <Header history={history} />}\r\n                <main className=\"all-content\">\r\n                    {children}\r\n                </main>\r\n                {(parseInt(onlycontent) !== parseInt(1)) && <Footer />}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n// import \"../../../assets/css/style.css\"\r\n// eslint-disable-next-line\r\nimport HomeSearch from './partials/HomeSearch';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass Banner extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            // <div className=\"hBanner\">\r\n            //     <img src=\"images/home.jpg\" alt=\"\" className=\"img-fluid w-100\" />\r\n            //     <div className=\"caption d-flex align-items-center\">\r\n            //         <div className=\"container\">\r\n            //             <div className=\"row\">\r\n            //                 <div className=\"col-lg-6 col-md-9 col-12 mr-auto banner-text\">\r\n            //                     <h2 className=\"pt-lg-3 w-100 pull-left\">Turn your dreams into reality.<br />\r\n            //                         <b>\r\n            //                             <big>Hire top-notch freelancers. Exchange your services. Connect with ideal co-founders.\r\n            //                         </big></b><br />\r\n            //                         {/* <b><small>\r\n            //                              We are still finalizing JoBarter. Please sign up and we will keep you updated on our progress.\r\n            //                             </small>\r\n            //                         </b> */}\r\n            //                     </h2>\r\n            //                     {!this.loggedIn &&\r\n            //                         <div className=\"w-100 pull-left mb-3\">\r\n            //                         <NavLink className=\"btn btn-info\" to=\"/register\">SIGN UP NOW</NavLink>\r\n            //                     </div> }\r\n            //                     { /* <HomeSearch /> */}\r\n            //                     <div className=\"w-100 pull-left example d-flex align-items-center\">\r\n            //                         <button onClick={this.handleShow} className=\"btn btn-white d-flex align-items-center justify-content-center\"><i className=\"fas fa-play\"></i></button>\r\n            //                         <h6>Watch our demo video</h6>\r\n            //                     </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            <div>\r\n            <section className=\"tr-banner section-before bg-image\">\r\n            <div className=\"container\">\r\n             <div className=\"banner-content text-center\">\r\n              <h2>Save money by using your skills</h2>\r\n              <h3>Hire top-notch freelancers. Exchange your services. Connect with ideal co-founders.</h3>\r\n                   \r\n              <div className=\"row hidden-xs\">\r\n                       \r\n               <div className=\"col-lg-4 col-sm-6\">\r\n                <div className=\"features\">\r\n                  <span className=\"fa-stack fa-3x\">\r\n                   <i className=\"fa fa-circle fa-stack-2x\"></i>\r\n                   <i className=\"fa fa-clone fa-stack-1x fa-inverse\"></i>\r\n                  </span>\r\n                <p>Post your job for Free</p>\r\n                </div>\r\n               </div>\r\n                       \r\n               <div className=\"col-lg-4 col-sm-6\">\r\n                <div className=\"features\">\r\n                  <span className=\"fa-stack fa-3x\">\r\n                   <i className=\"fa fa-circle fa-stack-2x\"></i>\r\n                   <i className=\"fa fa-list-alt fa-stack-1x fa-inverse\"></i>\r\n                  </span>\r\n                <p>Get proposals in minutes</p>\r\n                </div>\r\n               </div>\r\n                       \r\n               <div className=\"col-lg-4 col-sm-6\">\r\n                <div className=\"features\">\r\n                  <span className=\"fa-stack fa-3x\">\r\n                   <i className=\"fa fa-circle fa-stack-2x\"></i>\r\n                   <i className=\"fa fa-users fa-stack-1x fa-inverse\"></i>\r\n                  </span>\r\n                <p>Choose your freelancer</p>\r\n                </div>\r\n               </div>\r\n               \r\n              </div>\r\n              \r\n             </div>\r\n            </div>\r\n           </section>\t\r\n\r\n          \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Banner;","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                This is common modal\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\n\r\n\r\nclass HomeSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                value: \"\"\r\n            },\r\n            show: false\r\n        };\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       /* const validation = this.validator().validate(this.state.formField);\r\n        this.setState({ validation, submitted: true });\r\n\r\n        if (validation.isValid) {\r\n            // handle actual form submission here\r\n            const { dispatch } = this.props;\r\n\r\n        }*/\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form name=\"homesearch\" onSubmit={this.handleSubmit}>\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" className=\"form-control border-right-0\" placeholder=\"I’m looking for\" onChange={this.handleChange} />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text pr-0\">In: </span>\r\n                    </div>\r\n                    <select className=\"custom-select form-control mb-0 pl-2\" value={this.state.value} onChange={this.handleChange}>\r\n                        <option>Search</option>\r\n                        <option value=\"software_engineer\">Software Engineer</option>\r\n                        <option value=\"technical_writer\">Technical Writer</option>\r\n                        <option value=\"ui_designer\">UI Designer</option>\r\n                        <option value=\"ux_designer\">UX Designer</option>\r\n                    </select>\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-info px-3\" type=\"submit\"><i className=\"fas fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeSearch;","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass ExploreCategories extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"category-list\">\r\n               <div class=\"section-title section-padding\">\r\n\t    <h1 className=\"explore\">EXPLORE CATEGORIES</h1>\r\n       <p className=\"tagline-text\">Build a trusted team for your business</p>\r\n\t   </div>\r\n       <div className=\"container category-margin\">\r\n       <div className=\"row\">\r\n  <div class=\"col-lg-3\">\r\n\t\t   <div class=\"category-box tr-category\">\r\n\t\t\t<a href=\"hire.html\">\r\n\t\t\t <span class=\"icon\"><img width={50} src=\"assets/icons/2.png\"/></span>\r\n\t\t\t <span class=\"category-title\">Admin Support</span>\r\n\t\t\t <span class=\"category-quantity\">(1298)</span>\r\n\t\t\t</a>\r\n\t\t   </div>\r\n\t\t  </div>\r\n          <div class=\"col-lg-3\">\r\n\t\t   <div class=\"category-box tr-category\">\r\n\t\t\t<a href=\"hire.html\">\r\n\t\t\t <span class=\"icon\"><img width={50} src=\"assets/icons/3.png\"/></span>\r\n\t\t\t <span class=\"category-title\">Business and Finance</span>\r\n\t\t\t <span class=\"category-quantity\">(76212)</span>\r\n\t\t\t</a>\r\n\t\t   </div>\r\n\t\t  </div>\r\n          <div class=\"col-lg-3\">\r\n\t\t   <div class=\"category-box tr-category\">\r\n\t\t\t<a href=\"hire.html\">\r\n\t\t\t <span class=\"icon\"><img width={50} src=\"assets/icons/4.png\"/></span>\r\n\t\t\t <span class=\"category-title\">Graphic and Design</span>\r\n\t\t\t <span class=\"category-quantity\">(212)</span>\r\n\t\t\t</a>\r\n\t\t   </div>\r\n\t\t  </div>\r\n          <div class=\"col-lg-3\">\r\n\t\t   <div class=\"category-box tr-category\">\r\n\t\t\t<a href=\"hire.html\">\r\n\t\t\t <span class=\"icon\"><img width={50} src=\"assets/icons/5.png\"/></span>\r\n\t\t\t <span class=\"category-title\">Legal</span>\r\n\t\t\t <span class=\"category-quantity\">(972)</span>\r\n\t\t\t</a>\r\n\t\t   </div>\r\n\t\t  </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"row\">\r\n\t\t \r\n         <div class=\"col-lg-3\">\r\n          <div class=\"category-box tr-category\">\r\n           <a href=\"hire.html\">\r\n            <span class=\"icon\"><img width={50} src=\"assets/icons/6.png\"/></span>\r\n            <span class=\"category-title\">Sales</span>\r\n            <span class=\"category-quantity\">(1298)</span>\r\n           </a>\r\n          </div>\r\n         </div>\r\n         <div class=\"col-lg-3\">\r\n          <div class=\"category-box tr-category\">\r\n           <a href=\"hire.html\">\r\n            <span class=\"icon\"><img width={50} src=\"assets/icons/8.png\"/></span>\r\n            <span class=\"category-title\">Video</span>\r\n            <span class=\"category-quantity\">(76212)</span>\r\n           </a>\r\n          </div>\r\n         </div>\r\n         <div class=\"col-lg-3\">\r\n          <div class=\"category-box tr-category\">\r\n           <a href=\"hire.html\">\r\n            <span class=\"icon\"><img width={50} src=\"assets/icons/7.png\"/></span>\r\n            <span class=\"category-title\">Software</span>\r\n            <span class=\"category-quantity\">(1298)</span>\r\n           </a>\r\n          </div>\r\n         </div>\r\n         <div class=\"col-lg-3\">\r\n          <div class=\"category-box tr-category\">\r\n           <a href=\"hire.html\">\r\n            <span class=\"icon\"><img width={50} src=\"assets/icons/1.png\"/></span>\r\n            <span class=\"category-title\">Writing</span>\r\n            <span class=\"category-quantity\">(76212)</span>\r\n           </a>\r\n          </div>\r\n         </div>\r\n         \r\n        </div>\r\n        </div>\r\n           \r\n\r\n        </div>\r\n\t\t\r\n\t\t \r\n             \r\n           \r\n                \r\n                \r\n\r\n\r\n\r\n\r\n\r\n           \r\n\t\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreCategories;","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { globalService as gs } from '../../../common/services';\r\n\r\n\r\nclass JoinOurCommunity extends Component {\r\n\r\n  \r\n\r\n    render() {\r\n        return (\r\n          <div className=\"hJoin\">\r\n          <img src=\"assets/img/join.png\" alt=\"\" className=\"img-fluid\"/>\r\n          <div className=\"caption align-items-center mt-5 w-100 h-100\">\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-12 text-center\">\r\n                          <h2 className=\"text join\">JOIN OUR COMMUNITY</h2>\r\n                          <h4 className=\"text\">DREAM BIG. ACHIEVE YOUR BUSINESS GOALS. TAKE ACTION TODAY.</h4>\r\n                          {!gs.identity && <NavLink to=\"/register\" className=\"btn join-btn\">GET STARTED</NavLink>}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          \r\n      </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoinOurCommunity;","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass LimitlessExperience extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                value: \"\"\r\n            },\r\n            show: false\r\n        };\r\n        this.loggedIn = props.loggedIn;\r\n    }\r\n\r\n    handleClose = () => this.setState({ show: false });\r\n    handleShow = () => this.setState({ show: true });\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"hExperience\">\r\n                <div className=\"container\">\r\n\r\n\r\n                    <div class=\"section-title section-padding\">\r\n                        <h1 className=\"explore\">LIMITLESS EXPERIENCE</h1>\r\n                        <p className=\"tagline-text\">Flexible options for your business</p>\r\n                    </div>\r\n\r\n                    <div className=\"row container\">\r\n                        <span className=\"col-md-6\" onClick={this.handleShow} className=\"layer\"><img src=\"assets/img/videocl.png\" alt=\"\" className=\"img-fluid\" width={500} /></span>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mt-2\">\r\n                                <p className=\"exp-title\">Easily hire top freelancers</p>\r\n                                <h6>Post jobs to hire talented freelancers per hour or fixed price</h6>\r\n                            </div>\r\n\r\n                            <div className=\"mt-2\">\r\n                                <p className=\"exp-title\">Exchange Services</p>\r\n                                <h6>Flexible options to exchange services. No money required</h6>\r\n                            </div>\r\n\r\n                            <div className=\"mt-2\">\r\n                                <p className=\"exp-title\">Find Co-founders</p>\r\n                                <h6>Connect with ideal partners to partner with for your business ideas</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose} className=\"demo-model\" centered size=\"lg\">\r\n                    <Modal.Header closeButton className=\"py-2\">\r\n                        <Modal.Title><h2 className=\"section-titles\">Watch our demo video</h2></Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"p-0\" style={{ marginBottom: '-7px' }}>\r\n                        <video controls autoPlay className=\"w-100\">\r\n                            <source src=\"/images/JoBarterMainCorrected.mp4\" type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                        {/* <iframe width=\"560\" className=\"w-100\" title=\"Demo video\"  height=\"515\" src=\"https://www.youtube.com/watch?v=pLi7Ilnftr8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LimitlessExperience;","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { globalService as gs } from '../../../common/services';\r\n\r\nclass GrowWithJobarter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"hJoin\">\r\n          <img src=\"assets/img/video.png\" alt=\"\" className=\"img-fluid\"/>\r\n          <div className=\"caption align-items-center mt-5 w-100\">\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-12 text-center\">\r\n                          <h2 className=\"text join\">GROW WITH JOBARTER</h2>\r\n                          <h4 className=\"text\">TRANSFORM YOUR BUSINESS WITH US</h4>\r\n                          {!gs.identity && <NavLink to=\"/register\" className=\"btn join-btn\">JOIN NOW</NavLink>}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          \r\n      </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GrowWithJobarter;","import React, { Component } from 'react';\r\n\r\nclass Testimonials extends Component{\r\n    render(){\r\n        return(\r\n            // <div style={{border:\"1px solid black\"}}>\r\n                <div>\r\n               \r\n            <div class=\"section-title section-padding\">\r\n            <h1 className=\"explore\">TESTIMONIALS</h1>\r\n           </div>\r\n           <div className=\"row container w-90 testimonial-align\">\r\n<div className=\"col-\">\r\n<img src=\"assets/img/person1.png\" width={200}/><br/>\r\n<img className=\"ml-5\" src=\"assets/img/person2.png\" width={250}/><br/>\r\n<img src=\"assets/img/person3.png\" width={150}/>\r\n</div>\r\n\r\n\r\n           <div className=\"col-lg testimonial\">\r\n               <div className=\"text-center\"><img className=\"main-man\" src=\"assets/img/main-man.png\" width={150}/></div>\r\n               <div className=\"main-testimonial\">\r\n               <h5 className=\"text mt-5 w-80\">\"As a freelancer for the past ten years, I love the concept behind JoBarter.\r\n                I have flexible options to earn money by charging clients on an hourly basis or per fixed price. When business is slow,\r\n                 I use my skills to exchange services with other talented freelancers.\"</h5>\r\n               <h6 className=\"mt-3\">Dr. Jose Luis Angarita</h6>\r\n               <h6>Architect and Designer</h6>\r\n               </div>\r\n           </div>\r\n\r\n           <div className=\"row\">\r\n<div className=\"col-sm\">\r\n<img src=\"assets/img/person5.png\" width={150}/><br/>\r\n<img src=\"assets/img/person4.png\" width={200}/><br/>\r\n<img className=\"ml-3\" src=\"assets/img/person6.png\" width={250}/>\r\n</div>\r\n</div>\r\n           </div>\r\n           </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Testimonials;","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport Banner from \"./Banner\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nimport ExploreCategories from './ExploreCategories';\r\nimport JoinOurCommunity from './JoinOurCommunity';\r\nimport LimitlessExperience from './LimitlessExperience';\r\nimport GrowWithJobarter from './GrowWithJobarter';\r\nimport Testimonials from './Testimonials'\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { alertSelectors } from '../../../common/redux/selectors';\r\nimport { globalService as gs } from '../../../common/services';\r\n\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.loggedIn = this.props.authentication.loggedIn;\r\n    }\r\n\r\n    componentWillMount(){\r\n        const { dispatch, authentication, type } = this.props;\r\n        const auth = authentication.authentication;\r\n        (type === 'welcome') && auth && dispatch(alertSelectors.success(auth.message));\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { process } = this.props;\r\n        if (gs.identity) {\r\n            return (<Redirect to='/job-search' />)\r\n        }\r\n        return (<Main>\r\n            <DocumentTitle title={`Home`} />\r\n            <Banner loggedIn={this.loggedIn}/>\r\n            <ExploreCategories />\r\n            <JoinOurCommunity />\r\n            <LimitlessExperience />\r\n            <Testimonials/>\r\n            <GrowWithJobarter />\r\n        </Main>);\r\n    }\r\n}\r\n\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector,\r\n    (authentication) => ({\r\n        authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Home);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Main} from \"../../layout\";\r\nimport {createSelector} from \"reselect\";\r\nimport {authActions} from \"../../../common/redux/actions\";\r\nimport { userActions } from '../../../common/redux/actions';\r\n\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        // reset login status\r\n        this.onLogout = this.onLogout.bind(this);\r\n    }\r\n\r\n    onLogout(){\r\n        const {dispatch} = this.props;\r\n        dispatch(authActions.logout());\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const { dispatch, match } = this.props;\r\n        let id = match.params.id;\r\n        dispatch(userActions.publicProfile(\"GET\", null, {item_id: id}));\r\n        dispatch(userActions.experience(\"GET\", null, {user_id: id}));\r\n        dispatch(userActions.education(\"GET\", null, {user_id: id}));\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            const { dispatch } = this.props;\r\n            let id = this.props.match.params.id;\r\n            dispatch(userActions.publicProfile(\"GET\", null, {item_id: id}));\r\n            dispatch(userActions.experience(\"GET\", null, {user_id: id}));\r\n            dispatch(userActions.education(\"GET\", null, {user_id: id}));\r\n        }\r\n    }\r\n\r\n    getYear = (date) => {\r\n        let nedDate = [];\r\n        //return new Date(date).getFullYear();\r\n        nedDate.push(new Date(date).getMonth());\r\n        nedDate.push(new Date(date).getFullYear());\r\n        return nedDate.join(\"/ \")\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { user, process, experiences, educations } = this.props;\r\n        let about = user ? user.user.userProfile : {};\r\n        const experienceItems = experiences.data ? experiences.data.items : [];\r\n        const educationsItems = educations.data ? educations.data.items : [];\r\n        console.log(about.name,\"ysered\")\r\n\r\n\r\n        return (<Main>\r\n\r\n                <div className=\"col-md-6 col-md-offset-3\">\r\n                    {about.name}\r\n                    <p>\r\n                        <button onClick={this.onLogout}>Logout</button>\r\n                    </p>\r\n                </div>\r\n            </Main>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\n\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst experienceSelector = createSelector(\r\n    state => state.experiences,\r\n    experiences => experiences\r\n);\r\n\r\nconst educationSelector = createSelector(\r\n    state => state.educations,\r\n    educations => educations\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    userSelector,\r\n    experienceSelector,\r\n    educationSelector,\r\n    authSelector,\r\n    (process, user, experiences, educations,authentication) => ({\r\n        process, user, experiences, educations,authentication\r\n    })\r\n);\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(DashBoard);\r\n\r\n","import React, { Component } from 'react';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass NotFoundPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <DocumentTitle title={`Page not found`}/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>Not Found (#404)</h1>\r\n                        <div className=\"alert alert-danger\">Page not found.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\n//import {Link} from 'react-router-dom';\r\nimport { Main } from '../../layout';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\nconst NotFound = () => (<Main>\r\n    <NotFoundPage />\r\n</Main>);\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createSelector} from 'reselect';\r\nimport {authActions} from '../../../common/redux/actions/auth.actions';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nclass Logout extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // reset login status\r\n        this.props.dispatch(authActions.logout());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2> Logout successfully </h2>\r\n                <Link to=\"/login\">Return to Home Page</Link>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authSelector,\r\n    (authentication) => ({\r\n        authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Logout);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {createSelector} from 'reselect';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Main } from '../../layout';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass About extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        let search = new URLSearchParams(location.search);\r\n\r\n        return (<Main onlycontent={search.get(\"onlycontent\")}>\r\n            <DocumentTitle title={`About Us`}/>\r\n            <div className=\"about-page\">\r\n                <div className=\"w-100\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"mb-lg-4\">\r\n                                <h1 className=\"text-center heading\"><span>About Us</span></h1>\r\n\r\n                                <p className=\"text-center\">Our dedicated team at JoBarter believe in a world filled with endless possibilities and we are deeply passionate in making these opportunities available to everyone.</p>\r\n\r\n<p className=\"text-center\">Whether your talent is in sales, design or programming, we have everything that you need to help you reach your financial goals. We believe that everyone is good at something, and we help freelancers from around the world seize each new opportunity to use their gifts and pursue their passion.</p>\r\n\r\n <p className=\"text-center\">Our mission is to empower people to use their talents and skills to get things done, provide for their families, and realize their dreams. This mission is what drives us at JoBarter to help revolutionize the future of jobs.</p>\r\n\r\n<p className=\"text-center\">\r\nFounded in 2019, JoBarter is a one-stop marketplace for freelancers, small business owners, startup founders and entrepreneurs. We are an ecosystem that offers an array of services into a centralized platform to provide the best and most efficient user experience.</p>\r\n<p className=\"text-center\">\r\nTeam JoBarter is working every day and night to fulfill our mission. We believe that the next frontier in freelancing is happening now and we are honored to play a meaningful part in it. </p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n\r\n                { /* <div className=\"w-100 why-choose\">\r\n                    <Container>\r\n                        <Row>\r\n                            <div className=\"col-lg-5 col-md-7 py-lg-4 py-3\">\r\n                                <h3><span>Why Choose Us</span></h3>\r\n                                <p>Fusce dictum mauris nec magna consequat, ut semper leo pulvinar. Cras rhoncus lorem lorem, a fermentum lacus congue vehicula. Nullam luctus mi eget nisl tincidunt lobortis.</p>\r\n                                <ul className=\"checkbox\">\r\n                                    <li>Cras rhoncus lorem lorem, a fermentum lacus congue vehicula. Nullam luct mi eget nisl tincidunt lobortis.</li>\r\n                                    <li>Cras rhoncus lorem lorem, a fermentum lacus congue vehicula. Nullam luct mi eget nisl tincidunt lobortis.</li>\r\n                                    <li>Cras rhoncus lorem lorem, a fermentum lacus congue vehicula. Nullam luct mi eget nisl tincidunt lobortis.</li>\r\n                                </ul>\r\n                            </div>\r\n                        </Row>\r\n                    </Container>\r\n        </div> */ }\r\n\r\n                <div className=\"w-100 team\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"mb-lg-3\">\r\n                                <h3 className=\"text-center\"><span>Our Leadership Team</span></h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col md=\"3\" sm=\"6\">\r\n                                    <div className=\"team-box border\">\r\n                                        <div className=\"image\">\r\n                                            <img src={'images/Steeve_Simbert_Profile_Pic.jpg'} alt=\"Steeve Simbert\" className=\"img-fluid\" />\r\n                                        </div>\r\n                                        <div className=\"caption text-center\">\r\n                                            <h5 className=\"text-truncate\"><NavLink to=\"#\">Steeve Simbert</NavLink></h5>\r\n                                            <div className=\"position\">CEO</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" sm=\"6\">\r\n                                    <div className=\"team-box border\">\r\n                                        <div className=\"image\">\r\n                                            <img src={'images/France_Matias_Profile_Pic.jpg'} alt=\"France Matias\" className=\"img-fluid\" />\r\n                                        </div>\r\n                                        <div className=\"caption text-center\">\r\n                                            <h5 className=\"text-truncate\"><NavLink to=\"#\">France Matias</NavLink></h5>\r\n                                            <div className=\"position\">CIO</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector,\r\n\r\n    (authentication) =>\r\n        ({authentication})\r\n);\r\n\r\nexport default connect(mapStateToProps)(About);\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass Media extends Component {\r\n    render() {\r\n        const { location } = this.props;\r\n        let search = new URLSearchParams(location.search);\r\n        return (\r\n            <Main onlycontent={search.get(\"onlycontent\")}>\r\n                <DocumentTitle title={`Media`}/>\r\n                <div className=\"container contant-pages\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1>Media</h1>\r\n\r\n                            <ul className=\"check-list\">\r\n                                <li>\r\n                                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://blogs.bsg.ox.ac.uk/2019/12/02/the-future-of-work-in-america/`}>The future of work in America, Blavatnik School of Government, University of Oxford.</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Media;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst propTypes = {\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number,\r\n    className: PropTypes.string,\r\n    totalCount: PropTypes.number\r\n};\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 20\r\n};\r\n\r\nclass Pagination extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pager: {} };\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.totalCount && this.props.totalCount) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.totalCount !== prevProps.totalCount) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    setPage(page) {\r\n        var { pageSize, totalCount } = this.props;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n        pager = this.getPager(totalCount, page, pageSize);\r\n\r\n        /*\r\n            var itemsArr = [];\r\n            for(let a = 0; a<= totalCount; a++) {\r\n                itemsArr.push(a);\r\n            }\r\n            var pageOfItems = itemsArr.slice(pager.startIndex, pager.endIndex + 1);\r\n        */\r\n\r\n        this.setState({ pager: pager });\r\n        this.props.onChangePage(page);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n\r\n        currentPage = currentPage || 1;\r\n\r\n        pageSize = pageSize || 10;\r\n\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 5) {\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            if (currentPage <= 3) {\r\n                startPage = 1;\r\n                endPage = 5;\r\n            } else if (currentPage + 2 >= totalPages) {\r\n                startPage = totalPages - 4;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 2;\r\n                endPage = currentPage + 2;\r\n            }\r\n        }\r\n\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n\r\n            return null;\r\n        }\r\n        console.log(pager)\r\n        return (\r\n            <ul className={`pagination ${this.props.className ? this.props.className : ''}`}>\r\n                {/* <li className={'page-item ' + (pager.currentPage === 1 ? 'disabled' : '')}>\r\n                    <Link className=\"page-link\" to=\"#\" onClick={() => this.setPage(1)}>First</Link>\r\n                </li> */}\r\n                <li>\r\n                    <Link  to=\"#\" onClick={() => this.setPage(pager.currentPage - 1)}><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i></Link>\r\n                </li>\r\n                {pager.pages.map((page, index) =>\r\n                    <li key={index} className={`${(pager.currentPage === page ? 'active' : '')}`}>\r\n                        <Link  to=\"#\" onClick={() => this.setPage(page)}>{page}</Link>\r\n                    </li>\r\n                )}\r\n                <li>\r\n                    <Link to=\"#\" onClick={() => this.setPage(pager.currentPage + 1)}><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></Link>\r\n                </li>\r\n                {/* <li className={'page-item ' + (pager.currentPage === pager.totalPages ? 'disabled' : '')}>\r\n                    <Link className=\"page-link\" to=\"#\" onClick={() => this.setPage(pager.totalPages)}>Last</Link>\r\n                </li> */}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nexport default function FreelancerListLoader(props) {\r\n    let loop = props.listCount ? props.listCount : 0;\r\n    const lists = [];\r\n    for(let a = 0; a<= loop; a++) {\r\n        lists.push(a);\r\n    }\r\n\r\n    return (\r\n        <div className=\"freelancerLoader\">\r\n            {lists.map((index) =>\r\n                <div key={index} className=\"freLncrBox card mb-4 border-bottom-0 px-3 pt-3\">\r\n                    <ContentLoader\r\n                        height={75}\r\n                        width={700}\r\n                        speed={10}\r\n                        primaryColor={props.primaryBg ? props.primaryBg : '#ddd'}\r\n                        secondaryColor={props.secondaryBg ? props.secondaryBg : '#ddd'}\r\n                        >\r\n                        <circle cx=\"30\" cy=\"30\" r=\"30\" /> \r\n                        <rect x=\"75\" y=\"3\" rx=\"4\" ry=\"4\" width=\"650\" height=\"13\" /> \r\n                        <rect x=\"75\" y=\"25\" rx=\"4\" ry=\"4\" width=\"650\" height=\"13\" />\r\n                        <rect x=\"75\" y=\"47\" rx=\"4\" ry=\"4\" width=\"650\" height=\"13\" />\r\n                    </ContentLoader>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nexport default function SearchLoader(props) {\r\n    let loop = props.listCount ? props.listCount : 0;\r\n    const lists = [];\r\n    for(let a = 0; a<= loop; a++) {\r\n        lists.push(a);\r\n    }\r\n\r\n    return (\r\n        <div className=\"freelancerLoader\">\r\n            {lists.map((index) =>\r\n                <div key={index} className=\"freLncrBox card mb-4 border-bottom-0 px-3 pt-3\">\r\n                    <ContentLoader\r\n                        height={75}\r\n                        width={props.width ? props.width : 700}\r\n                        speed={10}\r\n                        primaryColor={props.primaryBg ? props.primaryBg : '#ddd'}\r\n                        secondaryColor={props.secondaryBg ? props.secondaryBg : '#ddd'}\r\n                        >\r\n                        <circle cx=\"30\" cy=\"30\" r=\"30\" />\r\n                        <rect x=\"75\" y=\"3\" rx=\"4\" ry=\"4\" width={props.width ? props.width : (700 - 50)} height=\"13\" />\r\n                        <rect x=\"75\" y=\"25\" rx=\"4\" ry=\"4\" width={props.width ? props.width : (700 - 50)} height=\"13\" />\r\n                        <rect x=\"75\" y=\"47\" rx=\"4\" ry=\"4\" width={props.width ? props.width : (700 - 50)} height=\"13\" />\r\n                    </ContentLoader>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nexport default function ContetLIneLoader(props) {\r\n    let loop = props.listCount ? props.listCount : 0;\r\n    const lists = [];\r\n    for(let a = 0; a<= loop; a++) {\r\n        lists.push(a);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100\">\r\n            {lists.map((index) =>\r\n                <div key={index} className={`w-100 px-${props.px ? props.px : ''}`}>\r\n                    <ContentLoader\r\n                        height={props.height ? props.height : 90}\r\n                        width={props.width ? props.width : 700}\r\n                        speed={10}\r\n                        primaryColor={props.primaryBg ? props.primaryBg : '#ddd'}\r\n                        secondaryColor={props.secondaryBg ? props.secondaryBg : '#ddd'}\r\n                        >\r\n                        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width={props.width ? props.width : 700} height=\"15\" /> \r\n                        <rect x=\"0\" y=\"30\" rx=\"3\" ry=\"3\" width={props.width ? props.width : 700} height=\"15\" /> \r\n                        <rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width={props.width ? props.width : 700} height=\"15\" /> \r\n                        <rect x=\"0\" y=\"90\" rx=\"3\" ry=\"3\" width={props.width ? props.width : 700} height=\"15\" /> \r\n                    </ContentLoader>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nexport default function FormLoader(props) {\r\n    let loop = props.listCount ? props.listCount : 0;\r\n    const lists = [];\r\n    for(let a = 0; a<= loop; a++) {\r\n        lists.push(a);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100\">\r\n            {lists.map((index) =>\r\n                <div key={index} className={`w-100 px-${props.px ? props.px : ''}`}>\r\n                    <ContentLoader\r\n                        height={props.height ? props.height : 90}\r\n                        width={props.width ? props.width : 700}\r\n                        speed={10}\r\n                        primaryColor={props.primaryBg ? props.primaryBg : '#ddd'}\r\n                        secondaryColor={props.secondaryBg ? props.secondaryBg : '#ddd'}\r\n                        >\r\n                        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width={props.width ? props.width : 700} height=\"15\" />\r\n                        <rect x=\"0\" y=\"30\" rx=\"3\" ry=\"3\" width={props.width ? props.width : 700} height=\"15\" />\r\n                        <rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width={props.width ? props.width : 700} height=\"15\" />\r\n                        <rect x=\"0\" y=\"90\" rx=\"3\" ry=\"3\" width={props.width ? props.width : 700} height=\"15\" />\r\n                    </ContentLoader>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport { blogAction } from '../../../common/redux/actions';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { FreelancerListLoader } from '../../../common/loaders';\r\n\r\nclass PressRelease extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            moduleId: 'press',\r\n            page: 1,\r\n            pagesize: 30,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.onRouteChanged();\r\n    }\r\n\r\n    onRouteChanged = () => {\r\n        const { dispatch } = this.props;\r\n        dispatch(blogAction.item(\"GET\", null, this.state));\r\n    };\r\n\r\n    onChangePage = (page) => {\r\n        //this.setState({ page }, () => this.onRouteChanged());\r\n    };\r\n\r\n    render() {\r\n        const { pagesize } = this.state;\r\n        const { location, blog, process } = this.props;\r\n        let search = new URLSearchParams(location.search);\r\n        let items = blog.list ? blog.list.items : [];\r\n        return (\r\n            <Main onlycontent={search.get(\"onlycontent\")}>\r\n                <DocumentTitle title={`Press Release`}/>\r\n\r\n                <div className=\"blog-page pt-4\" >\r\n                    <div className=\"container \">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"pb-2\">Press Release</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        {(process.loading) ? <Fragment>{[1,2].map(item => <div className=\"col-md-6 col-12\" key={item}><FreelancerListLoader listCount={0} /></div>)}</Fragment> : <Fragment>\r\n                            {items && items.length === 0 && <div className=\"col\">Press Release not found</div>}\r\n                            {items && items.map((item) =>\r\n                                <div className=\"col-md-6 col-12\" key={item.id}>\r\n                                    <div className=\"blog-box mb-4\">\r\n                                        {item && item.blog_image && \r\n                                            <div className=\"image\">\r\n                                                <img src={item.blog_image && item.blog_image.path} alt=\"\" className=\"img-fluid\" />\r\n                                            </div>\r\n                                        }\r\n                                        <div className=\"caption\">\r\n                                            <h4 className=\"text-truncate\"><Link to={`/press-release/${item.slug}`}>{item.title}</Link></h4>\r\n                                            <div className=\"date pl-0\">{moment(item.created_at * 1000).format('LL')} | <span className=\"text-primary\">{(item && item.created_by_press) ? item.created_by_press : 'JoBarter Team'}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"col-12\">\r\n                                <Pagination className=\"justify-content-end\"\r\n                                    pageSize={pagesize}\r\n                                    totalCount={(blog && blog.list && blog.list.pagination && blog.list.pagination.totalCount) ? blog.list.pagination.totalCount : 10}\r\n                                    onChangePage={this.onChangePage} />\r\n                            </div>\r\n                            </Fragment>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Main>\r\n        );\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst blogSelector = createSelector(\r\n    state => state.blog,\r\n    blog => blog\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    blogSelector,\r\n    (process, blog) => ({\r\n        process, blog\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PressRelease);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport moment from \"moment\";\r\nimport { blogAction } from '../../../common/redux/actions';\r\nimport { FormLoader } from '../../../common/loaders';\r\nimport { Link } from 'react-router-dom';\r\nimport { globalService as gs } from '../../../common/services';\r\nimport { FacebookShareButton, LinkedinShareButton, TwitterShareButton, FacebookIcon, TwitterIcon, LinkedinIcon } from 'react-share';\r\n\r\nclass PressReleaseView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        //console.log(this.props.match.params.slug);\r\n        const { dispatch } = this.props;\r\n        dispatch(blogAction.item(\"GET\", null, {slug: this.props.match.params.slug}));\r\n\r\n        /*itemService.item(\"GET\", null, {slug: this.props.match.params.slug})\r\n            .then(response => {\r\n                console.log(response.item);\r\n                this.setState({item: response.item})\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n            })*/\r\n    }\r\n\r\n    render() {\r\n        const { location, blog, process } = this.props;\r\n        let item = blog.list ? blog.list.item : [];\r\n        let search = new URLSearchParams(location.search);\r\n        return (\r\n            <Main onlycontent={search.get(\"onlycontent\")}>\r\n                <DocumentTitle title={item && item.title}/>\r\n                <div className=\"bIndividual\">\r\n                    <div className=\"container bg-white\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {(process.loading) ? <div className=\"py-3\"><FormLoader listCount={3} /></div> :\r\n                                <div className=\"content py-3 h-auto\">\r\n                                    {item && item.blog_image && <figure><img src={item.blog_image && item.blog_image.path} alt=\"\" className=\"img-fluid\" /></figure>}\r\n\r\n                                    <h2 className=\"text-center\">{item && item.title}</h2>\r\n                                    <ul className=\"updated d-flex align-items-center flex-wrap\">\r\n                                        <li className=\"\">{moment(item && item.created_at * 1000).format('LL')}</li>\r\n                                        <li className=\"text-primary\">{(item && item.created_by_press) ? item.created_by_press : 'JoBarter Team'}</li>\r\n                                    </ul>\r\n                                    <div className=\"details border-bottom-0\">\r\n                                        <div dangerouslySetInnerHTML={{__html: item && item.content}}></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"tags border-top d-flex flex-wrap align-items-center justify-content-center\">\r\n                                        <div className=\"d-flex align-items-center col pl-0\">\r\n                                            <big>Tag:</big>\r\n                                            <ul className=\"chip d-flex align-items-center mb-0\">\r\n                                                <li><Link to=\"#\" className=\"active\">Sales</Link></li>\r\n                                                <li><Link to=\"#\">Tyre</Link></li>\r\n                                                <li><Link to=\"#\">DIY</Link></li>\r\n                                                <li><Link to=\"#\">Medical</Link></li>\r\n                                                <li><Link to=\"#\">Transport</Link></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"sharing d-flex align-items-center\">\r\n                                            <big>Share this blog</big>\r\n                                            <ul className=\"d-flex blog-sharing-icon\">\r\n                                                <li>\r\n                                                    <FacebookShareButton\r\n                                                        url={`${gs.rootUrl}/press-release/${item && item.slug}`}\r\n                                                        quote={item && item.title}\r\n                                                        className=\"share-button\">\r\n                                                        <FacebookIcon />\r\n                                                    </FacebookShareButton>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <TwitterShareButton\r\n                                                        url={`${gs.rootUrl}/press-release/${item && item.slug}`}\r\n                                                        title={item && item.title}\r\n                                                        className=\"share-button\">\r\n                                                        <TwitterIcon />\r\n                                                    </TwitterShareButton>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <LinkedinShareButton\r\n                                                        url={`${gs.rootUrl}/press-release/${item && item.slug}`}\r\n                                                        windowWidth={750}\r\n                                                        windowHeight={600}\r\n                                                        className=\"share-button\">\r\n                                                        <LinkedinIcon />\r\n                                                    </LinkedinShareButton>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Main>\r\n        );\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst blogSelector = createSelector(\r\n    state => state.blog,\r\n    blog => blog\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    blogSelector,\r\n    (process, blog) => ({\r\n        process, blog\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PressReleaseView);","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass PrivacyPolicy extends Component {\r\n    render() {\r\n        const { location } = this.props;\r\n        let search = new URLSearchParams(location.search);\r\n        return (<Main onlycontent={search.get(\"onlycontent\")}>\r\n            <DocumentTitle title={`Privacy Policy`}/>\r\n            <div className=\"contant-pages\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <h1 className=\"text-center heading\"><span>Privacy Policy</span></h1>\r\n                            Effective Date: September 17, 2019 <br />\r\n                            Last Updated: September 17, 2019 <br /><br />\r\n                                    <h2> About this Policy</h2>\r\n                                    <p className=\"pb-2\">JoBarter.com is committed to protecting and respecting your privacy.</p>\r\n                                    <p className=\"pb-2\">JoBarter Corporation (\"JoBarter\", \"jobarter\", \"we\", \"us\", \"our\") provides this Privacy Policy (\"Policy\") to let you know how we collect, use, and disclose your personal information through www.jobarter.com (\"Site\"), and our Mobile IOS and Android mobile applications (together with the Site, \"Services\") that are owned or controlled by JoBarter. This Policy applies regardless of the device used to access the Services and applies to all the different features that we offer at JoBarter such as job posting, bidding, hiring, service purchase service exchange, and cofounder matching. Before you submit any information through the Site or access our Services, please carefully review this Policy together with our Terms of Service and any other documents referred to therein to understand our views and practices regarding your information and how we will treat it. By using any part of the Services, you consent to the collection, use, and disclosure of your information as further outlined in this Policy. Please note that this Policy applies only to information collected through the Services that we offer at JoBarter and not to information you may provide to any third-party sites to which we may link, except as expressly provided herein.  Some online services offered by or affiliated with us may be governed by a separate privacy policy. In those instances, the product-specific privacy policy shall apply to that online service.</p>\r\n\r\n\r\n                                <h2>Information Collection</h2>\r\n\r\n\r\n                                    <h4> Information You Provide Directly to Us</h4>\r\n                                    <p className=\"pb-2\">Information we receive directly from you includes personal information you share with us in order to use our services. For example:</p>\r\n\r\n                                    <p className=\"pb-2\">We may collect information from you during your use of or access to the Services. Categories of information that we may collect from you include:</p>\r\n\r\n                                    <ul>\r\n                                        <li><b>Personal Information:</b> When you use our Service, we may require or otherwise collect information that identifies you as a specific individual. For example, we may require you to provide us with your contact information when you register an account on our Site. Examples of Personal Information include your name, email address, home or business address, age, demographic information, IP address, work history, education, and phone number. Additionally, non-identifying personal information, such as your username, may be linked to you through a piece of identifying personal information. For such purposes, we will treat the combined information as Personal Information. </li>\r\n                                        <li><b>Payment Information:</b> Payment processing is handled through Stripe. We do not collect, store, or otherwise transfer financial information. See \"Service Providers – Payment Processing\", below for more information. </li>\r\n                                        <li><b>Other Information. </b> During profile creation we also ask for information such as your website, and social media accounts. This information is not required, however members are welcome to enter this information for verification purposes.\r\n                                        <b>We also have a referral page where you may enter email-addresses of friends and acquaintances.  If you choose to use to enter this information, JoBarter will send an email to your chosen recipients and your email address will be used on the message for referral.</b>\r\n                                         </li>\r\n                                    </ul>\r\n\r\n                                    <h2>Information that is Passively or Automatically Collected</h2>\r\n\r\n\r\n\r\n\r\n                                       <h4> Device/Usage Information</h4>\r\n                                       <p className=\"pb-2\"> We may automatically collect certain information about the computer or devices (including mobile devices or tablets) you use to access the Services. We use this information to analyze how people use our Services and enable certain features within JoBarter to better improve our site and provide a better user experience. As described further below, we may collect and analyze information such as:</p>\r\n\r\n                                        <ul>\r\n                                            <li>IP addresses, geolocation information, unique device identifiers, IMEI and TCP/IP address, and other information about your computer or device(s), browser types, browser language, operating system, mobile device carrier information, the state or country from which you accessed the Services; and </li>\r\n                                            <li>Information related to the ways in which you interact with the Services, such as: referring and exit web pages and URLs, platform type, the number of clicks, domain names, landing pages, pages and content (such as advertisements) viewed and the order of those pages, statistical information about the use of the Services (such as barcodes scanned through certain of our mobile apps), the amount of time spent on particular pages, the date and time you used the Services, the frequency of your use of the Services, error logs, and other similar information.  As described further below, we may use third-party analytics providers and technologies, including cookies and similar tools, to assist in collecting this information.</li>\r\n                                            </ul>\r\n\r\n                                            <p>\r\n                                                We may also collect and analyze information from your browser or device, such as, your operating system, plug-ins, system fonts, resolution and other data, for purposes of creating a unique profile  for each user.   We may use this profile to understand and analyze how you interact with the Services, to customize content or advertising to you through the Services, to monitor against fraud or misuse of the Services, and to ensure legal compliance..\r\n                                            </p>\r\n\r\n\r\n                                            <h4> Location Information</h4>\r\n<p className=\"pb-2\">JoBarter and our service providers may automatically collect location information, including general information (e.g., IP address, zip code) from your computer or mobile device.  If you access the Services through a mobile device, we may also ask you to share your specific geo-location information with us.  The Services use this location information to provide customized location-based services, content, promotional offers and other information that may be of interest to you.  We may also use location information to improve the functionality of the Services and our other products services.  If you do not wish to have this location information collected and used by JoBarter and our service providers, you may disable the location features on your personal device.  Please note that if you disable such features, you will not be able to access or receive some or all of the services, content, features and/or products made available via the Services. </p>\r\n\r\n\r\n<h4> Cookies and Other Electronic Technologies</h4>\r\n<p className=\"pb-2\">We may also collect data about your use of the Services through the use of Internet server logs, cookies and/or tracking pixels. A web server log is a file where website activity is stored to distinguish you from other users of our website. A cookie is a small text file that is placed on your computer when you visit a website, that enables us to: </p>\r\n<ul>\r\n    <li> Recognize your computer; </li>\r\n    <li> Store your preferences and settings; </li>\r\n    <li> Understand the web pages of the services you have visited; </li>\r\n    <li> Enhance your user experience by delivering content specific to your interests; </li>\r\n    <li> Perform searches and analytics; and </li>\r\n    <li> Assist with security administrative functions. Some cookies are placed in your browser cache while those associated with flash technologies are stored with your adobe flash player files. </li>\r\n</ul>\r\n<p className=\"pb-2\">\r\nTracking pixels (sometimes referred to as web beacons or clear GIFs) are tiny electronic tags with a unique identifier embedded in websites, online ads and/or email, and that are designed to provide usage information like ad impressions or clicks, measure popularity of the Services and associated advertising, and to access user cookies.  As we adopt additional technologies, we may also gather additional information through other methods <br />\r\nWe use the following cookies:</p>\r\n\r\n<ul>\r\n    <li><b>Strictly necessary cookies.</b> These are cookies that are required for the operation of our website. They include, for example, cookies that enable you to log into secure areas of our website, use a shopping cart or make use of e-billing services.\r\n    </li>\r\n    <li><b> Analytical/performance cookies.</b> They allow us to recognize and count the number of visitors and to see how visitors move around our website when they are using it. This helps us to improve the way our website works, for example, by ensuring that users are finding what they are looking for easily.\r\n    </li>\r\n    <li><b> Functionality cookies.</b> These are used to recognize you when you return to our website. This enables us to personalize our content for you, greet you by name and remember your preferences (for example, your choice of language or region).\r\n        </li>\r\n    <li><b> Targeting cookies.</b> These cookies record your visit to our website, the pages you have visited and the links you have followed. We will use this information to make our website and the advertising displayed on it more relevant to your interests. We may also share this information with third parties for this purpose.</li>\r\n</ul>\r\n\r\n<p className=\"pb-2\">\r\nExcept for essential cookies, all cookies will expire after one year.</p>\r\n<p className=\"pb-2\">\r\nYour usage of the website without changing your browser cookies settings will indicate your consent to usage of cookies in accordance with this section of this Policy. You can change your cookie settings at any time. Please note that you can change your settings to notify you when a cookie is being set or updated, or to block cookies altogether. Please consult the “Help” section of your browser for more information (e.g., Internet Explorer; Google Chrome; Mozilla Firefox; or Apple Safari). You can also manage the use of Flash technologies, including cookies and local storage objects with the Flash management tools available at Adobe’s website. Please note that by blocking any or all cookies, you may not have access to certain features or offerings of the Services.</p>\r\n<p className=\"pb-2\">\r\nPlease also see below the section entitled ‘Tailored Online and Mobile Advertising’ which contains further information on how cookies are used for advertising purposes by us as well as by associated third parties.</p>\r\n\r\n\r\n<h4>Information Collected By and From Social Media and Other Content Platforms</h4>\r\n<p className=\"pb-2\">\r\nIf you access the Services through a third-party connection or log-in (e.g., through a social network), you may allow us to have access to and store certain information in your social network profile.  This may include your first name, last name, gender, general location, a link to your profile, your time zone, birthday, profile picture, your “likes” and your list of friends.  If you do not wish to have this information shared, do not use a social networking connection to access the Services.  For a description on how social networking sites handle your information, please refer to their privacy policies and terms of use, which may permit you to modify your privacy settings.  If you signed up using a social media log-in by mistake, you may be able to delete your account through your account settings at any time, or you can email us at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a> for help.</p>\r\n<p className=\"pb-2\">\r\nWhen you “like” or “follow” us on Facebook, Instagram, Pinterest, Twitter or other social media sites, we may collect some information from you including your name, e-mail address, and any comments or content you post relevant to us. We may also collect your information if you sign up for one of our promotions or submit information to us through social media sites.</p>\r\n\r\n<h4>Information from Affiliates and Non-Affiliated Third Parties</h4>\r\n<p className=\"pb-2\">We may also obtain information about you if you use any other websites that we operate or may operate from time to time or other services we provide. We may share information amongst members of our corporate group, which means our subsidiaries, our ultimate holding company and its subsidiaries. We may also obtain information, such as demographic information, from our affiliates or from third parties, such as marketers, partners, researchers, sub-contractors in technical, payment and delivery services, advertising networks, analytics providers, search information providers, credit reference agencies and others.</p>\r\n\r\n            <h2>Service Providers</h2>\r\n            <h4>Payment Processing</h4>\r\n<p className=\"pb-2\">Payment processing is handled by Stripe, which may collect certain financial information from you, such as your name, address, credit or debit card information or ACH information, applicable card expiration dates and security codes in order to process your transactions for purchases made at JoBarter.com.</p>\r\n<p className=\"pb-2\">\r\nWe do not collect, store or otherwise maintain this financial information, including credit, debit or similar information from individuals who make purchases using the Services, and use and storage of that information is governed by the payment processor’s applicable terms of service and privacy policy located here.</p>\r\n\r\n\r\n\r\n      <h2>Email</h2>\r\n<p className=\"pb-2\">We will use e-mail to send you news and service updates, as well as notification of messages from other users unless you \"opt out\" to receiving such e-mails by using the unsubscribe links within the e-mails that we send. Please note, however, that as long as you maintain an account, you may not \"opt out\" of receiving service or account-related e-mails from the Site.</p>\r\n\r\n      <h2>How We Use Your Information</h2>\r\n      <p className=\"pb-2\">We use information collected through our Service to provide and improve the Service, process your requests, prevent fraud, provide you with information and advertising that may interest you, comply with the law, and as otherwise permitted with your consent.</p>\r\n      <p className=\"pb-2\">\r\nWhere relevant under applicable laws, all processing of your personal information will be justified by a \"condition\" for processing. In the majority of cases, processing will be justified on the basis that:</p>\r\n\r\n            <ul>\r\n                <li>\r\n    You have provided your consent for us to use your personal information for a specific purpose;\r\n    </li>\r\n    <li>\r\n    </li>\r\n    <li>Our use of your personal information is necessary to perform a contract or take steps to enter into a contract with you (e.g. to provide you with services which you have purchased);\r\n    </li>\r\n    <li>The processing is necessary to comply with a relevant legal obligation or regulatory obligation that we have (e.g. fraud prevention)\r\n    </li>\r\n    <li>The processing is necessary to support our legitimate interests as a business (e.g. to improve our services to you), subject to your interests and fundamental rights and provided it is conducted at all times in a way that is proportionate.\r\nWe will use your personal information for the following purposes:\r\n    </li>\r\n    <li>To process a transaction initiated by you or to provide the features, services and products available through the Services;\r\n    </li>\r\n    <li>To send you information about your transactions with us, account alerts, or other communications, such as newsletters to which you have subscribed;\r\n    </li>\r\n    <li>With your consent, to send you SMS messages;\r\n    </li>\r\n    <li>To notify you about new features, changes and/or offerings of the Services, including, but not limited to, updates, discounts, events, shows news about our Services, products, and/or special offers;\r\n    </li>\r\n    <li>To provide you with quality service and security, to operate the Site and to perform our obligations to you;\r\n    </li>\r\n    <li>To contact you with information, surveys, or advertising that we believe may be of interest to you both regarding our products and Services and those of third parties;\r\n    </li>\r\n    <li> To administer sweepstakes and contests;\r\n    </li>\r\n    <li> To process and respond to your inquiries or to request your feedback;\r\n    </li>\r\n    <li> For internal research and reporting;\r\n    </li>\r\n    <li> To personalize the content and advertising that you see on the Services or on other websites, including across difference devices and browsers;\r\n    </li>\r\n    <li> To measure or understand the effectiveness of advertising we serve to you and others;\r\n    </li>\r\n    <li> To allow you to participate in interactive features of our service, when you choose to do so;\r\n    </li>\r\n    <li> To enforce the legal terms that govern your use of the Services;\r\n    </li>\r\n    <li> To use IP addresses to identify the location of users, to block disruptive use, to establish the number of visits from different countries and to determine the jurisdiction in which you are accessing the Services </li>\r\n    </ul>\r\n\r\n  <p className=\"pb-2\">\r\n    We may aggregate and/or de-identify information collected through the Services. We may use de-identified and/or aggregated data for any purpose, including without limitation for research and marketing purposes, and may also share such data with any third parties, including advertisers, promotional partners, sponsors, event promoters, and/or others.</p>\r\n\r\n<h2> When We Disclose User Information</h2>\r\n  <p className=\"pb-2\">\r\nWe may disclose and/or share your information between members of the Sites corporate group, and to or with any non-affiliated third parties under the following circumstances:</p>\r\n\r\n<ul>\r\n    <li><b> Consent.</b> We may disclose your information to any third parties based on your consent to do so.</li>\r\n    <li><b>Interactions Between Users.</b> We share your information to help facilitate interactions between Users while using the services.</li>\r\n    <li><b>Service Providers.</b>  We may provide access to or share your information with select third parties who perform services on our behalf and for any other legitimate business purpose. These third parties provide a variety of services to us, including without limitation billing, sales, marketing, advertising, market research, customer support, fulfillment, data storage, analysis and processing, and legal services.</li>\r\n\r\n    <li><b>Protection of Others and Us.</b> By using the Services, you acknowledge, consent and agree that we may access, preserve and disclose your information, including, but not limited to, any user content, if required to do so by law or in a good faith belief that such access, preservation or disclosure is reasonably necessary to:\r\n    <ul>\r\n        <li> Comply with legal process;</li>\r\n        <li> Enforce our terms of service, this policy, or other contracts with you, including investigation of potential violations thereof;</li>\r\n        <li>Respond to claims that any content violates the rights of third parties;</li>\r\n        <li> Respond to your requests for customer service; and/or</li>\r\n        <li> Protect the rights, property or personal safety of the services, its agents and affiliates, its users and/or the public.  This includes exchanging information with other companies and organizations for fraud protection, and spam/malware prevention, and similar purposes.</li>\r\n        </ul>\r\n        </li>\r\n    <li><b>Business Transfers.</b> As we continue to develop our business, we may buy, merge or partner with other companies. In such transactions, (including in contemplation of such transactions, e.g., due diligence) user information may be among the transferred assets. If a portion or all of our assets are sold or transferred to a third-party, customer information (including your email address) would likely be one of the transferred business assets.</li>\r\n    <li><b>Public Forums.</b>  Our Services offer publicly accessible blogs and community forums. You should be aware that any information you provide in these areas may be read, collected, and used by others who access them.  Please also remember that if you choose to provide information on public features of the Services, individuals reading such information may use or disclose it to other individuals or entities without our control and without your knowledge, and search engines may index that information. We therefore urge you to think carefully about what you choose to disclose publicly and make sure it’s information you want to share with the public.</li>\r\n    </ul>\r\n\r\n\r\n     <h2>Personalized Content, Advertising, and Your Choices </h2>\r\n     <h4> Online and Email Analytics</h4>\r\n <p className=\"pb-2\">\r\nWe may use third-party web analytics services on our Services, such as those of Google Analytics, Hotjar and Facebook.  These service providers use the sort of technology previously described in the “Cookies and other electronic technologies” section to help us analyze how users use the Services, including by noting the third-party website from which you arrive, and provide certain features to you.  We may also use Google Analytics for certain purposes related to advertising, as described in the following section. To prevent Google Analytics from using your information for analytics, you may install the Google Analytics Opt-out Browser Add-on by clicking here. </p>\r\n <p className=\"pb-2\">\r\nIf you receive email from us, we may use certain tools, such as clear GIFs to capture data such as when you open our message or click on any links or banners our email contains.  This data allows us to gauge the effectiveness of our communications and marketing campaigns.</p>\r\n\r\n\r\n  <h2>Updating Your Information and Data Retention</h2>\r\n <p className=\"pb-2\">You may access certain of your information and delete, change, or modify that information through your relevant account settings on the Services.  For additional assistance with modifying or deleting information provided to us, contact us at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a>.\r\nWe will keep your information only for as long as is reasonably necessary for the purpose that it has been processed, considering any legal requirements under Applicable Law. If you terminate your account, any association between your account and information we store will no longer be accessible through your account. We will also retain and use your information as necessary to comply with our legal obligations, resolve disputes, and enforce our agreements.</p>\r\n <p className=\"pb-2\">\r\nIf you wish to verify the details that we hold about you may do so by contacting us via e-mail at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a>. Our security procedures mean that we may request proof of identity before we reveal information. This proof of identity will typically take the form of your e-mail address and any password submitted upon registration.</p>\r\n\r\n\r\n<h2>Security </h2>\r\n<p className=\"pb-2\">\r\nWe have implemented administrative, technical, and physical security measures to protect against the loss, misuse and/or alteration of your information. These safeguards vary based on the sensitivity of the information that we collect and store. All information you provide to us is stored on secure servers. Any payment transactions will be encrypted using Secure Sockets Layer (SSL) technology. In addition, we contractually ensure that any third party processing your personal information equally provide for confidentiality and integrity of your data in a secure way.</p>\r\n\r\n<p className=\"pb-2\">Unfortunately, the transmission of information via the internet is not completely secure, and although we will do our best to protect your information, we cannot and do not guarantee that the measures we take will prevent every unauthorized attempt to access, use, or disclose your information since despite our efforts, as no Internet and/or other electronic transmissions can be completely secure and any transmission is at your own risk.</p>\r\n<p className=\"pb-2\">\r\nYou are responsible for keeping your account and password secure. It is important for you to protect against unauthorized access to your password and to your computer so we advise that you sign off when you have finished using a shared computer strongly recommend and that you do not use the browser’s password memory function as that would permit other people using your device to access your information. We recommend that you change your password periodically. You are responsible for maintaining the security of your account username and password. We ask you not to share a password with anyone. If you believe that your account username and/or password have been stolen or been made known to others, you must contact us immediately at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a> and change your password immediately. We are not responsible for any actions occurring from your account if someone else accesses your account through information that they have obtained from you. To the fullest extent permitted by law, we disclaim all liability and responsibility for any damages you may suffer due to any loss, unauthorized access, misuse or alterations of any information you submit to the Service.</p>\r\n\r\n\r\n\r\n<h2>Your Choices  </h2>\r\n<p className=\"pb-2\">\r\nIf you have provided contact information through the Services and decide that you do not want us to use that information for marketing purposes in accordance with this Policy, you can opt-out of future use at any time by: </p>\r\n<ul><li>\r\n     Using the link provided at the bottom of any email you receive and opting out of receiving future information; or\r\n    </li>\r\n   <li> Sending us an email at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a>.  </li>\r\n</ul>\r\n<p className=\"pb-2\">\r\nPlease note that you may not be able to opt out of emails about your transactions and relationship with us, such as emails regarding your account, requests or inquiries, and purchases of products and/or services.</p>\r\n\r\n\r\n<h2>International/EU Users – Consent To Transfer and Subject Access Requests  </h2>\r\n<p className=\"pb-2\">\r\nThe Services are operated in the United States and are governed by United States law. If you are a resident of the European Union or other location outside the United States, please be advised that any information you provide through the Services will be transferred to the United States or other designated locations outside of the European Economic Area which do not have a similar standard of protection laws to the EU for processing, hosting and storage by us or our service providers. Where you are accessing Services from a European Union member state, we will take all steps reasonably necessary to ensure that your information is treated securely in accordance with this privacy policy always and at least to the standards required by Applicable Law in the jurisdiction of access. By using the Services, you consent to this transfer and to the use of the information as described herein.</p>\r\n<p className=\"pb-2\">\r\nUnder applicable EU regulation, you have the following rights in respect of your personal information to:</p>\r\n\r\n\r\n<ul>\r\n   <li>Obtain a copy of your personal information together with information about how and on what basis that personal information is processed;</li>\r\n    <li>Rectify inaccurate personal information;</li>\r\n    <li>Erase your personal information in limited circumstances where (a) you believe that it is no longer necessary for us to hold your personal information; (b) we are processing your personal information on the basis of legitimate interests and you object to such processing, and we cannot demonstrate an overriding legitimate ground for the processing; (c) where you have provided your personal information to us with your consent and you wish to withdraw your consent and there is no other ground under which we can process your personal information; and (d) where you believe the personal information we hold about you is being unlawfully processed by us;</li>\r\n\r\n   <li> Restrict processing of your personal information where: (a) the accuracy of the personal information is contested; (b) the processing is unlawful but you object to the erasure of the personal information; (c) we no longer require the personal information for the purposes for which it was collected, but it is required for the establishment, exercise or defense of a legal claim or (d) you have objected to us processing your personal information based on our legitimate interests and we are considering your objection;</li>\r\n   <li>\r\n     Challenge processing which we have justified on the basis of our legitimate interest;\r\n     </li>\r\n\r\n     <li>\r\n     Object to decisions which are based solely on automated processing or profiling;\r\n     </li>\r\n\r\n     <li>\r\n   Locate where you have provided your personal information to us with your consent, to ask us for a copy of this data in a structured, machine-readable format and to ask us to share (port) this data to another data controller; or\r\n   </li>\r\n\r\n   <li>  Obtain a copy of or access to safeguards under which your personal information is transferred outside of the EEA.</li>\r\n   </ul>\r\n<p className=\"pb-2\">\r\n   In addition to the above, you have the right to lodge a complaint with a supervisory authority for data protection.</p>\r\n\r\n<p className=\"pb-2\">\r\nWe will ask you for additional data to confirm your identity and for security purposes, before disclosing data requested to you. We reserve the right to charge a fee where permitted by law. We will decline to process requests that jeopardize the privacy of others, are extremely impractical, or would cause us to take any action that is not permissible under applicable laws. Additionally, as permitted by applicable laws, we will retain where necessary certain personal information for a limited period of time for record-keeping, accounting and fraud prevention purposes.</p>\r\n<p className=\"pb-2\">\r\nWhere, under Applicable Law, you are entitled to access information held about you and to request that it is corrected if any of your details held are incorrect. Your right of access can be exercised in accordance with the provisions of Applicable Law. Any access request will be subject to the maximum fee permissible under Applicable Law in order to meet our costs in providing you with details of the information we hold about you.</p>\r\n\r\n<h2>Third Party Links and Services   </h2>\r\n<p className=\"pb-2\">\r\nThe Services may contain links to third-party websites, applications and other services. Please be aware that we are not responsible for the privacy practices of such other sites and services. We encourage our users to be aware when they leave our Services and to read the privacy statements of each and every site they visit that collect their information.  Some of these links may be affiliate marketing links encoded by third parties.  This means that we may earn a commission when you click on or make purchases via affiliate links, and affiliate partners may use cookies to understand your use of the Services.  For more information about our affiliate marketing practices, please see the Site’s Advertising Disclosure.</p>\r\n<p className=\"pb-2\">\r\nThe Services may also include widgets and social media features such as the Facebook “Like” button, which are interactive mini-programs that provide specific services from another company (e.g. displaying the news, opinions, music, etc.). Information such as your email address may be collected through these features. These features may collect your IP address and set cookies to enable them to function properly.  We are not responsible for nor do we endorse the privacy practices or the content of such third-party services.  Any information you provide via those services is subject to their applicable privacy policies and is not covered by this Policy.</p>\r\n\r\n<h4>Your California Privacy Rights </h4>\r\n<p className=\"pb-2\">\r\nCalifornia Law permits visitors who are California residents to request a list of the third parties to which we have disclosed “personal information” (as that term is defined under applicable California law) for such third parties’ direct marketing purposes.  You are limited to one request per calendar year. In your request, please attest to the fact that you are a California resident and provide a current California address for our response. You may request the information in writing at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a>. </p>\r\n\r\n\r\n<h2>Information From Children </h2>\r\n<p className=\"pb-2\">\r\nThe Services are not directed to anyone under the age of 13 and such children are not permitted to use the Services. If we discover we have received any “personal information” (as defined under the Children’s Online Privacy Protection Act) from a child under the age of 13 in violation of this Policy, we will take reasonable steps to delete that information as quickly as possible. If you believe we have any information from or about anyone under the age of 13, please contact us at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a>.</p>\r\n\r\n\r\n<h2>Changes To This Policy</h2>\r\n<p className=\"pb-2\">We will continue to evaluate this Policy as we update and expand the Services and our offerings, and we may make changes to the Policy accordingly. If we make any material changes to this Policy, we will notify you through email. We will also notify you by amending the revision date of this page. The newly updated privacy statement will apply from the listed revision date.  Your continued use of the Services will signify acceptance of the terms of the updated Policy.</p>\r\n<p className=\"pb-2\">\r\nWe reserve the right to change this Policy at any time to reflect changes in the law, our data collection and use practices, the features of our Services, or advances in technology. Please check this page so that you may periodically review this statement and be aware of any changes. . Your continued use of the Services following the posting of changes to this Policy will mean you accept those changes.</p>\r\n\r\n<h2>Questions About Policy </h2>\r\n<p className=\"pb-2\">\r\nIf you have any questions about our Policy, you can contact us by emailing us at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a>.</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default PrivacyPolicy;","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass Testimonials extends Component {\r\n    render() {\r\n        const { location } = this.props;\r\n        let search = new URLSearchParams(location.search);\r\n        return (\r\n            <Main onlycontent={search.get(\"onlycontent\")}>\r\n                <DocumentTitle title={`Testimonials`}/>\r\n                <h1>Testimonials</h1>\r\n            </Main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Testimonials;","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport Footer from '../../layout/Footer';\r\nimport Header from '../../layout/Header';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass HowItWorks extends Component {\r\n  \r\n    \r\n    render() {\r\n        var ar = window.innerWidth / window.innerHeight\r\n        const posts = [\r\n            {id: 1, title: 'Post', content: 'Job or Service', image: 'images/work-Post.svg'},\r\n            {id: 2, title: 'Find', content: 'Job, Freelancer, and Co-founders', image: 'images/work-Find.svg'},\r\n            {id: 3, title: 'Bid', content: 'Negotiate fixed or per hour price or exchange skills', image: 'images/work-Bid.svg'},\r\n            {id: 4, title: 'Hire', content: 'Close deal when finding the best talent', image: 'images/work-Hire.svg'},\r\n            {id: 5, title: 'Rate', content: 'Provide feedback and rating', image: 'images/work-Rate.svg'},\r\n            {id: 6, title: 'Connect', content: 'Find Co-founder to partner', image: 'images/work-Connect.svg'}\r\n        ];\r\n        const { location } = this.props;\r\n        let search = new URLSearchParams(location.search);\r\n\r\n        const content = posts.map((post) =>\r\n            <Col xs=\"12\" sm=\"4\" key={post.id}>\r\n                <div className=\"boxs d-flex align-items-center justify-content-center\">\r\n                    <div>\r\n                        <img src={post.image} alt={post.title} />\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.content}</p>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        );\r\n        return (\r\n<div>\r\n    <Header/>\r\n    <div className=\"hBanner\">\r\n                <img src=\"assets/img/background.png\" alt=\"\" className=\"img-fluid w-100\" />\r\n                <div className=\"caption d-flex align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                    \r\n                        <div className=\"row hide-how\">\r\n                        <div>\r\n                           <h1 className=\"how-text\">How it works</h1>\r\n                           <p className=\"exp-text\">An Explanation of how Jobarter works</p>\r\n                           </div>\r\n                       <img src=\"assets/img/1.png\" className=\"img-fluid w-50 ml-5 how-banner-img\"/>\r\n                       </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n</div>    \r\n\r\n\r\n\r\n                       <div className=\"instruction\">\r\n               <div>\r\n               <p className=\"section-heading\">Hire the best experts</p>\r\n              <div className=\"text-section\"> <p className=\"section-text\">\r\n               Whatever you need, we have it. If you need to get work done,<br/>\r\nJoBarter can help you two specific ways\r\n               </p>\r\n           </div>\r\n           </div>\r\n\r\n <div className=\"guide-wrapper container\">\r\n     <div className=\"guide-section container\">\r\n<p className=\"guide-heading\">1. Post A Job</p>\r\n\r\n         <p className=\"guide-content\">Simply click on our <span className=\"highlight\">“Post a Job”</span> button to start describing the job that you need. Fill in\r\nas much information that you can provide to make it easier for interested freelancers to\r\nunderstand your requirements. Once your job is posted, freelancers will start sending\r\nyou proposals for your job post. You can choose to accept, decline, or revise the proposals.</p>\r\n     </div> \r\n     <img className=\"guide-image\" src=\"assets/img/home/2.png\" />\r\n     </div>          \r\n\r\n\r\n     <div className=\"guide-wrapper container\">\r\n     <img className=\"guide-image\" src=\"assets/img/home/3.png\"/>\r\n     <div className=\"guide-section\">\r\n<p className=\"guide-heading\">2. Browse for Services</p>\r\n\r\n         <p className=\"guide-content\">If you have a job you want to get done, you can easily “Browse for Services” that\r\nour freelancers have posted. We have a pool of skilled professionals that post services they offer. Use our filters and search bar to narrow down the type of service\r\nthat you need and once you find a service that you want, simply click on the “Send\r\nan Offer” button to start bidding for the service. Our bidding system is designed for\r\nyou to get the most affordable rate. Even more interesting, we allow counter offers\r\nso that you and the service provider can come to a price that works best for both\r\nof you.\r\nNote: And one more thing, if you are also a service provider, you can choose to exchange a service that you provide as payment for the service that you need. You\r\nhave the option to either buy a service or exchange services if both parties are\r\ninterested. Exchanging services with another service provider can help you save\r\nmoney.</p>\r\n     </div>\r\n   \r\n     </div>\r\n\r\n\r\n      <div className=\"container\">\r\n               <p className=\"section-heading\">Be a freelancer and manage your career.</p>\r\n              <div className=\"text-section\"> <p className=\"section-text\">\r\n              Need a job? You’ve come to the right place! JoBarter is here to help you sell your services and find\r\nclients. JoBarter makes it easier for you to find jobs. We can help you find jobs two specific ways:\r\n               </p>\r\n           </div>\r\n           </div> \r\n\r\n           <div className=\"guide-wrapper container\">\r\n     <div className=\"guide-section\">\r\n<p className=\"guide-heading\">1. Post A Service</p>\r\n\r\n         <p className=\"guide-content\">Take advantage of your skills and talent. Most people have an undiscovered talent.\r\nWhether you speak multiple languages, great in design, coding, bookkeeping, writing,\r\nmarketing, you can start getting jobs to earn extra income by applying your various\r\nskills. It’s easier than you think! You simply have to click on “Post a Service” button and\r\nstart describing the service that you offer. Provide as much information as you can so\r\npotential clients will know how proficient you are with your skills. After you submit and\r\npost your service, just wait and potential clients will start sending offers to you.</p>\r\n     </div>\r\n     <img className=\"guide-image\" src=\"assets/img/home/4.png\" />\r\n     </div> \r\n\r\n     \r\n     <div className=\"guide-wrapper container\">\r\n     <img className=\"guide-image\" src=\"assets/img/home/5.png\" />\r\n     <div className=\"guide-section\">\r\n<p className=\"guide-heading\">2. Browse for Jobs</p>\r\n\r\n         <p className=\"guide-content\">You can easily find what members in our platform are looking for through our “Browse\r\nfor Jobs” page. Browse through a pool of jobs that are posted that hirers are looking\r\nfor freelancers to fulfill them. If you see something that matches your skill, and that\r\nyou can do, you can simply apply for it by clicking “Submit a Proposal” from the\r\nposted job.\r\nProve to hirers that you have what it takes to accomplish the job. Put in as much\r\ndetail as possible when sending a proposal so that you will have a better chance of\r\ngetting hired. After submitting your proposal, wait for the hirer to respond back to you.\r\nIf they accept your proposal, the job is yours. You can get paid hourly or fixed price.\r\nJust make sure you do the job well so that you can get a five-star rating and amazing\r\nfeedback.\r\nRemember, the more positive feedback and five-star rating that you have will make it\r\na lot easier for hirer to hire you and for you to earn more money</p>\r\n     </div>\r\n   \r\n     </div>         \r\n\r\n\r\n     <div className=\"container\">\r\n               <p className=\"section-heading\">Find a COFOUNDER</p>\r\n              <div className=\"text-section\"> <p className=\"section-text\">\r\n              Need an ideal co-founder or a business partner? Before you decide to partner with someone on a business idea, it is important\r\nfor you to get to know them first. Ideally, it would be great if you work with that person before making such a big decision. With\r\nJoBarter, you have the option to hire that person for a job or exchange services with that person to have a better understanding\r\nof the value they would bring to your business. In addition, you can also review their rating and feedback to have a better understanding of their experience working with other people. We can help you find the ideal partner you have been looking for to\r\nlaunch your business venture in two specific ways:\r\n               </p>\r\n           </div>\r\n           </div> \r\n\r\n           <div className=\"guide-wrapper container\">\r\n     <div className=\"guide-section\">\r\n<p className=\"guide-heading\">1. Post Co-founder Profile</p>\r\n\r\n         <p className=\"guide-content\">If you are interested in finding a co-founder to partner with, you simply have to select\r\n“Co-founder” when filling out your profile information. From there, a tab will appear for\r\nyou to provide more details about your own experience as a co-founder. You also will\r\nneed to provide information about the ideal co-founder you are looking for, including\r\nyour wish list, preferred location, and relevant industry.</p>\r\n     </div>\r\n     <img src=\"assets/img/home/6.png\" className=\"guide-image\" />\r\n     </div> \r\n\r\n     \r\n     <div className=\"guide-wrapper container\">\r\n     <img  src=\"assets/img/home/7.png\" className=\"guide-image\" />\r\n     <div className=\"guide-section\">\r\n<p className=\"guide-heading\">2. Browse for Co-founders</p>\r\n\r\n         <p className=\"guide-content\">You can easily find a partner for your business idea by navigating through our\r\n“Browse for Co-founders” page. To make it easier, you can select the category,\r\nrating, and country you want. If you find a potential candidate, you can add that\r\nperson on your “Connection”. Upon receiving an “Accepted Request” notification,\r\nyou can start messaging with the ideal co-founder.</p>\r\n     </div>\r\n   \r\n     </div> \r\n\r\n     \r\n     <div className=\"container\">\r\n               <p className=\"section-heading\">Rating & Review</p>\r\n              <div className=\"text-section\"> <p className=\"section-text\">\r\n              After each transaction whether it is by hiring a freelancer of exchanging your service with another member,\r\nyou can provide feedback about your experience. This process helps create a stronger community that is\r\nbased on trust, transparency and collaboration.\r\n               </p>\r\n           </div>\r\n           </div> \r\n\r\n           <div className=\"guide-wrapper container\">\r\n     <div className=\"guide-section\">\r\n<p className=\"guide-heading\">1. Rating</p>\r\n\r\n         <p className=\"guide-content\">Provide a rating about your collaboration. You can assess the person’s communication,\r\ncompetence, and whether you would recommend the person to other members of our\r\ncommunity.</p>\r\n     </div>\r\n     <img  src=\"assets/img/home/8.png\" className=\"guide-image\" />\r\n     </div> \r\n\r\n     \r\n     <div className=\"guide-wrapper container\">\r\n     <img  src=\"assets/img/home/9.png\" className=\"guide-image\" />\r\n     <div className=\"guide-section\">\r\n<p className=\"guide-heading\">2. Review</p>\r\n\r\n         <p className=\"guide-content\">You can write a review that will be public about your experience to describe your experience\r\n          after you have completed a service or a job contract with another freelancer. </p>\r\n     </div>\r\n   \r\n     </div>          \r\n     <Footer/>\r\n\r\n           </div>\r\n           </div>\r\n         \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default HowItWorks;","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass HelpAndFAQ extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        alert(this.state.value);\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return (<Main>\r\n            <DocumentTitle title={`Help and FAQ`}/>\r\n            <div className=\"help-page\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-lg-2\">\r\n                            <h1 className=\"text-center heading\"><span>Help Center</span></h1>\r\n                            <div className=\"any-search mb-3 mb-lg-4\">\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search Any Question\" onChange={this.handleChange} />\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-4 col-12\">\r\n                            <div className=\"border left-side py-3 mb-md-4 mb-3\">\r\n                                <h3 className=\"text-uppercase ml-3 mb-3\">Faq</h3>\r\n                                <ul className=\"nav flex-column\">\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link active\" to=\"#\">All</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to=\"#\">Freelancers</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to=\"#\">Jobs</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to=\"#\">Services</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to=\"#\">Getting Started</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to=\"#\">Message Center</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to=\"#\">Payment</NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-8 col-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6 col-12 mb-3\">\r\n                                    <h3 className=\"d-flex align-items-center\">\r\n                                        <span className=\"col pl-0\">Companies</span>\r\n                                        <small><NavLink to=\"#\">View All</NavLink></small>\r\n                                    </h3>\r\n                                    <ul className=\"list-text\">\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Cras id lorem sagittis ex convallis rutrum a blandit orci?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Nunc laoreet dui eget quam efficitur?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Urabitur pharetra, lorem et venenatis consequa?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Vestibulum ullamcorper ornare molestie?</NavLink></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-12 mb-3\">\r\n                                    <h3 className=\"d-flex align-items-center\">\r\n                                        <span className=\"col pl-0\">Freelancers</span>\r\n                                        <small><NavLink to=\"#\">View All</NavLink></small>\r\n                                    </h3>\r\n                                    <ul className=\"list-text\">\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Cras id lorem sagittis ex convallis rutrum a blandit orci?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Nunc laoreet dui eget quam efficitur?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Urabitur pharetra, lorem et venenatis consequa?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Vestibulum ullamcorper ornare molestie?</NavLink></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-12 mb-3\">\r\n                                    <h3 className=\"d-flex align-items-center\">\r\n                                        <span className=\"col pl-0\">Jobs</span>\r\n                                        <small><NavLink to=\"#\">View All</NavLink></small>\r\n                                    </h3>\r\n                                    <ul className=\"list-text\">\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Cras id lorem sagittis ex convallis rutrum a blandit orci?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Nunc laoreet dui eget quam efficitur?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Urabitur pharetra, lorem et venenatis consequa?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Vestibulum ullamcorper ornare molestie?</NavLink></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-12 mb-3\">\r\n                                    <h3 className=\"d-flex align-items-center\">\r\n                                        <span className=\"col pl-0\">Projects</span>\r\n                                        <small><NavLink to=\"#\">View All</NavLink></small>\r\n                                    </h3>\r\n                                    <ul className=\"list-text\">\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Cras id lorem sagittis ex convallis rutrum a blandit orci?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Nunc laoreet dui eget quam efficitur?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Urabitur pharetra, lorem et venenatis consequa?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Vestibulum ullamcorper ornare molestie?</NavLink></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-12 mb-3\">\r\n                                    <h3 className=\"d-flex align-items-center\">\r\n                                        <span className=\"col pl-0\">Getting Started</span>\r\n                                        <small><NavLink to=\"#\">View All</NavLink></small>\r\n                                    </h3>\r\n                                    <ul className=\"list-text\">\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Cras id lorem sagittis ex convallis rutrum a blandit orci?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Nunc laoreet dui eget quam efficitur?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Urabitur pharetra, lorem et venenatis consequa?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Vestibulum ullamcorper ornare molestie?</NavLink></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-12 mb-3\">\r\n                                    <h3 className=\"d-flex align-items-center\">\r\n                                        <span className=\"col pl-0\">Message Center</span>\r\n                                        <small><NavLink to=\"#\">View All</NavLink></small>\r\n                                    </h3>\r\n                                    <ul className=\"list-text\">\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Cras id lorem sagittis ex convallis rutrum a blandit orci?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Nunc laoreet dui eget quam efficitur?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Urabitur pharetra, lorem et venenatis consequa?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Vestibulum ullamcorper ornare molestie?</NavLink></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-12 mb-3\">\r\n                                    <h3 className=\"d-flex align-items-center\">\r\n                                        <span className=\"col pl-0\">Payment</span>\r\n                                        <small><NavLink to=\"#\">View All</NavLink></small>\r\n                                    </h3>\r\n                                    <ul className=\"list-text\">\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Cras id lorem sagittis ex convallis rutrum a blandit orci?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Nunc laoreet dui eget quam efficitur?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Urabitur pharetra, lorem et venenatis consequa?</NavLink></li>\r\n                                        <li className=\"border-bottom pb-2\"><NavLink to=\"#\">Vestibulum ullamcorper ornare molestie?</NavLink></li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default HelpAndFAQ;","import React, { Component } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Main } from '../../layout';\r\nimport FormValidator from '../../../helpers/FormValidator';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { defaultActions } from '../../../common/redux/actions';\r\n\r\nclass ContactUs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            formField: {\r\n                first_name: '',\r\n                last_name: '',\r\n                email: '',\r\n                subject: '',\r\n                body: ''\r\n            },\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n        this.initializeState = this.state;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n\r\n\r\n    validator() {\r\n        return new FormValidator([\r\n            { field: 'email', method: 'isEmpty', validWhen: false, message: 'email address is required.' },\r\n            { field: 'email', method: 'isEmail', validWhen: true, message: 'Invalid email address.' },\r\n            { field: 'subject', method: 'isEmpty', validWhen: false, message: 'Subject is required.' },\r\n            { field: 'first_name', method: 'isEmpty', validWhen: false, message: 'First Name is required.' },\r\n            { field: 'last_name', method: 'isEmpty', validWhen: false, message: 'Last Name is required.'},\r\n            { field: 'body', method: 'isEmpty', validWhen: false, message: 'Message is required.'},\r\n        ]);\r\n    };\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n\r\n        if (validation.isValid) {\r\n            const { dispatch } = this.props;\r\n            dispatch(defaultActions.contact({ contactForm: formField }));\r\n            this.setState(this.initializeState);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { formField, submitted, validation} = this.state;\r\n        const isValid = submitted ? this.validator().validate(formField) : validation;\r\n        const { location } = this.props;\r\n        let search = new URLSearchParams(location.search);\r\n        return (<Main onlycontent={search.get(\"onlycontent\")}>\r\n            <DocumentTitle title={`Contact Us`} />\r\n            <div className=\"contact-page\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl=\"7\" sm={12}>\r\n                            <h1>Contact Us</h1>\r\n                            <h3> Do you need help? Please send us a message and we will respond as soon as possible.</h3>\r\n                        </Col>\r\n                        <Col xl=\"5\" sm={12} className=\"ml-auto\">\r\n                            <form onSubmit={this.handleSubmit} >\r\n                                <div className=\"box-right\"></div>\r\n                                <div className=\"inner-box\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>First Name</label>\r\n                                        <input type=\"text\" name=\"first_name\" value={formField.first_name} onChange={this.handleChange} className={'form-control ' + (submitted && isValid.first_name.isInvalid ? 'is-invalid' : '')} />\r\n                                        {submitted && isValid.first_name.isInvalid &&\r\n                                            <div className=\"invalid-feedback\"> {isValid.first_name.message} </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Last Name</label>\r\n                                        <input type=\"text\" name=\"last_name\" value={formField.last_name} onChange={this.handleChange} className={'form-control ' + (submitted && isValid.last_name.isInvalid ? 'is-invalid' : '')} />\r\n                                        {submitted && isValid.last_name.isInvalid &&\r\n                                            <div className=\"invalid-feedback\"> {isValid.last_name.message} </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Email Address</label>\r\n                                        <input type=\"email\" name=\"email\" value={formField.email} onChange={this.handleChange} className={'form-control ' + (submitted && isValid.email.isInvalid ? 'is-invalid' : '')} />\r\n                                        {submitted && isValid.email.isInvalid &&\r\n                                            <div className=\"invalid-feedback\"> {isValid.email.message} </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Subject</label>\r\n                                        <input type=\"text\" name=\"subject\" value={formField.subject} onChange={this.handleChange} className={'form-control ' + (submitted && isValid.subject.isInvalid ? 'is-invalid' : '')} />\r\n\r\n                                        {submitted && isValid.subject.isInvalid &&\r\n                                            <div className=\"invalid-feedback\"> {isValid.subject.message} </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Message</label>\r\n                                        <textarea id=\"body\" name=\"body\" onChange={this.handleChange}\r\n                                            value={formField.body} className={'form-control ' + (submitted && isValid.body.isInvalid ? 'is-invalid' : '')}></textarea>\r\n                                        {submitted && isValid.body.isInvalid &&\r\n                                            <div className=\"invalid-feedback\"> {isValid.body.message} </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"button\">\r\n                                        <button type=\"submit\" className=\"btn btn-info btn-lg btn-block\">Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ContactUs);","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass TermsOfService extends Component {\r\n    render() {\r\n        const { location } = this.props;\r\n        let search = new URLSearchParams(location.search);\r\n        return (\r\n\r\n            <Main onlycontent={search.get(\"onlycontent\")}>\r\n                <DocumentTitle title={`JoBarter Terms of Service`}/>\r\n            <div className=\"contant-pages\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs>\r\n\r\n\r\n\r\n                <h1>JoBarter Terms of Service</h1>\r\n\r\n                    Effective Date: September 17, 2019 <br />\r\n                    Last Updated: September 17, 2019 <br /><br />\r\n\r\n\r\n                   <p className=\"pb-2\">Thank you (\"you\", \"user\") for using JoBarter by JoBarter Corporation (\"JoBarter\", \"jobarter\", \"we\", \"us\", \"our\"). These Terms of Service constitute a legally binding agreement (\"Agreement\") between you and JoBarter that describes your rights, rules and responsibilities when accessing or using our services through JoBarter.com (\"Site\") or our mobile applications (collectively, \"Services\").</p>\r\n\r\n<p className=\"pb-2\">Please read these Terms, our Privacy Policy, and any other terms referenced in this document carefully before use. BY USING THIS SITE OR OPENING AN ACCOUNT, YOU ACCEPT AND AGREE TO BE BOUND AND ABIDE BY THESE TERMS OF SERVICE AND OUR PRIVACY POLICY, FOUND HERE INCORPORATED HEREIN BY REFERENCE. IF YOU DO NOT AGREE TO THESE TERMS OF SERVICE OR THE PRIVACY POLICY, PLEASE REFRAIN FROM USING THIS SITE IMMEDIATELY.</p>\r\n\r\n<p className=\"pb-2\">This Site is offered and available to users who are 13 years of age or older. If you are under 13 you may not use this Site or our services. By using this Site, you represent and warrant that you are of legal age to form a binding contract and meet all of the foregoing eligibility requirements. If you do not meet all of these requirements, you must not access or use the Site.</p>\r\n\r\n <h2> Purpose</h2>\r\n<p className=\"pb-2\">\r\nJoBarter.com is an Internet-based venue that facilitates communications between Users of the Site (the term \"other users of the Site\" consists of Users of the Site who, themselves, are also subject to this Agreement as Users) for the purpose of exchanging information. The Site is intended to assist Users in identifying those who are interested in sending or obtaining Post Data (as defined herein). The Site acts as an online venue. The Site does not guarantee that the User will obtain any benefit through the Site nor ensure that the User will actually complete a transaction. Services provided through the Site are not guaranteed or warranted and Users must always use caution and common sense when entering into a transaction and always inspect other users.</p>\r\n<p className=\"pb-2\">\r\nJoBarter takes no position and offers no opinion on when or if a contractual agreement or other relationship is formed between the User and other users of the Site or other parties or when delivery occurs. In order to provide an optimal forum for the User, the Site does not involve itself in the agreements between the User and other users of the Site or the actual delivery or provision or delivery of goods or services of the User or other users of the Site, third parties, or any other person or entity. Therefore, the Site cannot ensure the completion of any agreement, representation, warranty, or the integrity of any party. The Site will not be a party to any fee or referral fee dispute or other related legal matter, or claim asserted by or amongst the User or other users of the Site. If the User has a dispute with one or more other users of the Site, the Users release the Site from claims, demands and damages (actual and consequential) of every kind and nature, known and unknown, arising out of or in any way connected with such disputes.</p>\r\n\r\n\r\n <h2> Modifications to Agreements</h2>\r\n<p className=\"pb-2\">You can see when this Agreement was last updated by viewing the relevant date on the top left of this page. We reserve the right to revise the terms of this Agreement, at any time and from time to time, for any reason in our sole discretion by posting an updated Terms of Service Agreement with or without advance notice to you. We shall post or display notices of material changes on the Site's homepage or otherwise on the Site and e-mail you about these changes. Once we post them on the Site, these changes become effective immediately and, if you use the Site after they become effective, it will signify your agreement to be bound by the changes. </p>\r\n\r\n\r\n\r\n <h2> User Accounts</h2>\r\n <p className=\"pb-2\">\r\nIn order to use our Service and certain features of the Site, you must register for an account (\"Account\"). By creating an account, you represent and warrant that: (i) all required registration information is truthful and accurate, (ii) you will maintain the accuracy of such information, and (iii) you will abide by our User Guidelines as well as all applicable laws. We reserve the right to decline, suspend, or terminate your Account at our sole discretion at any time and for any reason. You agree that JoBarter will not be liable to you or to any third party for any suspension or termination of your Account or any refusal of any use of the Site or Services (or any portion thereof).</p>\r\n<p className=\"pb-2\">\r\nYou are responsible for maintaining the confidentiality of your Account information and are solely responsible for all activities that occur under your Account. JoBarter will not be liable for any acts or omissions by you, including damages of any kind incurred as a result of such acts or omissions. You agree to immediately notify JoBarter of any unauthorized use, or suspected unauthorized use, of your Account. </p>\r\n<p className=\"pb-2\">\r\nIf you create an Account as an employee or agent on behalf of a company, you represent and warrant that you are authorized to enter into binding contracts, including this Agreement, on behalf of yourself and the company. </p>\r\n\r\n\r\n <h2> User Guidelines</h2>\r\n <p className=\"pb-2\">\r\nPlease be thoughtful about how you use JoBarter and respect your fellow Users. By joining JoBarter, you are agreeing to follow the User Guidelines (\"Guidelines\") below. You must adhere to these Guidelines in order to access and use our Site and Service.</p>\r\n <p className=\"pb-2\">\r\nJoBarter encourages the Users of the Site to report problems, offensive content, and policy violations. The following material is prohibited and applies to all User activity and communications made using our Site, Service, or in connection to our Site or Service, with other Users, JoBarter, or any third parties:</p>\r\n<ol >\r\n<li>\r\n   is offensive, abusive, defamatory, pornographic, threatening, or obscene;\r\n    </li>\r\n    <li>\r\n    is illegal, or intended to promote or commit an illegal act of any kind, including violations of intellectual property rights, privacy rights, or proprietary rights of JoBarter or a third party;\r\n    </li>\r\n    <li>\r\n    includes your password or purposely includes any other user’s password or purposely includes personal data of third parties or is intended to solicit such personal data;\r\n    </li>\r\n    <li>\r\n     includes malicious content such as malware, Trojan horses, or viruses, or otherwise interferes with any user’s access to the Service;\r\n    </li>\r\n    <li>\r\n   is intended to or does harass or bully other users;\r\n    </li>\r\n    <li>\r\n   impersonates or misrepresents your affiliation with another user, person, or entity, or is otherwise fraudulent, false, deceptive, or misleading;\r\n    </li>\r\n    <li>\r\n     misrepresents your skills, services, employment history, work history, Account information or profile information\r\n    </li>\r\n    <li>\r\n     involves the transmission of unsolicited mass mailings or other forms of spam (\"spam\"), junk mail, chain letters, or similar;\r\n    </li>\r\n    <li>\r\n    involves commercial or sales activities, such as advertising, promotions, contests, sweepstakes, or pyramid schemes, that are not expressly authorized by JoBarter;\r\n    </li>\r\n    <li>\r\n     links to, references, or otherwise promotes commercial products or services, except as expressly authorized by JoBarter;\r\n    </li>\r\n    <li>\r\n     interferes with or in any way disrupts the Service, tampers with, breaches, or attempts to probe, scan, or test for vulnerabilities in the Service or JoBarter’s computer systems, network, usage rules, or any of JoBarter’s security components, authentication measures or any other protection measures applicable to the Service, or any part thereof; or\r\n    </li>\r\n    <li>\r\n     conflicts with the Agreements, as determined by JoBarter.\r\n    </li>\r\n    <li>\r\n    violates the rights of another, including but not limited to the intellectual property rights of another. This includes using the Site for acts of copyright, trademark, patent, trade secret, or other intellectual property infringement, including but not limited to offering pirated computer programs or links to such programs, information used to circumvent manufacturer-installed copy-protect devices, including serial or registration numbers for software programs, or any type of cracker utilities (this also includes files which are solely intended for game emulation)\r\n    </li>\r\n    <li>\r\n   harvest or otherwise collect information about other users of the Site, including e-mail addresses, without their consent\r\n     </li>\r\n    <li>\r\n copy/collect JoBarter content via robots, spiders, scripts, scrapers, crawlers, or any automated or manual equivalent (e.g., by hand)\r\n    </li>\r\n    <li>\r\n    attempts to circumvent payment methods by negotiating, accepting, invoicing, submitting, referring to third parties, or otherwise working with freelancers and Users identified on the Site, through methods outside of the Site. For more information, please see the \"Non-Circumvention\" section, below.\r\n    </li>\r\n    </ol>\r\n <p className=\"pb-2\">\r\nYou agree that any activity from your Account that violates these Guidelines (or that JoBarter reasonably believes violates these Guidelines) may result in immediate termination or suspension of your Account.</p>\r\n\r\n\r\n<h2>Non-Circumvention</h2>\r\n <p className=\"pb-2\">\r\nYou acknowledge and agree that a substantial portion of the compensation JoBarter receives for making the Site available to you is collected through the Fee described in \"Fees\" section, below. JoBarter only receives this Service Fee when a Client and a Freelancer pay and receive payment through the Site. Therefore, for 6 months from the time you identify or are identified by any party through the Site (the \"<b>Non-Circumvention Period</b>\"), you agree to use the Site and Services as your exclusive method to request, make, and receive all payments for work directly or indirectly with that party or arising out of your relationship with that party (the \"<b>JoBarter Relationship</b>\"). For the avoidance of doubt, if you, or the business you represent, did not identify and were not identified by another party through the Site, such as if you and another User worked together before meeting on the Site, then the Non-Circumvention Period does not apply. If you use the Site as an employee, agent, or representative of another business, then the Non-Circumvention Period applies to you and other employees, agents, or representatives of the business when acting in that capacity with respect to the other User.</p>\r\n\r\n<h2>Using JoBarter</h2>\r\n <p className=\"pb-2\">\r\nThe User may post or list (\"post,\" and as an act to \"post, \"posting,\" or \"posted\" etc.) information on the Site about potential cases, sales, clients, etc. or any other information posted to the Site (collectively and individually, \"Post Data\") that that the User would like to share with other users of the Site, so long as:</p>\r\n<ol>\r\n   <li> the User is authorized to post such Post Data</li>\r\n    <li> the User, the Post Data, and the act of posting the information does not violate this Agreement or other law</li>\r\n    <li> the Post Data is of a nature requested by and appropriate for the Site</li>\r\n    </ol>\r\n <p className=\"pb-2\">The Site provides a means for the User and other users of the Site to ask each other questions related to the Post Data. The User shall in good faith attempt to respond in a timely fashion to all reasonable queries from the Site and other users of the Site about Post Data that the User posts to the Site. Queries are prominently displayed on the Site to the User once the user logs into the Site. The Site may also forward queries to the User's outside or private e-mail account(s).</p>\r\n\r\n\r\n<h2>Communication with JoBarter</h2>\r\n<p className=\"pb-2\">\r\nAny questions regarding the Site, Services or Agreements may be sent to <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a></p>\r\n<p className=\"pb-2\">\r\nBy using the Site, the User consents to receive e-mails, which may include commercial e-mails provided such e-mails are in accordance with the User preferences. Users may opt-out of promotional e-mails by messaging <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a>.</p>\r\n<p className=\"pb-2\"><i>\r\nPlease note that as long as the User maintains an account, the User may not \"opt out\" of receiving Service or account-related e-mails from the Site.</i>\r\n</p>\r\n\r\n\r\n\r\n<h2>Fees</h2>\r\n<ol>\r\n   <li> Depending on your account type, you may purchase one of several services: Commission – 10% Fee when hiring a freelancer</li>\r\n   <li> Freemium Subscription:\r\n       <ol type=\"a\">\r\n            <li> $19.99/M – 1-Month</li>\r\n            <li> $14.99/M – 6-Month</li>\r\n            <li> $8.99/M – 12-Month</li>\r\n        </ol>\r\n    </li>\r\n</ol>\r\n\r\n\r\n\r\n<h2>Taxes and Benefits</h2>\r\n<p className=\"pb-2\">\r\nFreelancer acknowledges and agrees that Freelancer is solely responsible (a) for all tax liability associated with payments received from Freelancer’s Clients and through JoBarter, and that JoBarter will not withhold any taxes from payments to Freelancer; (b) to obtain any liability, health, workers’ compensation, disability, unemployment, or other insurance needed, desired, or required by law, and that Freelancer is not covered by or eligible for any insurance from JoBarter; (c) for determining whether Freelancer is required by applicable law to issue any particular invoices for the Freelancer Fees and for issuing any invoices so required; (d) for determining whether Freelancer is required by applicable law to remit to the appropriate authorities any value added tax or any other taxes or similar charges applicable to the Freelancer Fees and remitting any such taxes or charges to the appropriate authorities, as appropriate; and (e) if outside of the United States, for determining if JoBarter is required by applicable law to withhold any amount of the Freelancer Fees and for notifying JoBarter of any such requirement and indemnifying JoBarter for any requirement to pay any withholding amount to the appropriate authorities (including penalties and interest). In the event of an audit of JoBarter, Freelancer agrees to promptly cooperate with JoBarter and provide copies of Freelancer’s tax returns and other documents as may be reasonably requested for purposes of such audit, including but not limited to records showing Freelancer is engaging in an independent business as represented to JoBarter.</p>\r\n\r\n\r\n<h2>Worker Classification</h2>\r\n<p className=\"pb-2\">\r\nNothing in this Agreement is intended to or should be construed to create a partnership, joint venture, franchisor/franchisee or employer-employee relationship between JoBarter and a User.</p>\r\n<p className=\"pb-2\">\r\nClient is solely responsible for and has complete discretion with regard to selection of any Freelancer for any Project. Client is solely responsible, warrants its decisions regarding classification are correct, and assumes all liability, for determining whether Freelancers should be engaged as independent contractors or employees of Client and engaging them accordingly; JoBarter will have no input into, or involvement in, worker classification as between Client and Freelancer and Users agree that JoBarter has no involvement in and will have no liability arising from or relating to the classification of a Freelancer generally or with regard to a particular Project.</p>\r\n\r\n\r\n<h2>Disclaimer of Warranties</h2>\r\n<p className=\"pb-2\">\r\nYOU AGREE NOT TO RELY ON THE SITE, THE SITE SERVICES, ANY INFORMATION ON THE SITE OR THE CONTINUATION OF THE SITE. THE SITE AND THE SITE SERVICES ARE PROVIDED “AS IS” AND ON AN “AS AVAILABLE” BASIS. JOBARTER MAKES NO REPRESENTATION THAT THE SERVICE WILL BE UNINTERRUPTED, TIMELY, SECURE, OR ERROR-FREE; NOR DOES THE SITE MAKE ANY WARRANTY AS TO THE RESULTS THAT MAY BE OBTAINED FROM THE USE OF THE SERVICE OR AS TO THE ACCURACY OR RELIABILITY OF ANY INFORMATION OBTAINED THROUGH THE SERVICE OR THAT DEFECTS IN THE SOFTWARE OR NETWORK WILL BE CORRECTED. THE SITE MAKES NO WARRANTY REGARDING ANY GOODS OR SERVICES PURCHASED OR INFORMATION OBTAINED THROUGH THE SERVICE OR ANY TRANSACTIONS ENTERED INTO THROUGH THE SERVICE.JOBARTER MAKES NO REPRESENTATIONS OR WARRANTIES WITH REGARD TO THE SITE, THE SITE SERVICES, WORK PRODUCT, OR ANY ACTIVITIES OR ITEMS RELATED TO THIS AGREEMENT OR THE TERMS OF SERVICE. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, JOBARTER DISCLAIMS ALL EXPRESS AND IMPLIED CONDITIONS, REPRESENTATIONS, AND WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, ACCURACY, FITNESS FOR A PARTICULAR PURPOSE, TITLE, AND NON-INFRINGEMENT. SOME JURISDICTIONS MAY NOT ALLOW FOR ALL OF THE FOREGOING LIMITATIONS ON WARRANTIES, SO TO THAT EXTENT, SOME OR ALL OF THE ABOVE LIMITATIONS MAY NOT APPLY TO YOU. </p>\r\n\r\n<h2>Release of Claims for Disputes between Users </h2>\r\n<p className=\"pb-2\">\r\nIn addition to the recognition that JoBarter is not a party to any contract between Users, you hereby release JoBarter, our Affiliates, and our respective officers, directors, agents, subsidiaries, joint ventures, employees and service providers from claims, demands, and damages (actual and consequential) of every kind and nature, known and unknown, arising out of or in any way connected with any dispute you have with another User, whether it be at law or in equity that exist as of the time you enter into this agreement. This release includes, for example and without limitation, any disputes regarding the performance, functions, and quality of the Freelancer Services provided to Client by a Freelancer and requests for refunds based upon disputes. </p>\r\n<p className=\"pb-2\">\r\nTO THE EXTENT APPLICABLE, YOU HEREBY WAIVE THE PROTECTIONS OF CALIFORNIA CIVIL CODE § 1542 (AND ANY ANALOGOUS LAW IN ANY OTHER APPLICABLE JURISDICTION) WHICH SAYS: “A GENERAL RELEASE DOES NOT EXTEND TO CLAIMS WHICH THE CREDITOR DOES NOT KNOW OR SUSPECT TO EXIST IN HIS OR HER FAVOR AT THE TIME OF EXECUTING THE RELEASE, WHICH IF KNOWN BY HIM OR HER MUST HAVE MATERIALLY AFFECTED HIS OR HER SETTLEMENT WITH THE DEBTOR.”</p>\r\n<p className=\"pb-2\">\r\nThis release will not apply to a claim that JoBarter failed to meet our obligations under the Terms of Service.</p>\r\n\r\n<h2>Indemnification</h2>\r\n\r\n<p className=\"pb-2\">\r\nJoBarter is not liable, and you agree not to hold us responsible, for any damages or losses arising out of or in connection with the Terms of Service, including, but not limited to:</p>\r\n<ul>\r\n    <li> your use of or your inability to use our Site or Site Services;</li>\r\n    <li> delays or disruptions in our Site or Site Services;</li>\r\n    <li> viruses or other malicious software obtained by accessing, or linking to, our Site or Site Services;</li>\r\n    <li> glitches, bugs, errors, or inaccuracies of any kind in our Site or Site Services;</li>\r\n    <li> damage to your hardware device from the use of the Site or Site Services;</li>\r\n    <li> the content, actions, or inactions of third parties’ use of the Site or Site Services;</li>\r\n    <li> a suspension or other action taken with respect to your Account;</li>\r\n    <li> your reliance on the quality, accuracy, or reliability of job postings, Profiles, ratings, recommendations, and feedback (including their content, order, and display), Composite Information, or metrics found on, used on, or made available through the Site; and</li>\r\n    <li> your need to modify practices, content, or behavior or your loss of or inability to do business, as a result of changes to the Terms of Service.</li>\r\n        </ul>\r\n<p className=\"pb-2\">\r\n        ADDITIONALLY, IN NO EVENT WILL JOBARTER, OUR AFFILIATES, OUR LICENSORS, OR OUR THIRD-PARTY SERVICE PROVIDERS, AGENTS, OFFICERS, OR DIRECTORS BE LIABLE FOR DAMAGES OF ANY KIND, UNDER ANY LEGAL THEORY, ARISING OUT OF OR IN CONNECTION WITH YOUR USE, OR INABILITY TO USE, THE WEBSITE, ANY WEBSITES LINKED TO IT, ANY CONTENT ON THE WEBSITE OR SUCH OTHER WEBSITES OR ANY SERVICES OR ITEMS OBTAINED THROUGH THE WEBSITE OR SUCH OTHER WEBSITES, INCLUDING ANY SPECIAL, CONSEQUENTIAL, INCIDENTAL, PUNITIVE, EXEMPLARY, OR INDIRECT COSTS OR DAMAGES, INCLUDING, BUT NOT LIMITED TO, PERSONAL INJURY, PAIN AND SUFFERING, EMOTIONAL DISTRESS, LITIGATION COSTS, INSTALLATION AND REMOVAL COSTS, OR LOSS OF DATA, PRODUCTION, PROFIT ANTICIPATED SAVINGS, OR BUSINESS OPPORTUNITIES AND WHETHER CAUSED BY TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY, BREACH OF CONTRACT OR OTHERWISE, EVEN IF FORESEEABLE.</p>\r\n        <p className=\"pb-2\">\r\nTHE FOREGOING DOES NOT AFFECT ANY LIABILITY WHICH CANNOT BE EXCLUDED OR LIMITED UNDER APPLICABLE LAW.</p>\r\n\r\n\r\n\r\n\r\n<h2>Choice of Law</h2>\r\n<p className=\"pb-2\">\r\nThese Terms of Service and any Claim will be governed by and construed in accordance with the laws of the State of Delaware, without regard to its conflict of law.</p>\r\n\r\n\r\n<h2>Copyright</h2>\r\n<p className=\"pb-2\">\r\nJoBarter respects the intellectual property rights of others and asks its users to do the same. If you believe that any material on the Site infringes upon any copyright which you own or control, you may file a notification of such infringement with the Site's Designated Agent: contact@obarter.com.</p>\r\n<p className=\"pb-2\">\r\nWe may give notice of a claim of copyright infringement to the User or other users of the Site by means of a general notice on the Site, e-mail to a User's or other users of the site's e-mail address in our records, or by written communication sent by first-class mail to a User's or other users of the Site's address in our records.</p>\r\n<p className=\"pb-2\">\r\nJoBarter owns certain things on this system, including the 'look and feel' of the system, the name of the system, the collective work copyright in sequences of public messages on the system, and the business method. You cannot reproduce any message thread from the system, either electronically or in print, without our permission and the permission of all participants in the thread. This is not a complete list - other things on the system are also the JoBarter 's property. Contact JoBarter before copying anything from the system with plans of reproducing it or distributing it.</p>\r\n<p className=\"pb-2\">\r\nYou acknowledge and agree that content, including but not limited to text, software, music, sound, photographs, graphics, video, page layout and design, or other material contained in the Site or information presented through the Site is protected by copyrights, trademarks, service marks, patents, or other proprietary rights and laws. You acknowledge and agree that you may use the Site and Service, and the material and information contained therein, only as expressly authorized by JoBarter or its Sponsors, and may not copy, reproduce, transmit, distribute, or create derivative works of such content or information without express authorization.</p>\r\n<p className=\"pb-2\">\r\nWe may use your profile image as well as any comments and content that you post on our Site for marketing and promotional purposes. You acknowledge and agree that JoBarter can display your profile images and other images, videos, and text submitted to the Site, on our Site and Services.</p>\r\n\r\n<h2>Severability</h2>\r\n<p className=\"pb-2\">\r\nIf and to the extent any provision of this Agreement is held illegal, invalid, or unenforceable in whole or in part under applicable law, such provision or such portion thereof will be ineffective as to the jurisdiction in which it is illegal, invalid, or unenforceable to the extent of its illegality, invalidity, or unenforceability and will be deemed modified to the extent necessary to conform to applicable law so as to give the maximum effect to the intent of the parties. The illegality, invalidity, or unenforceability of such provision in that jurisdiction will not in any way affect the legality, validity, or enforceability of such provision in any other jurisdiction or of any other provision in any jurisdiction.</p>\r\n\r\n<h2>Waiver</h2>\r\n<p className=\"pb-2\">\r\nIf we fail to exercise or enforce any right or provision of this Agreement or other incorporated agreements, that failure shall not be used to prove or be construed that the Site has waived the right or provision. If any provision of this Agreement or other incorporated agreements is found by a court of competent jurisdiction to be invalid, the User nevertheless agree that the court should endeavor to give effect to the parties' intentions as reflected in the provision, and that the other provisions of the Agreement remain in full force and effect. </p>\r\n<p className=\"pb-2\">\r\nTHE USER AGREES THAT REGARDLESS OF ANY STATUTE OR LAW TO THE CONTRARY, ANY CLAIM OR CAUSE OF ACTION ARISING OUT OF OR RELATED TO USE OF THE SITE OR SERVICES OR THE AGREEMENT OR INCORPORATED AGREEMENTS MUST BE FILED BY THE USER OR THIRD PARTY WITHIN ONE (1) YEAR AFTER SUCH CLAIM OR CAUSE OF ACTION AROSE OR BE FOREVER BARRED.</p>\r\n\r\n<h2>Survival</h2>\r\n<p className=\"pb-2\">\r\nAfter this Agreement terminates, the terms of this Agreement and the other Terms of Service that expressly or by their nature contemplate performance after this Agreement terminates or expires will survive and continue in full force and effect. For example, the provisions protecting intellectual property, requiring non-circumvention, indemnification, payment of fees, reimbursement and setting forth limitations of liability each, by their nature, contemplate performance or observance after this Agreement terminates. Without limiting any other provisions of the Terms of Service, the termination of this Agreement for any reason will not release you or JoBarter from any obligations incurred prior to termination of this Agreement or that thereafter may accrue in respect of any act or omission prior to such termination.</p>\r\n\r\n<h2>Entire Agreement</h2>\r\n<p className=\"pb-2\">\r\nThis Agreement sets forth the entire agreement and understanding between you and JoBarter relating to the subject matter hereof and thereof and cancels and supersedes any prior or contemporaneous discussions, agreements, representations, warranties, and other communications between you and us, written or oral, to the extent they relate in any way to the subject matter hereof and thereof. The section headings in the Terms of Service are included for ease of reference only and have no binding effect. Even though JoBarter drafted the Terms of Service, you represent that you had ample time to review and decide whether to agree to the Terms of Service. </p>\r\n\r\n<h2>Questions About Terms of Service</h2>\r\n<p className=\"pb-2\">\r\nIf you have any questions about our Terms of Service, you can contact us by emailing us at <a href=\"mailto:contact@jobarter.com\">contact@jobarter.com</a>. </p>\r\n              </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default TermsOfService;\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nclass ComingSoon extends Component {\r\n    render() {\r\n        return (<Main>\r\n            <DocumentTitle title={`Coming Soon`} />\r\n            <div className=\"contact-page\" style={{backgroundImage: 'none', }}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            <h1>Coming Soon...</h1>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default ComingSoon;","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }) => {\r\n    useEffect(() => {\r\n      window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return children || null;\r\n  };\r\n\r\nexport default withRouter(ScrollToTop);\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { IconButton, } from '@material-ui/core';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { itemService } from '../../../../common/services';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\n\r\nclass FreelancerListing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favorite: {},\r\n        }\r\n    }\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userFavorite\": {\r\n                favorite_id: item.id,\r\n                moduleId: \"UserProfile\"\r\n            }\r\n        };\r\n\r\n        let method = (item.is_favorite) ? \"DELETE\" : \"POST\";\r\n        let param = (item.is_favorite) ? { item_id: item.is_favorite } : null;\r\n        let action = (item.is_favorite) ? \"remove\" : \"add\";\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to ${action}`,\r\n            message: `Are you sure you want to ${action} this service to your favorites list?`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(method, params, param)\r\n                            .then(response => {\r\n                                if (method === \"POST\") dispatch(alertSelectors.success(\"You have successfully selected a favorite.\"));\r\n                                if (method === \"DELETE\") dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                item.is_favorite = (method === \"POST\") ? response.model.id : false;\r\n                                this.setState({ favorite: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { process, results, is_co_founder } = this.props;\r\n        console.log(results)\r\n        return (\r\n            // <div className=\"row \">\r\n            //     <div className=\"col-md-4\">\r\n            //         {process.loading ? <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={4} /> :\r\n            //             // <Fragment>\r\n            //                 results && results.items && results.items.map((item) =>\r\n            //                     // <div className=\"freLncrBox card mb-4\" key={`item-${item.id}`}>\r\n            //                     //     <div className=\"card-body d-flex flex-wrap\">\r\n            //                     //         <div className=\"profile\">\r\n            //                     //             <NavLink to={`/user/public/${(is_co_founder) ? 'co-founder' : 'about'}/${item.id}`}> \r\n            //                     //                 <LazyLoadImage alt=\"image\" className=\"img-fluid rounded-circle\" width=\"145\" height=\"145\" src={item.avatar} effect=\"blur\" />\r\n            //                     //             </NavLink>\r\n            //                     //         </div>\r\n            //                     //         <div className=\"caption\">\r\n            //                     //             <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n            //                     //                 {(item.is_favorite) ? <i className=\"fas fa-heart text-info\"></i> :\r\n            //                     //                     <i className=\"far fa-heart\"></i>}\r\n            //                     //             </IconButton>\r\n            //                     //             <h3><NavLink to={`/user/public/${(is_co_founder) ? 'co-founder' : 'about'}/${item.id}`}>{item.name}</NavLink></h3>\r\n            //                     //             <div className=\"position\">\r\n            //                     //                 {item.skills && item.skills.map((skill) => skill.title).join(\", \")}\r\n            //                     //             </div>\r\n            //                     //             {(item && item.countryCode) &&\r\n            //                     //             <div className=\"address\">\r\n            //                     //                 <i className=\"fas fa-map-marker-alt\"></i> {item && item.countryCode && item.countryCode.name}\r\n            //                     //             </div>}\r\n            //                     //             <div className=\"text\">{item.about && item.about.substr(0, 180)}</div>\r\n            //                     //         </div>\r\n            //                     //     </div>\r\n            //                     // </div>\r\n            //                     <div class=\"card-box text-center\">\r\n            //                         <div class=\"most-popular\">\r\n            //                             <span>Feautured</span>\r\n            //                         </div>\r\n            //                         <div class=\"clearfix\"></div>\r\n            //                         <div class=\"member-card\">\r\n            //                             <div class=\"member-thumb\">\r\n            //                                 <a href=\"company.html\"><img src={item.avatar} class=\"img-circle img-thumbnail\" alt=\"profile-image\" /></a>\r\n            //                                 <i class=\"fa fa-star member-star text-success\" title=\"verified user\"></i>\r\n            //                             </div>\r\n\r\n            //                             <div class=\"small-line-height\">\r\n            //                                 <h4><a href=\"company.html\">Julie L. Arsenault</a></h4>\r\n            //                                 <p class=\"text-muted p-location\"><i class=\"fa fa-map-marker\"></i> Nairobi, Kenya</p>\r\n            //                                 <p class=\"p-star\">\r\n            //                                     <i class=\"fa fa-star rating-star\"></i>\r\n            //                                     <i class=\"fa fa-star rating-star\"></i>\r\n            //                                     <i class=\"fa fa-star rating-star\"></i>\r\n            //                                     <i class=\"fa fa-star rating-star\"></i>\r\n            //                                     <i class=\"fa fa-star rating-star\"></i>\r\n            // \t 99% (222)\r\n            // \t</p>\r\n            //                             </div>\r\n\r\n            //                             <h5>ISTQB certified Expert QA Engineer, QA Lead</h5>\r\n            //                             <h6>Company</h6>\r\n            //                             <p class=\"text-muted font-16\">\r\n            //                                 Hi I'm Johnathn Deo,has been the industry's standard dummy text ever since the 1500s.\r\n            //    </p>\r\n\r\n            //                         </div>\r\n\r\n            //                         <div class=\"row\">\r\n            //                             <div class=\"col-sm-4\">\r\n            //                                 <h6>1</h6>\r\n            //                                 <p class=\"bottom\">Jobs Done</p>\r\n            //                             </div>\r\n            //                             <div class=\"col-sm-4\">\r\n            //                                 <h6>4,345</h6>\r\n            //                                 <p class=\"bottom\">Hours Worked</p>\r\n            //                             </div>\r\n            //                             <div class=\"col-sm-4\">\r\n            //                                 <h6>$15.00/hr</h6>\r\n            //                                 <p class=\"bottom\">Hourly Rate</p>\r\n            //                             </div>\r\n            //                         </div>\r\n\r\n            //                     </div>\r\n            //                 )\r\n            //             // </Fragment>\r\n            //         }\r\n            //     </div>\r\n            // </div>\r\n\r\n            <div class=\"row\">\r\n                {\r\n                    process.loading ? \"Loading..\" :\r\n                        results && results.items && results.items.map((item) =>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"card-box text-center\">\r\n                                    <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                        {(item.is_favorite) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                            <i className=\"far fa-heart\"></i>}\r\n                                    </IconButton>\r\n                                    {item.feautured &&\r\n                                        <div class=\"most-popular\">\r\n                                            <span>Feautured</span>\r\n                                        </div>\r\n                                    }\r\n                                    <div class=\"clearfix\"></div>\r\n                                    <div class=\"member-card\">\r\n                                        <div class=\"member-thumb\">\r\n                                            <NavLink to={`/user/public/${(is_co_founder) ? 'co-founder' : 'about'}/${item.id}`}><img src={item.avatar} class=\"img-circle img-thumbnail\" alt=\"profile-image\" /></NavLink>\r\n                                            {item.feautured && <i class=\"fa fa-star member-star text-success\" title=\"verified user\"></i>}\r\n                                        </div>\r\n\r\n                                        <div class=\"small-line-height\">\r\n                                            <NavLink to={`/user/public/${(is_co_founder) ? 'co-founder' : 'about'}/${item.id}`}><h4><a href=\"company.html\">{item.name}</a></h4></NavLink>\r\n                                            <p class=\"text-muted p-location\"><i class=\"fas fa-map-marker-alt icon-color\"></i> {item && item.countryCode && item.countryCode.name}</p>\r\n                                            <p class=\"p-star\">\r\n                                                {item.avg_job_rating === \"5.00\" ?\r\n                                                    <>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                    </>\r\n                                                    :\r\n                                                    item.avg_job_rating === \"4.00\" ?\r\n                                                        <>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                        </>\r\n                                                        :\r\n                                                        item.avg_job_rating === \"3.00\" ?\r\n                                                            <>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                            </>\r\n                                                            :\r\n                                                            item.avg_job_rating === \"2.00\" ?\r\n                                                                <>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                </>\r\n                                                                :\r\n                                                                item.avg_job_rating === \"1.00\" ?\r\n                                                                    <>\r\n                                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    item.avg_job_rating === \"0.00\" ?\r\n                                                                        <>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                        </>\r\n                                                                        : null\r\n                                                }\r\n                                                {/* 99% (222) */}\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <h5 style={!item.skills.length ? { opacity: 0 } : { opacity: 1 }} >{item.skills.length ? item.skills.map((a, i) => i < 5 ? `${a.title}, ` : null) : \"\"}{item.skills.length ? item.skills.length > 5 ? \"...\" : null : null}</h5>\r\n                                        <div className=\"text\">{item.about && item.about.substr(0, 180)}{item.about && item.about.length > 180 ? \"...\" : null}</div>\r\n\r\n                                        {/* <h6>{is_co_founder ? \"Co-founder\" : \"Individual\"}</h6> */}\r\n                                        {/* <p class=\"text-muted font-16\">\r\n                                        {item.about}\r\n\t\t   </p> */}\r\n\r\n                                    </div>\r\n                                    {/* <div class=\"row\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>1</h6>\r\n                                        <p class=\"bottom\">Jobs Done</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>4,345</h6>\r\n                                        <p class=\"bottom\">Hours Worked</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>$15.00/hr</h6>\r\n                                        <p class=\"bottom\">Hourly Rate</p>\r\n                                    </div>\r\n                                </div> */}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(FreelancerListing);","import React, { Component, Fragment } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { IconButton, Box } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { itemService } from '../../../../common/services';\r\nimport { PublicServiceLoader } from '../../../../common/loaders';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\n\r\nclass ServiceListing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favorite: {},\r\n        }\r\n    }\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userFavorite\": {\r\n                favorite_id: item.id,\r\n                moduleId: \"UserService\"\r\n            }\r\n        };\r\n\r\n        let method = (item.is_favorite) ? \"DELETE\" : \"POST\";\r\n        let param = (item.is_favorite) ? { item_id: item.is_favorite } : null;\r\n        let action = (item.is_favorite) ? \"remove\" : \"add\";\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to ${action}`,\r\n            message: `Are you sure you want to ${action} this service to your favorites list?`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(method, params, param)\r\n                            .then(response => {\r\n                                if (method === \"POST\") dispatch(alertSelectors.success(\"You have successfully selected a favorite.\"));\r\n                                if (method === \"DELETE\") dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                item.is_favorite = (method === \"POST\") ? response.model.id : false;\r\n                                this.setState({ favorite: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { process, results } = this.props;\r\n\r\n        return (<div className=\"row\" style={{ justifyContent: \"space-evenly\" }}>\r\n            {process.loading ? <Fragment>\r\n                {[1, 2, 3, 4, 5, 6].map((number) =>\r\n                    <div className=\"col-md-4\" key={Math.random() * (+1 - +1) + number}>\r\n                        <div className=\"p-0 bg-white\">\r\n                            <ContentLoader\r\n                                height={550}\r\n                                width={500}\r\n                                speed={10}\r\n                                primaryColor={'#ddd'}\r\n                                secondaryColor={'#ddd'}\r\n                            >\r\n                                <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width={500} height=\"280\" />\r\n                                <rect x=\"25\" y=\"300\" rx=\"3\" ry=\"3\" width={450} height=\"20\" />\r\n                                <rect x=\"25\" y=\"350\" rx=\"3\" ry=\"3\" width={450} height=\"20\" />\r\n                                <rect x=\"25\" y=\"400\" rx=\"3\" ry=\"3\" width={450} height=\"20\" />\r\n                                <rect x=\"25\" y=\"450\" rx=\"3\" ry=\"3\" width={450} height=\"20\" />\r\n                            </ContentLoader>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Fragment> :\r\n                <Fragment>\r\n                    {results && results.map((item) =>\r\n                        <div className=\"col-md-4\" key={item.id}>\r\n                            <div className=\"svcsLBox w-100 float-left\">\r\n                                <div className=\"image\">\r\n                                    <Link to={`/user/public/service/view/${item.id}`} className=\"bg-image\">\r\n                                        <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.cover} effect=\"blur\" />\r\n                                    </Link>\r\n                                    <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                        {(item.is_favorite) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                            <i className=\"far fa-heart\"></i>}\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div className=\"caption w-100 float-left\">\r\n                                    <h3 className=\"text-truncate\" title={item.title}><Link to={`/user/public/service/view/${item.id}`}>{item.title}</Link></h3>\r\n                                    {item.sold_count ? <div className=\"service\">{item.sold_count} Service Sold</div> : ''}\r\n                                    <div className=\"ratings d-flex align-items-center\">\r\n                                        <small>({item.avg_rating})</small>\r\n                                        <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                            <Rating value={Math.floor(item.avg_rating)} readOnly />\r\n                                        </Box>\r\n                                        {(item && item.count_rating !== 0) && <small className=\"count\">{item.count_rating}</small>}\r\n                                    </div>\r\n                                    {/* <div className=\"profile d-flex align-items-center\">\r\n                                        <div className=\"img pr-2\">\r\n                                            <NavLink to={`/user/public/about/${item.user.id}`}><img src={item.user.avatar} className=\"img-fluid rounded-circle\" width=\"32\" height=\"32\" alt=\"\" /></NavLink>\r\n                                        </div>\r\n                                        <div className=\"caption\">\r\n                                            <h6 className=\"mb-0\"> <NavLink to={`/user/public/about/${item.user.id}`}>{item.user.name}</NavLink></h6>\r\n                                            <p className=\"mb-0\"><small>\r\n                                                {item.user && item.user.countryCode && item.user.countryCode.name}\r\n                                            </small></p>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                    <div class=\"col-lg-12 abc\">\r\n                                        <div class=\"pull-left\">\r\n                                            <NavLink to=\"#\">\r\n                                                {item.user.avatar ?\r\n                                                    <img class=\"img-responsive\" src={item.user.avatar} alt=\"Image\" />\r\n                                                    : \"\"}\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <h5> {item.user.name} </h5>\r\n                                        <p><i className=\"fas fa-map-marker-alt icon-color\"></i> {item.user.countryCode && item.user.countryCode.name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Fragment>\r\n            }\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ServiceListing);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { IconButton, Box, } from '@material-ui/core';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { globalService as gs, itemService } from '../../../../common/services';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\n\r\nclass JobListing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favorite: {},\r\n        }\r\n    }\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userFavorite\": {\r\n                favorite_id: item.id,\r\n                moduleId: \"UserItem\"\r\n            }\r\n        };\r\n\r\n        let method = (item.is_favorite) ? \"DELETE\" : \"POST\";\r\n        let param = (item.is_favorite) ? { item_id: item.is_favorite } : null;\r\n        let action = (item.is_favorite) ? \"remove\" : \"add\";\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to ${action}`,\r\n            message: `Are you sure to ${action} this favorite list`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(method, params, param)\r\n                            .then(response => {\r\n                                if (method === \"POST\") dispatch(alertSelectors.success(\"You have successfully selected a favorite.\"));\r\n                                if (method === \"DELETE\") dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                item.is_favorite = (method === \"POST\") ? response.model.id : false;\r\n                                this.setState({ favorite: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { process, results } = this.props;\r\n        console.log((results))\r\n        return (\r\n            // <div className=\"row\">\r\n            //     <div className=\"col-12\">\r\n            //         {process.loading ? <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={4} /> :\r\n            //             <Fragment>\r\n            //                 {results && results.items && results.items.map((item) =>\r\n            //                     <div className=\"jobBox card mb-4\" key={`item-${item.id}`}>\r\n            //                         <div className=\"card-body\">\r\n            //                             <div className=\"caption\">\r\n            //                                 <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n            //                                     {(item.is_favorite) ? <i className=\"fas fa-heart text-info\"></i> :\r\n            //                                         <i className=\"far fa-heart\"></i>}\r\n            //                                 </IconButton>\r\n            //                                 <h3><NavLink to={`/user/public/job/view/${item.id}`}>{item.title}</NavLink> {/* <small>{item.category && item.category.parent ? item.category.parent.title + ',' : null} {item.category && item.category.title}</small> */}</h3>\r\n            //                             </div>\r\n            //                             <div className=\"prices d-flex align-items-center\">\r\n            //                                 {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>}\r\n            //                                 <div className=\"fixed badge badge-secondary text-capitalize\">{(item.settlement === 'both') ? 'Cash & Exchange' : item.settlement}</div>\r\n            //                                 {item.settlement && item.settlement === 'cash' && <div className=\"cash badge badge-success text-capitalize\">{item.type}</div>}\r\n            //                             </div>\r\n            //                             {(item.services.length > 0) &&\r\n            //                             <div className=\"priview d-flex flex-wrap\">\r\n            //                                 {(item.services[0].cover) &&\r\n            //                                     <div className=\"image\">\r\n            //                                         <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.services[0].cover.thumb} effect=\"blur\" />\r\n            //                                     </div>\r\n            //                                 }\r\n            //                                 <div className=\"caption\">\r\n            //                                     <h4>\r\n            //                                         {item.services[0].title}\r\n            //                                         {(item.services.length > 1) && <NavLink to={`/user/public/job/view/${item.id}`} className=\"ml-3 text-info\">+{item.services.length - 1} more </NavLink>}\r\n            //                                     </h4>\r\n            //                                     <div className=\"ratings d-flex align-items-center\">\r\n            //                                         <small>({item.services[0].avg_rating})</small>\r\n            //                                         <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n            //                                             <Rating value={Math.floor(item.services[0].avg_rating)} readOnly />\r\n            //                                         </Box>\r\n            //                                     </div>\r\n            //                                     <div className=\"price\">\r\n            //                                         <span className=\"\">{item.services[0].budget}</span>\r\n            //                                     </div>\r\n            //                                 </div>\r\n            //                             </div>}\r\n            //                             {/*<div className=\"d-flex align-items-center proposals mb-1\">*/}\r\n            //                                 {/*<div className=\"deadline\">*/}\r\n            //                                     {/*<h6>Deadline</h6> {item.duration && `${item.duration - 4} - ${item.duration} Weeks`}*/}\r\n            //                                 {/*</div>*/}\r\n            //                                 {/*<div className=\"deadline\" style={{ textTransform: 'capitalize' }}>*/}\r\n            //                                     {/*<h6>Visiblity</h6> {item.visibility}*/}\r\n            //                                 {/*</div>*/}\r\n            //                                 {/*<div className=\"deadline\">*/}\r\n            //                                     {/*<h6>Published</h6> {(new Date(item.created_at * 1000)).toLocaleDateString('en-GB', {*/}\r\n            //                                         {/*year: 'numeric',*/}\r\n            //                                         {/*month: 'short',*/}\r\n            //                                         {/*day: '2-digit'*/}\r\n            //                                     {/*})}*/}\r\n            //                                 {/*</div>*/}\r\n            //                                 {/*<div className=\"deadline\">*/}\r\n            //                                     {/*<h6>Proposals</h6> {item.proposal_count}*/}\r\n            //                                 {/*</div>*/}\r\n            //                             {/*</div>*/}\r\n            //                             {/*<div className=\"text\" dangerouslySetInnerHTML={{ __html: gs.truncateString(item && item.description, 400) }}></div>*/}\r\n            //                             <ReadMoreReact className=\"text\" text={gs.html2text(item && item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n\r\n            //                             <div className=\"chips\">\r\n            //                                 {item.skills && item.skills.map((skill) =>\r\n            //                                     <div className=\"badge badge-secondary\" style={{ textTransform: 'capitalize' }} key={skill.id}>{skill.title}</div>)}\r\n            //                             </div>\r\n            //                         </div>\r\n            //                     </div>\r\n            //                 )}\r\n            //             </Fragment>\r\n            //         }\r\n            //     </div>\r\n            // </div>\r\n\r\n            process.loading ? <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={4} /> :\r\n                results && results.items && results.items.map((item) =>\r\n                    <div class=\"job\">\r\n\r\n                        <div class=\"row top-sec\">\r\n                            <div class=\"col-lg-12\">\r\n                                <div className=\"topLabel\">\r\n                                    {/* {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>} */}\r\n                                    <div className=\"cashAndExchange\">{(item.settlement === 'both') ? 'Cash & Exchange' : item.settlement}</div>\r\n                                    {/* {item.settlement && item.settlement === 'cash' && <div className=\"label label-primary\">{item.type}</div>} */}\r\n                                </div>\r\n                                <div class=\"col-lg-12 col-xs-12\">\r\n                                    <h4><a href=\"jobpost.html\"><NavLink to={`/user/public/job/view/${item.id}`}>{item.title}</NavLink></a>\r\n                                    </h4>\r\n                                    {item.category.parent ?\r\n                                        <h5>{item.category && item.category.parent && item.category.parent.title} <small>- {item.category.title}</small></h5>\r\n                                        :\r\n                                        <h5>{item.category.title}<small></small></h5>\r\n                                    }\r\n\r\n                                    {item.settlement === 'both' || item.settlement === 'cash' ?\r\n                                        <div className=\"prices d-flex align-items-center\">\r\n                                            {/* {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>} */}\r\n                                            <div className=\"\">Cash</div>\r\n                                            {/* {item.settlement && item.settlement === 'cash' && <div className=\"\">{item.type}</div>} */}\r\n                                        </div>\r\n                                        : null}\r\n\r\n                                    {item.type === \"hourly\" ?\r\n                                        <p className=\"cash-text\">{item.budget ? \"$\"+item.budget+\"/hr\" : \"\"}</p>\r\n                                        :\r\n                                        <p>{item.budget ? \"$\"+item.budget+\" Fixed\" : \"\"}</p>\r\n                                    }\r\n                                    {/* <p><small>Posted 14 Hours ago</small></p> */}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row mid-sec\">\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"col-lg-12\">\r\n                                    {/* <hr class=\"small-hr\" /> */}\r\n                                    {/* <p>Description of every page/module: I have a PSD ebay store and listing design in photoshop that needs to be sliced and coded for eBay to be mobile responsive. Description of requirements/features: Mobile Responsive Ebay store and listing design...</p> */}\r\n                                  {/* <ReadMoreReact text={item && gs.html2text(item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} /> */}\r\n                                  <ReactReadMoreReadLess\r\n        charLimit={200}\r\n        readMoreText={\"Read more ▼\"}\r\n        readLessText={\"Read less ▲\"}\r\n        readMoreClassName=\"job-text\"\r\n        readLessClassName=\"job-text\"\r\n      >\r\n         {gs.html2text(item.description)}\r\n          </ReactReadMoreReadLess>\r\n                                {/* <p className=\"job-text\">{gs.html2text(item.description)}</p> */}\r\n\r\n                                    <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n                                        {item.skills.length &&\r\n                                            item.skills.map((a, index) =>\r\n                                                <span key={index} class=\"label label-success\">{a.title}</span>\r\n                                            )\r\n                                        }\r\n                                        {/* <span class=\"label label-success\">HTML 5</span>\r\n                                    <span class=\"label label-success\">CSS3</span>\r\n                                    <span class=\"label label-success\">PHP 5.4</span>\r\n                                    <span class=\"label label-success\">Mysql</span>\r\n                                    <span class=\"label label-success\">Bootstrap</span> */}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {item.settlement === 'both' || item.settlement === 'exchange' ?\r\n                            <div class=\"row mid-sec\">\r\n                                <div class=\"col-lg-12\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <hr class=\"small-hr\" />\r\n                                        <div className=\"prices d-flex align-items-center\">\r\n                                            {/* {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>} */}\r\n                                            <div className=\"\">{(item.settlement === 'both') ? 'Exchange' : item.settlement}</div>\r\n                                            {/* {item.settlement && item.settlement === 'cash' && <div className=\"\">{item.type}</div>} */}\r\n                                        </div>\r\n                                        {(item.services.length > 0) &&\r\n                                            <div className=\"priview d-flex flex-wrap\">\r\n                                                {(item.services[0].cover) &&\r\n                                                    <div className=\"image\">\r\n                                                        {item.services[0].cover.thumb &&\r\n                                                            <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.services[0].cover.thumb} effect=\"blur\" />\r\n                                                        }\r\n                                                    </div>\r\n                                                }\r\n                                                <div className=\"caption\">\r\n                                                    <h5>\r\n                                                        {item.services[0].title}\r\n                                                        {(item.services.length > 1) && <NavLink to={`/user/public/job/view/${item.id}`} className=\"ml-3 text-info\">+{item.services.length - 1} more </NavLink>}\r\n                                                    </h5>\r\n                                                    <div className=\"ratings d-flex align-items-center\">\r\n                                                        <p class=\"p-star\">\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    <p>\r\n                                                        {item.services[0].budget}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div> : null}\r\n\r\n                        <div class=\"row bottom-sec\">\r\n                            <div class=\"col-lg-12\">\r\n\r\n                                <div class=\"col-lg-12\">\r\n                                    <hr class=\"small-hr\" />\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12 prices\">\r\n                                    <div className=\"\">posted by:</div>\r\n                                </div>\r\n                                <div class=\"col-lg-6\">\r\n                                    <div class=\"pull-left\">\r\n                                        <NavLink to=\"#\">\r\n                                            {item.user.avatar ?\r\n                                                <img class=\"img-responsive\" src={item.user.avatar} alt=\"Image\" />\r\n                                                : \"\"}\r\n                                        </NavLink>\r\n                                    </div>\r\n                                    <h5> {item.user.name} </h5>\r\n                                    <p><i class=\"fas fa-map-marker-alt icon-color\" style={{marginRight: 2}}></i>{item.user.countryCode && item.user.countryCode.name}</p>\r\n                                    <p class=\"p-star\">\r\n                                        {item.user.avg_job_rating === \"5.00\" ?\r\n                                            <>\r\n                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                            </>\r\n                                            :\r\n                                            item.user.avg_job_rating === \"4.00\" ?\r\n                                                <>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"far fa-star\"></i>\r\n                                                </>\r\n                                                :\r\n                                                item.user.avg_job_rating === \"3.00\" ?\r\n                                                    <>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"far fa-star\"></i>\r\n                                                        <i class=\"far fa-star\"></i>\r\n                                                    </>\r\n                                                    :\r\n                                                    item.user.avg_job_rating === \"2.00\" ?\r\n                                                        <>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                        </>\r\n                                                        :\r\n                                                        item.user.avg_job_rating === \"1.00\" ?\r\n                                                            <>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                            </>\r\n                                                            :\r\n                                                            item.user.avg_job_rating === \"0.00\" ?\r\n                                                                <>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                </>\r\n                                                                : null\r\n                                        }\r\n                                    </p>\r\n                                </div>\r\n                                {/* <div class=\"col-lg-6\">\r\n                                    <div class=\"pull-right\">\r\n                                        <h4> 5 </h4>\r\n                                        <p> Applicants</p>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(JobListing);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { createSelector } from \"reselect\";\r\nimport { CheckBoxSelection, Inject, MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { defaultActions, searchActions } from \"../../../common/redux/actions\";\r\nimport { DocumentTitle } from \"../../../helpers/DocumentTitle\";\r\nimport Pagination from \"../../../helpers/Pagination\";\r\nimport { Main } from \"../../layout\";\r\nimport { FreelancerListing } from './partials';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, FormControl, RadioGroup, FormLabel, Radio, FormControlLabel } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst ratingList = [\r\n    { id: -1, value: 'Any' },\r\n    { id: 5, value: '5 Stars' },\r\n    { id: 4, value: '4+ Stars' },\r\n    { id: 3, value: '3+ Stars' }\r\n];\r\n\r\nclass FreelancerSearch extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                name: \"\",\r\n                categories: [],\r\n                ratings: '',\r\n                countries: '',\r\n                is_co_founder: false,\r\n                is_verified: false,\r\n                sort: null,\r\n            },\r\n            page: 1,\r\n            pagesize: 12,\r\n        };\r\n        this.initializeState = this.state;\r\n        this.props.history.listen((location, action) => {\r\n            const { dispatch, name } = this.props;\r\n            if (location && location.search) {\r\n                let search = new URLSearchParams(location.search);\r\n                let name = (search.get(\"name\") !== null) ? search.get(\"name\") : '';\r\n                let is_co_founder = this.props.is_co_founder;\r\n                let formField = { ...this.state.formField };\r\n                formField['name'] = name;\r\n                formField['is_co_founder'] = is_co_founder;\r\n                this.setState({ formField }, () => this.search());\r\n                //dispatch(searchActions.freelancers(\"GET\", {name: name}));\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        const { dispatch, categories, countries, name, is_co_founder } = this.props;\r\n        Object.getOwnPropertyNames(categories).length === 0 && dispatch(defaultActions.categories());\r\n        Object.getOwnPropertyNames(countries).length === 0 && dispatch(defaultActions.countries());\r\n        this.setState({ formField: { name, is_co_founder } });\r\n        if (this.props.location && this.props.location.search) {\r\n            let search = new URLSearchParams(this.props.location.search);\r\n            this.setState({ formField: { name: (search.get(\"name\") !== null) ? search.get(\"name\") : '' } });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.path !== this.props.path) {\r\n            let search = new URLSearchParams(nextProps.location.search);\r\n            let name = (search.get(\"name\") !== null) ? search.get(\"name\") : '';\r\n            let is_co_founder = nextProps.is_co_founder;\r\n            let formField = { ...this.state.formField };\r\n            formField['name'] = name;\r\n            formField['is_co_founder'] = is_co_founder;\r\n            this.setState({ formField }, () => this.search());\r\n            //this.setState({ formField: {name, is_co_founder} }, () => this.search());\r\n        }\r\n    }\r\n\r\n    onResetForm = (e) => {\r\n        e.preventDefault();\r\n        const { location, history } = this.props;\r\n        this.setState(this.initializeState);\r\n        this.setState({ formField: { is_co_founder: (location.pathname === '/cofounders-search') ? true : false, is_verified: null, ratings: null, countries: null, sort: null, name: '' } });\r\n        this.listObj.value = null;\r\n        if (location.pathname === '/freelancer-search') {\r\n            history.push('/freelancer-search');\r\n            this.props.dispatch(searchActions.freelancers(\"GET\", { pagesize: 12, page: 1, is_co_founder: 0 }));\r\n        } else {\r\n            history.push('/cofounders-search');\r\n            this.props.dispatch(searchActions.freelancers(\"GET\", { pagesize: 12, page: 1, is_co_founder: 1 }));\r\n        }\r\n        //this.props.dispatch(searchActions.freelancers(\"GET\", { pagesize: 20, page: 1, is_co_founder: null }));\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(searchActions.clear());\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleCheckboxChange = (e) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.checked;\r\n        this.setState({ formField }, () => this.search());\r\n    };\r\n\r\n    handleAll = (item, { action, name }) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField }, () => this.search());\r\n    };\r\n\r\n    RadioButtonChanger = (ev, item) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[ev.target.name] = ev.target.value;\r\n        console.log(ev.target.name, ev.target.value)\r\n        this.setState({ formField }, () => this.search());\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        this.setState({ page }, () => this.search());\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { history, is_co_founder } = this.props;\r\n        if (is_co_founder) {\r\n            history.push('/cofounders-search?name=' + this.state.formField.name);\r\n        } else {\r\n            history.push('/freelancer-search?name=' + this.state.formField.name);\r\n        }\r\n        //this.search();\r\n    };\r\n\r\n    noRecords = () => {\r\n        return (\r\n            <span className='norecord'> No Category Available</span>\r\n        );\r\n    };\r\n\r\n    onChangeCategory = (event) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[\"categories\"] = event.value;\r\n        this.setState({ formField }, () => this.search());\r\n    };\r\n\r\n    onSelectCategory = (event) => {\r\n\r\n    };\r\n\r\n    onCloseCategory = (event) => {\r\n\r\n    };\r\n\r\n\r\n    search = () => {\r\n        const { formField, pagesize, page } = this.state;\r\n        const { dispatch } = this.props;\r\n        let params = {};\r\n        params.category_id = (formField.categories && formField.categories.length > 0) ? formField.categories : null;\r\n        params.rating_id = formField.ratings;\r\n        params.country_code = formField.countries;\r\n        params.sort = (formField.sort && formField.sort.value) ? formField.sort.value : \"\";\r\n        params.name = formField.name;\r\n        params.is_co_founder = (formField.is_co_founder === true) ? 1 : 0;\r\n        params.is_verified = formField.is_verified;\r\n        params.pagesize = pagesize;\r\n        params.page = page;\r\n        dispatch(searchActions.freelancers(\"GET\", params));\r\n    };\r\n\r\n    filterToggle = (id) => {\r\n        document.getElementById(id).classList.toggle(\"section1MobOpen\")\r\n    }\r\n\r\n    // map the groupBy field with category column\r\n    fields = { groupBy: 'parent', text: 'name', value: 'id' };\r\n\r\n    render() {\r\n        const { categories, countries, search, title, history, location, is_co_founder } = this.props;\r\n        const { formField } = this.state;\r\n        let categoriesArr = categories.data ? categories.data : [];\r\n        let countriesArr = countries.data ? countries.data : [];\r\n        let results = search.freelancers ? search.freelancers : null;\r\n        // console.log(search,results)\r\n        let catlist = categoriesArr.filter(item => (item.parent_id !== null));\r\n\r\n        return (<Main history={history}>\r\n            <DocumentTitle title={title} />\r\n            {/* <div className=\"freLncrSarch bg-body\">\r\n                <div className=\"container\">\r\n                    <div id=\"section1\" className=\"section1 section1MobClose\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <form name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate> */}\r\n            {/* <div className=\"any-search mb-3 mb-lg-4\">\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" onChange={event => this.handleChange(event)} value={formField.name} name=\"name\" placeholder={(location.pathname === '/cofounders-search') ? 'Search by Cofounder' : 'Search by Freelancer'} />\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n            {/* <div className=\"filters card mb-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"clearIcon\" style={{width: \"100%\", height: \"30px\"}}>\r\n                                                <CancelIcon onClick={()=>this.filterToggle(\"section1\")} \r\n                                                style={{float: \"right\", color: \"red\"}} />\r\n                                            </div>\r\n                                            <div className=\"align-items-center\">\r\n                                                <div className=\"w-100\">\r\n                                                    <div className=\"d-flex align-items-center flex-wrap custom-row\">\r\n                                                        <div className={'category'} style={{ width: '100%', paddingLeft: 5, paddingRight: 5, paddingTop: '4px' }}>\r\n                                                            <MultiSelectComponent\r\n                                                                id=\"mtselement\"\r\n                                                                cssClass={'multi-droupdown'}\r\n                                                                popupHeight='200px'\r\n                                                                fields={this.fields}\r\n                                                                value={formField.categories}\r\n                                                                dataSource={catlist}\r\n                                                                placeholder=\"Select a Category\"\r\n                                                                mode=\"CheckBox\"\r\n                                                                enableGroupCheckBox=\"true\"\r\n                                                                allowFiltering=\"true\"\r\n                                                                ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                                filterBarPlaceholder=\"Search Category\"\r\n                                                                change={this.onChangeCategory}\r\n                                                                select={this.onSelectCategory}\r\n                                                                close={this.onCloseCategory}\r\n                                                                showDropDownIcon={true}\r\n                                                                noRecordsTemplate={this.noRecords}>\r\n                                                                <Inject services={[CheckBoxSelection]} />\r\n                                                            </MultiSelectComponent>\r\n                                                        </div> */}\r\n\r\n            {/*<Select*/}\r\n            {/*className=\"multiple-select category\"*/}\r\n            {/*classNamePrefix=\"multi\"*/}\r\n            {/*isSearchable*/}\r\n            {/*isMulti*/}\r\n            {/*value={formField.categories}*/}\r\n            {/*name=\"categories\"*/}\r\n            {/*placeholder=\"Category\"*/}\r\n            {/*onChange={this.handleAll}*/}\r\n            {/*options={categoriesArr.map(item => ({ value: item.id, label: item.name }))} />*/}\r\n\r\n            {/* <Select\r\n                                                            className=\"multiple-select ratings\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isSearchable\r\n                                                            isMulti\r\n                                                            name=\"ratings\"\r\n                                                            value={formField.ratings}\r\n                                                            placeholder=\"Rating\"\r\n                                                            onChange={this.handleAll}\r\n                                                            options={ratingList.map(item => ({ value: item.id, label: item.value }))} />\r\n\r\n                                                        <Select\r\n                                                            className=\"multiple-select countries\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isSearchable\r\n                                                            isClearable\r\n                                                            name=\"countries\"\r\n                                                            value={formField.countries}\r\n                                                            placeholder=\"Country\"\r\n                                                            onChange={this.handleAll}\r\n                                                            options={countriesArr.map(item => ({ value: item.code, label: item.name }))} />\r\n\r\n                                                        <div className=\"co-founder\">\r\n                                                            {!is_co_founder &&\r\n                                                                <Form.Check\r\n                                                                    custom\r\n                                                                    inline\r\n                                                                    name=\"is_co_founder\"\r\n                                                                    label=\"Co-founder\"\r\n                                                                    checked={formField.is_co_founder}\r\n                                                                    type={\"checkbox\"}\r\n                                                                    id={`custom-inline-1`}\r\n                                                                    onChange={this.handleCheckboxChange}\r\n                                                                />} */}\r\n            {/*<Form.Check*/}\r\n            {/*custom*/}\r\n            {/*inline*/}\r\n            {/*name=\"is_verified\"*/}\r\n            {/*label=\"Verified\"*/}\r\n            {/*checked={formField.is_verified}*/}\r\n            {/*type={\"checkbox\"}*/}\r\n            {/*id={`custom-inline-2`}*/}\r\n            {/*onChange={this.handleCheckboxChange}*/}\r\n            {/*/>*/}\r\n            {/* </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"text-right\">\r\n                                                    <button className=\"font-weight-bold btn btn-link text-info text-nowrap\" type=\"button\"\r\n                                                        onClick={this.onResetForm}>Reset Filters\r\n                                                </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section2\">\r\n                        <div className=\"row\">\r\n                            <form style={{ width: \"100%\" }} name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                                <div style={{ width: \"100%\", paddingLeft: 5, paddingRight: 5 }} className=\"any-search mb-3 mb-lg-4\">\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" onChange={event => this.handleChange(event)} value={formField.name} name=\"name\" placeholder={(location.pathname === '/cofounders-search') ? 'Search by Cofounder' : 'Search by Freelancer'} />\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p onClick={() => this.filterToggle(\"section1\")}>Advance Filter</p>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"col-12 sorting mb-3 d-flex align-items-center\">\r\n                                <h6 className=\"col pl-0 mb-0\">\r\n                                    {(results && results.pagination && results.pagination.totalCount > 0) && `${results.pagination.totalCount} Search result found.`}\r\n                                    {(results && results.length === 0) && 'No search result found.'}\r\n                                </h6> */}\r\n            {/*\r\n                                <div className=\"sort\">\r\n                                    <Select\r\n                                        className=\"multiple-select\"\r\n                                        classNamePrefix=\"multi\"\r\n                                        placeholder=\"Sort By\"\r\n                                        name=\"sort\"\r\n                                        value={formField.sort}\r\n                                        onChange={this.handleAll}\r\n                                        options={[{ value: \"id\", label: \"Most Recent\" }]} />\r\n                                </div>\r\n                            */}\r\n            {/* </div>\r\n                        </div>\r\n                        <FreelancerListing results={results} is_co_founder={formField.is_co_founder} />\r\n                        <div className=\"col-12\">\r\n                            <Pagination className=\"justify-content-end\"\r\n                                pageSize={formField.pagesize}\r\n                                totalPages={3}\r\n                                totalCount={(results && results.pagination && results.pagination.totalCount) ? results.pagination.totalCount : 10}\r\n                                onChangePage={this.onChangePage} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            <section className=\"featured-users\">\r\n                <div className=\"container\">\r\n                    <div className=\"section-title\" style={{ paddingTop: 20 }}>\r\n                        <h1>{formField.is_co_founder ? \"Co-founder\" : \"Freelancers\"}</h1>\r\n                    </div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-9\">\r\n                            <FreelancerListing results={results} is_co_founder={formField.is_co_founder} />\r\n                            <div className=\"paginationCommon blogPagination text-center\">\r\n                                <Pagination className=\"\"\r\n                                    pageSize={12}\r\n                                    totalPages={3}\r\n                                    totalCount={(results && results.pagination && results.pagination.totalCount) ? results.pagination.totalCount : 10}\r\n                                    onChangePage={this.onChangePage} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4 col-md-3\">\r\n                            <div className=\"widget\">\r\n                                <div className=\"text-right\">\r\n                                    <button style={{ color: \"red !important\" }} className=\"font-weight-bold btn btn-link text-info text-nowrap\" type=\"button\" onClick={this.onResetForm}>Reset Filters</button>\r\n                                </div>\r\n                                {/* <h3 className=\"widget_title\">Category</h3> */}\r\n                                {/* <ul className=\"tr-list\">\r\n                                    <li><a href=\"\" className=\"active\"><i className=\"fa fa-code\"></i> Web & Mobile Development</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-eye\"></i>  Design, Arts & Multimedia</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-edit\"></i>  Writing & Translation</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-cog\"></i>  Admin Support</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-table\"></i>  Management & Finance</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-bullhorn\"></i>  Sales & Marketing</a></li>\r\n                                </ul> */}\r\n                                {/* <div className=\"expensionPannel\">\r\n                                    {catlist.length ? catlist.map((obj, i) => {\r\n                                        return (\r\n                                            catlist[i + 1] ?\r\n                                                obj.parent !== catlist[i + 1].parent ?\r\n                                                    <ExpansionPanel defaultExpanded>\r\n                                                        <ExpansionPanelSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"panel1a-content\"\r\n                                                            id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <p>{obj.parent}</p>\r\n                                                        </ExpansionPanelSummary>\r\n                                                        <ExpansionPanelDetails>\r\n                                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                                <MultiSelectComponent\r\n                                                                    id=\"mtselement\"\r\n                                                                    cssClassNamclassName={'multi-droupdown'}\r\n                                                                    popupHeight='200px'\r\n                                                                    fields={this.fields}\r\n                                                                    value={formField.categories}\r\n                                                                    dataSource={catlist}\r\n                                                                    placeholder=\"Select a Category\"\r\n                                                                    mode=\"CheckBox\"\r\n                                                                    enableGroupCheckBox=\"true\"\r\n                                                                    allowFiltering=\"true\"\r\n                                                                    // ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                                    // filterBarPlaceholder=\"Search Category\"\r\n                                                                    // change={this.onChangeCategory}\r\n                                                                    // select={this.onSelectCategory}\r\n                                                                    // close={this.onCloseCategory}\r\n                                                                    // showDropDownIcon={true}\r\n                                                                    noRecordsTemplate={this.noRecords}>\r\n                                                                    <Inject services={[CheckBoxSelection]} />\r\n                                                                </MultiSelectComponent>\r\n                                                            </div>\r\n                                                        </ExpansionPanelDetails>\r\n                                                    </ExpansionPanel>\r\n                                                    : null\r\n                                                : null\r\n                                        )\r\n                                    }) : null}\r\n                                </div> */}\r\n                                <div className=\"categoryDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                        >\r\n                                            <p>Categories</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                <MultiSelectComponent\r\n                                                    id=\"mtselement\"\r\n                                                    cssClassNamclassName={'multi-droupdown'}\r\n                                                    popupHeight='500px'\r\n                                                    fields={this.fields}\r\n                                                    value={formField.categories}\r\n                                                    dataSource={catlist}\r\n                                                    placeholder=\"Select a Category\"\r\n                                                    mode=\"CheckBox\"\r\n                                                    enableGroupCheckBox=\"true\"\r\n                                                    allowFiltering=\"true\"\r\n                                                    ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                    filterBarPlaceholder=\"Search Category\"\r\n                                                    change={this.onChangeCategory}\r\n                                                    select={this.onSelectCategory}\r\n                                                    close={this.onCloseCategory}\r\n                                                    showDropDownIcon={true}\r\n                                                    noRecordsTemplate={this.noRecords}>\r\n                                                    <Inject services={[CheckBoxSelection]} />\r\n                                                </MultiSelectComponent>\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                </div>\r\n\r\n                                <div className=\"budgetDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Rating </p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"proposal_count\" value={formField.ratings}\r\n                                                    name=\"ratings\"\r\n                                                    onChange={(ev) => this.RadioButtonChanger(ev)}\r\n                                                >\r\n                                                    {ratingList.map((a) => {\r\n                                                        return (\r\n                                                            <FormControlLabel value={a.id} control={<Radio size=\"small\" />} label={a.value} />\r\n                                                        )\r\n                                                    })}\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"budgetDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Hourly Rates </p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"budget\" value={formField.budget}\r\n                                                    name=\"budget\"\r\n                                                    // onChange={(ev) => this.RadioButtonChanger(ev)} \r\n                                                    >\r\n                                                    {[\r\n                                                        { value: \"0\", label: \"Any hourly rate\" },\r\n                                                        { value: \"1\", label: \"$10 and below\" },\r\n                                                        { value: \"2\", label: \"$10-$30\" },\r\n                                                        { value: \"3\", label: \"$30-$60\" },\r\n                                                        { value: \"4\", label: \"$60 & above\" }\r\n                                                    ].map((a) => {\r\n                                                        return (\r\n                                                            <FormControlLabel value={a.value} control={<Radio size=\"small\" />} label={a.label} />\r\n                                                        )\r\n                                                    })}\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"budgetDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Hours Billed</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"budget\" value={formField.budget}\r\n                                                    name=\"budget\"\r\n                                                    // onChange={(ev) => this.RadioButtonChanger(ev)} \r\n                                                    >\r\n                                                    {[\r\n                                                        { value: \"0\", label: \"Any hours\" },\r\n                                                        { value: \"1\", label: \"1+ hours billed\" },\r\n                                                        { value: \"2\", label: \"100+ hours billed\" },\r\n                                                        { value: \"3\", label: \"1,000+ hours billed\" }\r\n                                                    ].map((a) => {\r\n                                                        return (\r\n                                                            <FormControlLabel value={a.value} control={<Radio size=\"small\" />} label={a.label} />\r\n                                                        )\r\n                                                    })}\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"countryDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                        >\r\n                                            <p>Country</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                <Select\r\n                                                    className=\"multiple-select\"\r\n                                                    classNamePrefix=\"multi\"\r\n                                                    isClearable\r\n                                                    isSearchable\r\n                                                    value={formField.countries}\r\n                                                    name=\"countries\"\r\n                                                    onChange={this.handleAll}\r\n                                                    placeholder=\"Country\"\r\n                                                    options={countriesArr.map(item => ({ value: item.code, label: item.name }))} />\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                </div>\r\n\r\n                                {/* <div className=\"margin-space\"></div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Payment Type</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"#\">Both</a></li>\r\n                                            <li><a href=\"#\">Cash</a></li>\r\n                                            <li><a href=\"#\">Exchange</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Experience Level</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">Entry Level</a></li>\r\n                                            <li><a href=\"\">Intermediate</a></li>\r\n                                            <li><a href=\"\">Expert</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"margin-space\"></div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Job Duration</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">6+ Months</a></li>\r\n                                            <li><a href=\"\">3 - 6 Months</a></li>\r\n                                            <li><a href=\"\">1 - 3 Months</a></li>\r\n                                            <li><a href=\"\">Below 1 Month</a></li>\r\n                                            <li><a href=\"\">Below 1 Week</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Hours Per Week</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">30 - 39</a></li>\r\n                                            <li><a href=\"\">20 - 29</a></li>\r\n                                            <li><a href=\"\">10 - 19</a></li>\r\n                                            <li><a href=\"\">1 - 9</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst searchSelector = createSelector(\r\n    state => state.search,\r\n    search => search\r\n);\r\n\r\nconst categoriesSelector = createSelector(\r\n    state => state.categories,\r\n    categories => categories\r\n);\r\n\r\nconst countriesSelector = createSelector(\r\n    state => state.countries,\r\n    countries => countries\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    categoriesSelector,\r\n    countriesSelector,\r\n    processSelector,\r\n    searchSelector,\r\n    (categories, countries, process, search) => ({\r\n        categories, countries, process, search\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(FreelancerSearch);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Select from 'react-select';\r\nimport { createSelector } from \"reselect\";\r\nimport { CheckBoxSelection, Inject, MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { Main } from '../../layout';\r\nimport { defaultActions, searchActions } from '../../../common/redux/actions';\r\nimport { JobListing } from './partials';\r\nimport { FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { ExpansionPanelDetails } from '@material-ui/core';\r\nimport { ExpansionPanelSummary } from '@material-ui/core';\r\nimport { ExpansionPanel } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import \"../../../ali.scss\"\r\n\r\nclass JobSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                name: \"\",\r\n                settlement: '',\r\n                categories: [],\r\n                countries: null,\r\n                budget: \"0\",\r\n                proposal_count: \"0\",\r\n                sort: null,\r\n            },\r\n            pagesize: 5,\r\n            page: 1,\r\n        };\r\n        this.initializeState = this.state;\r\n        this.props.history.listen((location, action) => {\r\n            const { dispatch } = this.props;\r\n            if (location && location.search) {\r\n                let search = new URLSearchParams(location.search);\r\n                dispatch(searchActions.jobs(\"GET\", { name: search.get(\"name\") }));\r\n            }\r\n        });\r\n    }\r\n\r\n    onResetForm = (e) => {\r\n        e.preventDefault();\r\n        const { history } = this.props;\r\n        this.setState(this.initializeState);\r\n        this.listObj.value = null;\r\n        history.push('/job-search');\r\n        this.props.dispatch(searchActions.jobs(\"GET\", { pagesize: 5, page: 1 }));\r\n\r\n    };\r\n\r\n    componentWillMount() {\r\n        const { dispatch, categories, countries } = this.props;\r\n        Object.getOwnPropertyNames(categories).length === 0 && dispatch(defaultActions.categories());\r\n        Object.getOwnPropertyNames(countries).length === 0 && dispatch(defaultActions.countries());\r\n        if (this.props.location && this.props.location.search) {\r\n            let search = new URLSearchParams(this.props.location.search);\r\n            this.setState({ formField: { name: search.get(\"name\") } });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.search();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(searchActions.clear());\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.location && nextProps.location.search) {\r\n            let search = new URLSearchParams(nextProps.location.search);\r\n            let formField = { ...this.state.formField };\r\n            formField['name'] = search.get(\"name\");\r\n            this.setState({ formField });\r\n            //this.setState({ formField: {name: search.get(\"name\")} });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        //const { history } = this.props;\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n        //history.push('/job-search?name=' + e.target.value);\r\n    };\r\n\r\n    handleAll = (item, { action, name }, ev) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField }, () => this.search());\r\n    };\r\n\r\n    RadioButtonChanger = (ev, item) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[ev.target.name] = ev.target.value;\r\n        console.log(ev.target.name, ev.target.value)\r\n        this.setState({ formField }, () => this.search());\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[\"page\"] = page;\r\n        this.setState({ formField }, () => this.search());\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { history } = this.props;\r\n        history.push('/job-search?name=' + this.state.formField.name);\r\n        //this.search();\r\n    };\r\n\r\n    noRecords = () => {\r\n        return (\r\n            <span className='norecord'> No Category Available</span>\r\n        );\r\n    };\r\n\r\n    onChangeCategory = (event) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[\"categories\"] = event.value;\r\n        this.setState({ formField }, () => this.search());\r\n    };\r\n\r\n    onSelectCategory = (event) => {\r\n        //console.log(event.itemData);\r\n    };\r\n\r\n    onCloseCategory = (event) => {\r\n        console.log(event);\r\n    };\r\n\r\n    search = () => {\r\n        const { formField, page, pagesize } = this.state;\r\n        const { dispatch } = this.props;\r\n        let params = {};\r\n        params.name = formField.name;\r\n        params.category_id = (formField.categories && formField.categories.length > 0) ? formField.categories : null;\r\n        params.country_code = (formField.countries && formField.countries.value) ? formField.countries.value : \"\";\r\n        params.settlement = formField.settlement;\r\n        params.budget = formField.budget;\r\n        params.proposal_count = formField.proposal_count;\r\n        params.sort = (formField.sort && formField.sort.value) ? formField.sort.value : \"\";\r\n        params.pagesize = 5;\r\n        params.page = page;\r\n        dispatch(searchActions.jobs(\"GET\", params));\r\n    };\r\n\r\n    filterToggle = (id) => {\r\n        document.getElementById(id).classList.toggle(\"section1MobOpen\")\r\n    }\r\n\r\n    // map the groupBy field with category column\r\n    fields = { groupBy: 'parent', text: 'name', value: 'id' };\r\n\r\n    render() {\r\n        const { categories, countries, search, history } = this.props;\r\n        const { formField, pagesize } = this.state;\r\n        let categoriesArr = categories.data ? categories.data : [];\r\n        let countriesArr = countries.data ? countries.data : [];\r\n        let results = search.jobs ? search.jobs : null;\r\n        let catlist = categoriesArr.filter(item => (item.parent_id !== null));\r\n        // console.log(catlist.length ? catlist[1].parent : \"a\")\r\n\r\n        return (<Main history={history}>\r\n            <DocumentTitle title={'Job Search'} />\r\n            {/* <div className=\"freLncrSarch bg-body\">\r\n                <div className=\"container\">\r\n                    <div id=\"section1\" className=\"section1 section1MobClose\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\"> */}\r\n            {/* <form name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                                    <div className=\"any-search mb-3 mb-lg-4\">\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" onChange={this.handleChange} value={formField.name} name=\"name\" placeholder=\"Search by Skill, Job title\" />\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form> */}\r\n            {/* <div className=\"filters card mb-4\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"clearIcon\" style={{ width: \"100%\", height: \"30px\" }}>\r\n                                            <CancelIcon onClick={() => this.filterToggle(\"section1\")}\r\n                                                style={{ float: \"right\", color: \"red\" }} />\r\n                                        </div>\r\n                                        <div className=\"align-items-center\">\r\n                                            <div className=\"w-100\">\r\n                                                <div className=\"d-flex align-items-center flex-wrap custom-row\">\r\n                                                    <Select\r\n                                                        className=\"multiple-select payment\"\r\n                                                        classNamePrefix=\"multi\"\r\n                                                        name=\"settlement\"\r\n                                                        isClearable\r\n                                                        value={formField.settlement}\r\n                                                        placeholder=\"Payment Type\"\r\n                                                        onChange={this.handleAll}\r\n                                                        options={[{ value: \"cash\", label: \"Cash\" }, { value: \"exchange\", label: \"Exchange\" }, { value: \"both\", label: \"Both\" }]} />\r\n\r\n                                                    <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                        <MultiSelectComponent\r\n                                                            id=\"mtselement\"\r\n                                                            cssClassNamclassName={'multi-droupdown'}\r\n                                                            popupHeight='200px'\r\n                                                            fields={this.fields}\r\n                                                            value={formField.categories}\r\n                                                            dataSource={catlist}\r\n                                                            placeholder=\"Select a Category\"\r\n                                                            mode=\"CheckBox\"\r\n                                                            enableGroupCheckBox=\"true\"\r\n                                                            allowFiltering=\"true\"\r\n                                                            ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                            filterBarPlaceholder=\"Search Category\"\r\n                                                            change={this.onChangeCategory}\r\n                                                            select={this.onSelectCategory}\r\n                                                            close={this.onCloseCategory}\r\n                                                            showDropDownIcon={true}\r\n                                                            noRecordsTemplate={this.noRecords}>\r\n                                                            <Inject services={[CheckBoxSelection]} />\r\n                                                        </MultiSelectComponent>\r\n                                                    </div> */}\r\n\r\n            {/*<Select*/}\r\n            {/*className=\"multiple-select category\"*/}\r\n            {/*classNamePrefix=\"multi\"*/}\r\n            {/*isSearchable*/}\r\n            {/*isMulti*/}\r\n            {/*name=\"categories\"*/}\r\n            {/*value={formField.categories}*/}\r\n            {/*placeholder=\"Category\"*/}\r\n            {/*onChange={this.handleAll}*/}\r\n            {/*options={categoriesArr.map(item => ({ value: item.id, label: item.name }))} />*/}\r\n\r\n            {/* <Select\r\n                                                        className=\"multiple-select budget\"\r\n                                                        classNamePrefix=\"multi\"\r\n                                                        isClearable\r\n                                                        name=\"budget\"\r\n                                                        value={formField.budget}\r\n                                                        placeholder=\"Budget\"\r\n                                                        onChange={this.handleAll}\r\n                                                        options={[\r\n                                                            { value: \"0\", label: \"Any Number of budget\" },\r\n                                                            { value: \"1\", label: \"Less than $10\" },\r\n                                                            { value: \"2\", label: \"$10-$50\" },\r\n                                                            { value: \"3\", label: \"$50-$100\" },\r\n                                                            { value: \"4\", label: \"$100-$500\" },\r\n                                                            { value: \"5\", label: \"$500-$1k\" },\r\n                                                            { value: \"6\", label: \"$1k-$5k\" },\r\n                                                            { value: \"7\", label: \"$5k+\" }\r\n                                                        ]} />\r\n                                                    <Select\r\n                                                        className=\"multiple-select ratings\"\r\n                                                        classNamePrefix=\"multi\"\r\n                                                        isClearable\r\n                                                        value={formField.proposal_count}\r\n                                                        name=\"proposal_count\"\r\n                                                        placeholder=\"Number of Proposals\"\r\n                                                        onChange={this.handleAll}\r\n                                                        options={[\r\n                                                            { value: \"0\", label: \"Any Number of proposals\" },\r\n                                                            { value: \"1\", label: \"Less than 10\" },\r\n                                                            { value: \"2\", label: \"11 to 50\" },\r\n                                                            { value: \"3\", label: \"51 to 100\" },\r\n                                                            { value: \"4\", label: \"101 to 200\" },\r\n                                                            { value: \"5\", label: \"Above 200\" }]} />\r\n                                                    <Select\r\n                                                        className=\"multiple-select\"\r\n                                                        classNamePrefix=\"multi\"\r\n                                                        isClearable\r\n                                                        isSearchable\r\n                                                        value={formField.countries}\r\n                                                        name=\"countries\"\r\n                                                        onChange={this.handleAll}\r\n                                                        placeholder=\"Country\"\r\n                                                        options={countriesArr.map(item => ({ value: item.code, label: item.name }))} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"font-weight-bold btn btn-link text-info text-nowrap\" type=\"button\" onClick={this.onResetForm}>Reset Filters</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section2\">\r\n                        <div className=\"row\">\r\n                            <form style={{ width: \"100%\" }} name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                                <div style={{ width: \"100%\", paddingLeft: 5, paddingRight: 5 }} className=\"any-search mb-3 mb-lg-4\">\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" onChange={this.handleChange} value={formField.name} name=\"name\" placeholder=\"Search by Skill, Job title\" />\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p onClick={() => this.filterToggle(\"section1\")}>Advance Filter</p>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"col-12 sorting mb-3 d-flex align-items-center\">\r\n                                <h6 className=\"col pl-0 mb-0\">\r\n                                    {(results && results.pagination && results.pagination.totalCount > 0) && `${results.pagination.totalCount} Search result found.`}\r\n                                    {(results && results.length === 0) && 'No search result found.'}\r\n                                </h6> */}\r\n            {/*\r\n                                <div className=\"sort\">\r\n                                    <Select\r\n                                        className=\"multiple-select\"\r\n                                        classNamePrefix=\"multi\"\r\n                                        name=\"sort\"\r\n                                        value={formField.sort}\r\n                                        placeholder=\"Sort By\"\r\n                                        onChange={this.handleAll}\r\n                                        options={[{ value: \"id\", label: \"Most Recent\" }]} />\r\n                                </div>\r\n                            */}\r\n            {/* </div>\r\n                        </div>\r\n                        <JobListing results={results} />\r\n                        <div className=\"col-12\">\r\n                            <Pagination className=\"justify-content-end\"\r\n                                pageSize={pagesize}\r\n                                totalCount={(results && results.pagination && results.pagination.totalCount) ? results.pagination.totalCount : 10}\r\n                                onChangePage={this.onChangePage} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            <section className=\"featured-users\">\r\n                <div className=\"container\">\r\n                    <div className=\"section-title\" style={{ paddingTop: 20 }}>\r\n                        <h1>Jobs</h1>\r\n                        <h6 className=\"col pl-0 mb-0\">\r\n                            {(results && results.pagination && results.pagination.totalCount > 0) && `${results.pagination.totalCount} Search result found.`}\r\n                            {(results && results.length === 0) && 'No search result found.'}\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"work\">\r\n                                <form name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                                    <div className=\"any-search mb-3 mb-lg-4\">\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" onChange={this.handleChange} value={formField.name} name=\"name\" placeholder=\"Search by Skill, Job title\" />\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <JobListing results={results} />\r\n                                <div className=\"paginationCommon blogPagination text-center\">\r\n                                    <Pagination className=\"\"\r\n                                        pageSize={pagesize}\r\n                                        totalCount={(results && results.pagination && results.pagination.totalCount) ? results.pagination.totalCount : 10}\r\n                                        onChangePage={this.onChangePage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-4 col-md-3\">\r\n                            <div className=\"widget\">\r\n                                <div className=\"text-right\">\r\n                                    <button style={{color: \"red !important\"}} className=\"font-weight-bold btn btn-link text-info text-nowrap\" type=\"button\" onClick={this.onResetForm}>Reset Filters</button>\r\n                                </div>\r\n                                {/* <h3 className=\"widget_title\">Category</h3> */}\r\n                                {/* <ul className=\"tr-list\">\r\n                                    <li><a href=\"\" className=\"active\"><i className=\"fa fa-code\"></i> Web & Mobile Development</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-eye\"></i>  Design, Arts & Multimedia</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-edit\"></i>  Writing & Translation</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-cog\"></i>  Admin Support</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-table\"></i>  Management & Finance</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-bullhorn\"></i>  Sales & Marketing</a></li>\r\n                                </ul> */}\r\n                                {/* <div className=\"expensionPannel\">\r\n                                    {catlist.length ? catlist.map((obj, i) => {\r\n                                        return (\r\n                                            catlist[i + 1] ?\r\n                                                obj.parent !== catlist[i + 1].parent ?\r\n                                                    <ExpansionPanel defaultExpanded>\r\n                                                        <ExpansionPanelSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"panel1a-content\"\r\n                                                            id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <p>{obj.parent}</p>\r\n                                                        </ExpansionPanelSummary>\r\n                                                        <ExpansionPanelDetails>\r\n                                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                                <MultiSelectComponent\r\n                                                                    id=\"mtselement\"\r\n                                                                    cssClassNamclassName={'multi-droupdown'}\r\n                                                                    popupHeight='200px'\r\n                                                                    fields={this.fields}\r\n                                                                    value={formField.categories}\r\n                                                                    dataSource={catlist}\r\n                                                                    placeholder=\"Select a Category\"\r\n                                                                    mode=\"CheckBox\"\r\n                                                                    enableGroupCheckBox=\"true\"\r\n                                                                    allowFiltering=\"true\"\r\n                                                                    // ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                                    // filterBarPlaceholder=\"Search Category\"\r\n                                                                    // change={this.onChangeCategory}\r\n                                                                    // select={this.onSelectCategory}\r\n                                                                    // close={this.onCloseCategory}\r\n                                                                    // showDropDownIcon={true}\r\n                                                                    noRecordsTemplate={this.noRecords}>\r\n                                                                    <Inject services={[CheckBoxSelection]} />\r\n                                                                </MultiSelectComponent>\r\n                                                            </div>\r\n                                                        </ExpansionPanelDetails>\r\n                                                    </ExpansionPanel>\r\n                                                    : null\r\n                                                : null\r\n                                        )\r\n                                    }) : null}\r\n                                </div> */}\r\n                                <div className=\"categoryDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                        >\r\n                                            <p>Categories</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                <MultiSelectComponent\r\n                                                    id=\"mtselement\"\r\n                                                    cssClassNamclassName={'multi-droupdown'}\r\n                                                    popupHeight='500px'\r\n                                                    fields={this.fields}\r\n                                                    value={formField.categories}\r\n                                                    dataSource={catlist}\r\n                                                    placeholder=\"Select a Category\"\r\n                                                    mode=\"CheckBox\"\r\n                                                    enableGroupCheckBox=\"true\"\r\n                                                    allowFiltering=\"true\"\r\n                                                    ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                    filterBarPlaceholder=\"Search Category\"\r\n                                                    change={this.onChangeCategory}\r\n                                                    select={this.onSelectCategory}\r\n                                                    close={this.onCloseCategory}\r\n                                                    showDropDownIcon={true}\r\n                                                    noRecordsTemplate={this.noRecords}>\r\n                                                    <Inject services={[CheckBoxSelection]} />\r\n                                                </MultiSelectComponent>\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                </div>\r\n\r\n                                <div className=\"paymentDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Payment Type</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"settlement\" value={formField.settlement}\r\n                                                    name=\"settlement\"\r\n                                                    onChange={(ev) => this.RadioButtonChanger(ev)} >\r\n                                                    <FormControlLabel value=\"\" control={<Radio />} label=\"Both\" />\r\n                                                    <FormControlLabel value=\"cash\" control={<Radio />} label=\"Cash\" />\r\n                                                    <FormControlLabel value=\"exchange\" control={<Radio />} label=\"Exchange\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                </div>\r\n\r\n                                <div className=\"budgetDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Job Type </p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"proposal_count\" value={formField.proposal_count}\r\n                                                    name=\"proposal_count\"\r\n                                                // onChange={(ev) => this.RadioButtonChanger(ev)} \r\n                                                >\r\n                                                    {[\r\n                                                        { value: \"0\", label: \"Any Job\" },\r\n                                                        { value: \"1\", label: \"Fixed\" },\r\n                                                        { value: \"2\", label: \"Hourly\" }].map((a) => {\r\n                                                            return (\r\n                                                                <FormControlLabel value={a.value} control={<Radio size=\"small\" />} label={a.label} />\r\n                                                            )\r\n                                                        })}\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"budgetDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Budget </p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"budget\" value={formField.budget}\r\n                                                    name=\"budget\"\r\n                                                    onChange={(ev) => this.RadioButtonChanger(ev)} >\r\n                                                    {[\r\n                                                        { value: \"0\", label: \"Any budget\" },\r\n                                                        { value: \"1\", label: \"Less than $10\" },\r\n                                                        { value: \"2\", label: \"$10-$50\" },\r\n                                                        { value: \"3\", label: \"$50-$100\" },\r\n                                                        { value: \"4\", label: \"$100-$500\" },\r\n                                                        { value: \"5\", label: \"$500-$1k\" },\r\n                                                        { value: \"6\", label: \"$1k-$5k\" },\r\n                                                        { value: \"7\", label: \"$5k+\" }\r\n                                                    ].map((a) => {\r\n                                                        return (\r\n                                                            <FormControlLabel value={a.value} control={<Radio size=\"small\" />} label={a.label} />\r\n                                                        )\r\n                                                    })}\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"budgetDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Number of Proposals </p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"proposal_count\" value={formField.proposal_count}\r\n                                                    name=\"proposal_count\"\r\n                                                    onChange={(ev) => this.RadioButtonChanger(ev)} >\r\n                                                    {[\r\n                                                        { value: \"0\", label: \"Any Number of proposals\" },\r\n                                                        { value: \"1\", label: \"Less than 10\" },\r\n                                                        { value: \"2\", label: \"11 to 50\" },\r\n                                                        { value: \"3\", label: \"51 to 100\" },\r\n                                                        { value: \"4\", label: \"101 to 200\" },\r\n                                                        { value: \"5\", label: \"Above 200\" }].map((a) => {\r\n                                                            return (\r\n                                                                <FormControlLabel value={a.value} control={<Radio size=\"small\" />} label={a.label} />\r\n                                                            )\r\n                                                        })}\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n\r\n                                </div>\r\n                                <div className=\"countryDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                        >\r\n                                            <p>Country</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                <Select\r\n                                                    className=\"multiple-select\"\r\n                                                    classNamePrefix=\"multi\"\r\n                                                    isClearable\r\n                                                    isSearchable\r\n                                                    value={formField.countries}\r\n                                                    name=\"countries\"\r\n                                                    onChange={this.handleAll}\r\n                                                    placeholder=\"Country\"\r\n                                                    options={countriesArr.map(item => ({ value: item.code, label: item.name }))} />\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                </div>\r\n\r\n                                {/* <div className=\"margin-space\"></div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Payment Type</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"#\">Both</a></li>\r\n                                            <li><a href=\"#\">Cash</a></li>\r\n                                            <li><a href=\"#\">Exchange</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Experience Level</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">Entry Level</a></li>\r\n                                            <li><a href=\"\">Intermediate</a></li>\r\n                                            <li><a href=\"\">Expert</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"margin-space\"></div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Job Duration</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">6+ Months</a></li>\r\n                                            <li><a href=\"\">3 - 6 Months</a></li>\r\n                                            <li><a href=\"\">1 - 3 Months</a></li>\r\n                                            <li><a href=\"\">Below 1 Month</a></li>\r\n                                            <li><a href=\"\">Below 1 Week</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Hours Per Week</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">30 - 39</a></li>\r\n                                            <li><a href=\"\">20 - 29</a></li>\r\n                                            <li><a href=\"\">10 - 19</a></li>\r\n                                            <li><a href=\"\">1 - 9</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst searchSelector = createSelector(\r\n    state => state.search,\r\n    search => search\r\n);\r\n\r\nconst categoriesSelector = createSelector(\r\n    state => state.categories,\r\n    categories => categories\r\n);\r\n\r\nconst countriesSelector = createSelector(\r\n    state => state.countries,\r\n    countries => countries\r\n);\r\n\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    categoriesSelector,\r\n    countriesSelector,\r\n    searchSelector,\r\n    (categories, countries, search) => ({\r\n        categories, countries, search\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(JobSearch);\r\n","import React, { PureComponent } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { CheckBoxSelection, Inject, MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport Select from \"react-select\";\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { searchActions, defaultActions } from '../../../common/redux/actions';\r\nimport { ServiceListing } from './partials';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, FormControl, RadioGroup, FormLabel, Radio, FormControlLabel } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nclass ServiceSearch extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                name: \"\",\r\n                title: \"\",\r\n                settlement: '',\r\n                categories: [],\r\n                countries: [],\r\n                budget: \"0\",\r\n                proposal_count: \"0\",\r\n                sort: null,\r\n            },\r\n            page: 1,\r\n            pagesize: 20,\r\n            favorite: {},\r\n\r\n        };\r\n        this.initializeState = this.state;\r\n        this.props.history.listen((location, action) => {\r\n            const { dispatch } = this.props;\r\n            if (location && location.search) {\r\n                let search = new URLSearchParams(location.search);\r\n                dispatch(searchActions.services(\"GET\", { title: search.get(\"title\") }));\r\n                //dispatch(searchActions.services(\"GET\", {title: title}))\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { dispatch, categories, countries } = this.props;\r\n        Object.getOwnPropertyNames(categories).length === 0 && dispatch(defaultActions.categories());\r\n        Object.getOwnPropertyNames(countries).length === 0 && dispatch(defaultActions.countries());\r\n        /*if(this.props.location && this.props.location.search) {\r\n            let search = new URLSearchParams(this.props.location.search);\r\n            let name = search.get(\"name\");\r\n            let title = search.get(\"title\");\r\n            this.setState({ formField: {\r\n                name, title\r\n            }});\r\n            console.log('componentWillMount');\r\n        }*/\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { dispatch } = this.props;\r\n        this.setState(this.initializeState);\r\n        dispatch(searchActions.clear());\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //const { title } = this.props;\r\n        if (nextProps.location && nextProps.location.search) {\r\n            let search = new URLSearchParams(this.props.location.search);\r\n            let formField = { ...this.state.formField };\r\n            formField['name'] = search.get(\"name\");\r\n            formField['title'] = search.get(\"title\");\r\n            this.setState({ formField });\r\n        }\r\n    }\r\n\r\n\r\n    onResetForm = (e) => {\r\n        e.preventDefault();\r\n        const { history } = this.props;\r\n        this.setState(this.initializeState);\r\n        this.listObj.value = null;\r\n        history.push('/service-search');\r\n        this.props.dispatch(searchActions.services(\"GET\", { pagesize: 20, page: 1 }));\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleAll = (item, { action, name }) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField }, () => this.search());\r\n    };\r\n\r\n    RadioButtonChanger = (ev, item) => {\r\n        const formField = { ...this.state.formField };\r\n        formField[ev.target.name] = ev.target.value;\r\n        // console.log(ev.target.name, ev.target.value)\r\n        this.setState({ formField }, () => this.search());\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        this.setState({ page }, () => this.search());\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { history } = this.props;\r\n        history.push('/service-search?title=' + this.state.formField.title);\r\n        //this.search();\r\n    };\r\n\r\n    noRecords = () => {\r\n        return (\r\n            <span className='norecord'> No Category Available</span>\r\n        );\r\n    };\r\n\r\n    onChangeCategory = (event) => {\r\n        console.log(event.value)\r\n        const formField = { ...this.state.formField };\r\n        formField[\"categories\"] = event.value;\r\n        this.setState({ formField }, () => this.search());\r\n    };\r\n\r\n    onSelectCategory = (event) => {\r\n        //console.log(event.itemData);\r\n    };\r\n\r\n    onCloseCategory = (event) => {\r\n        //console.log(event);\r\n    };\r\n\r\n    search = () => {\r\n        const { formField, pagesize, page } = this.state;\r\n        const { dispatch, sort } = this.props;\r\n        let params = {};\r\n        params.name = formField.name;\r\n        params.title = formField.title;\r\n        params.category_id = (formField.categories && formField.categories.length > 0) ? formField.categories : null;\r\n        params.country_code = (formField.countries && formField.countries.value) ? formField.countries.value : \"\";\r\n        params.settlement = formField.settlement\r\n        params.budget = formField.budget\r\n        params.proposal_count = formField.proposal_count\r\n        params.sort = (sort) ? sort : ((formField.sort && formField.sort.value) ? formField.sort.value : \"\");\r\n        params.pagesize = pagesize;\r\n        params.page = page;\r\n        dispatch(searchActions.services(\"GET\", params));\r\n    };\r\n\r\n    filterToggle = (id) => {\r\n        document.getElementById(id).classList.toggle(\"section1MobOpen\")\r\n    }\r\n\r\n    // map the groupBy field with category column\r\n    fields = { groupBy: 'parent', text: 'name', value: 'id' };\r\n\r\n    render() {\r\n\r\n        const { categories, countries, search, history } = this.props;\r\n        const { formField, pagesize } = this.state;\r\n        let categoriesArr = categories && categories.data ? categories.data : [];\r\n        let countriesArr = countries && countries.data ? countries.data : [];\r\n        let results = search.services ? search.services.items : null;\r\n        let catlist = categoriesArr.filter(item => (item.parent_id !== null));\r\n\r\n        // console.log(results)\r\n\r\n        return (<Main history={history}>\r\n            <DocumentTitle title={`Services Search`} />\r\n            {/* <div className=\"freLncrSarch bg-body\">\r\n                <div className=\"container\">\r\n                    <div id=\"section1\" className=\"section1 section1MobClose\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <form name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate> */}\r\n            {/* <div className=\"any-search mb-2 mb-lg-3\">\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" onChange={this.handleChange} value={formField.title} name=\"title\"\r\n                                                placeholder=\"Search by Skill, Service\" />\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n            {/* <div className=\"filters card mb-0\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"clearIcon\" style={{ width: \"100%\", height: \"30px\" }}>\r\n                                                <CancelIcon onClick={() => this.filterToggle(\"section1\")}\r\n                                                    style={{ float: \"right\", color: \"red\" }} />\r\n                                            </div>\r\n                                            <div className=\"-items-center\">\r\n                                                <div className=\"w-100\">\r\n                                                    <div className=\"d-flex align-items-center flex-wrap custom-row\">\r\n                                                        <Select\r\n                                                            className=\"multiple-select payment\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            name=\"settlement\"\r\n                                                            isClearable\r\n                                                            value={formField.settlement}\r\n                                                            placeholder=\"Payment Type\"\r\n                                                            onChange={this.handleAll}\r\n                                                            options={[{ value: \"cash\", label: \"Cash\" }, { value: \"exchange\", label: \"Exchange\" }, { value: \"both\", label: \"Both\" }]} />\r\n\r\n                                                        <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                            <MultiSelectComponent\r\n                                                                id=\"mtselement\"\r\n                                                                cssClass={'multi-droupdown'}\r\n                                                                popupHeight='200px'\r\n                                                                fields={this.fields}\r\n                                                                value={formField.categories}\r\n                                                                dataSource={catlist}\r\n                                                                placeholder=\"Select a Category\"\r\n                                                                mode=\"CheckBox\"\r\n                                                                enableGroupCheckBox=\"true\"\r\n                                                                allowFiltering=\"true\"\r\n                                                                ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                                filterBarPlaceholder=\"Search Category\"\r\n                                                                change={this.onChangeCategory}\r\n                                                                select={this.onSelectCategory}\r\n                                                                close={this.onCloseCategory}\r\n                                                                showDropDownIcon={true}\r\n                                                                noRecordsTemplate={this.noRecords}>\r\n                                                                <Inject services={[CheckBoxSelection]} />\r\n                                                            </MultiSelectComponent>\r\n                                                        </div> */}\r\n\r\n            {/*<Select*/}\r\n            {/*className=\"multiple-select category\"*/}\r\n            {/*classNamePrefix=\"multi\"*/}\r\n            {/*isSearchable*/}\r\n            {/*isMulti*/}\r\n            {/*name=\"categories\"*/}\r\n            {/*value={formField.categories}*/}\r\n            {/*placeholder=\"Category\"*/}\r\n            {/*onChange={this.handleAll}*/}\r\n            {/*options={categoriesArr.map(item => ({ value: item.id, label: item.name }))} />*/}\r\n\r\n            {/* <Select\r\n                                                            className=\"multiple-select budget\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isClearable\r\n                                                            name=\"budget\"\r\n                                                            value={formField.budget}\r\n                                                            placeholder=\"Budget\"\r\n                                                            onChange={this.handleAll}\r\n                                                            options={[\r\n                                                                { value: \"0\", label: \"Any budget amount\" },\r\n                                                                { value: \"1\", label: \"Less than $10\" },\r\n                                                                { value: \"2\", label: \"$10-$50\" },\r\n                                                                { value: \"3\", label: \"$50-$100\" },\r\n                                                                { value: \"4\", label: \"$100-$500\" },\r\n                                                                { value: \"5\", label: \"$500-$1k\" },\r\n                                                                { value: \"6\", label: \"$1k-$5k\" },\r\n                                                                { value: \"7\", label: \"$5k+\" }\r\n                                                            ]} />\r\n                                                        <Select\r\n                                                            className=\"multiple-select ratings\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isClearable\r\n                                                            value={formField.proposal_count}\r\n                                                            name=\"proposal_count\"\r\n                                                            placeholder=\"Number of Offers\"\r\n                                                            onChange={this.handleAll}\r\n                                                            options={[\r\n                                                                { value: \"0\", label: \"Any number of offers\" },\r\n                                                                { value: \"1\", label: \"Less than 10\" },\r\n                                                                { value: \"2\", label: \"11 to 50\" },\r\n                                                                { value: \"3\", label: \"51 to 100\" },\r\n                                                                { value: \"4\", label: \"101 to 200\" },\r\n                                                                { value: \"5\", label: \"Above 200\" }]} />\r\n                                                        <Select\r\n                                                            className=\"multiple-select\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isClearable\r\n                                                            isSearchable\r\n                                                            value={formField.countries}\r\n                                                            name=\"countries\"\r\n                                                            onChange={this.handleAll}\r\n                                                            placeholder=\"Country\"\r\n                                                            options={countriesArr.map(item => ({ value: item.code, label: item.name }))} />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"text-right\">\r\n                                                    <button className=\"font-weight-bold btn btn-link text-info text-nowrap\" type=\"button\"\r\n                                                        onClick={this.onResetForm}>Reset Filters\r\n                                                </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section2\">\r\n                        <div className=\"row\">\r\n                            <form style={{ width: \"100%\" }} name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                                <div style={{ width: \"100%\", paddingLeft: 5, paddingRight: 5 }} className=\"any-search mb-2 mb-lg-3\">\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" onChange={this.handleChange} value={formField.title} name=\"title\"\r\n                                            placeholder=\"Search by Skill, Service\" />\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p onClick={() => this.filterToggle(\"section1\")}>Advance Filter</p>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"col-12 sorting my-2 d-flex align-items-center\">\r\n                                <h6 className=\"mt-3 mt-lg-4 pb-3 col pl-0\">\r\n                                    {(search && search.services && search.services.pagination && search.services.pagination.totalCount > 0) && `${search.services.pagination.totalCount} Search result found.`}\r\n                                    {(results && results.length === 0) && 'No search result found.'}\r\n                                </h6> */}\r\n            {/*\r\n                                <div className=\"sort\">\r\n                                    <Select\r\n                                        className=\"multiple-select\"\r\n                                        classNamePrefix=\"multi\"\r\n                                        placeholder=\"Sort By\"\r\n                                        name=\"sort\"\r\n                                        value={formField.sort}\r\n                                        onChange={this.handleAll}\r\n                                        options={[{ value: \"id\", label: \"Most Recent\" }]} />\r\n                                </div>\r\n                            */}\r\n            {/* </div>\r\n                        </div>\r\n                        <ServiceListing results={results} />\r\n                        <div className=\"col-12\">\r\n                            <Pagination className=\"justify-content-end\"\r\n                                pageSize={pagesize}\r\n                                totalCount={(search && search.services && search.services.pagination && search.services.pagination.totalCount) ? search.services.pagination.totalCount : 3}\r\n                                onChangePage={this.onChangePage} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div> */}\r\n\r\n\r\n            <section className=\"featured-users\">\r\n                <div className=\"container\">\r\n                    <div className=\"section-title\" style={{ paddingTop: 20 }}>\r\n                        <h1>Services</h1>\r\n                        <h6 className=\"mt-3 mt-lg-4 pb-3 col pl-0\">\r\n                            {(search && search.services && search.services.pagination && search.services.pagination.totalCount > 0) && `${search.services.pagination.totalCount} Search result found.`}\r\n                            {(results && results.length === 0) && 'No search result found.'}\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-9\">\r\n                            {/* <div className=\"work\"> */}\r\n                            <form name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                                <div style={{ width: \"100%\", marginBottom: \"20px\" }} className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control\" onChange={this.handleChange} value={formField.title} name=\"title\"\r\n                                        placeholder=\"Search by Skill, Service\" />\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <ServiceListing results={results} />\r\n                            <div className=\"paginationCommon blogPagination text-center\">\r\n                                <Pagination className=\"\"\r\n                                    pageSize={pagesize}\r\n                                    totalCount={(search && search.services && search.services.pagination && search.services.pagination.totalCount) ? search.services.pagination.totalCount : 3}\r\n                                    onChangePage={this.onChangePage} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 col-md-3\">\r\n                            <div className=\"widget\">\r\n                                <div className=\"text-right\">\r\n                                    <button style={{ color: \"red !important\" }} className=\"font-weight-bold btn btn-link text-info text-nowrap\" type=\"button\" onClick={this.onResetForm}>Reset Filters</button>\r\n                                </div>\r\n                                {/* <h3 className=\"widget_title\">Category</h3> */}\r\n                                {/* <ul className=\"tr-list\">\r\n                                    <li><a href=\"\" className=\"active\"><i className=\"fa fa-code\"></i> Web & Mobile Development</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-eye\"></i>  Design, Arts & Multimedia</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-edit\"></i>  Writing & Translation</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-cog\"></i>  Admin Support</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-table\"></i>  Management & Finance</a></li>\r\n                                    <li><a href=\"\"><i className=\"fa fa-bullhorn\"></i>  Sales & Marketing</a></li>\r\n                                </ul> */}\r\n                                {/* <div className=\"expensionPannel\">\r\n                                    {catlist.length ? catlist.map((obj, i) => {\r\n                                        return (\r\n                                            catlist[i + 1] ?\r\n                                                obj.parent !== catlist[i + 1].parent ?\r\n                                                    <ExpansionPanel defaultExpanded>\r\n                                                        <ExpansionPanelSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"panel1a-content\"\r\n                                                            id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <p>{obj.parent}</p>\r\n                                                        </ExpansionPanelSummary>\r\n                                                        <ExpansionPanelDetails>\r\n                                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                                <MultiSelectComponent\r\n                                                                    id=\"mtselement\"\r\n                                                                    cssClassNamclassName={'multi-droupdown'}\r\n                                                                    popupHeight='200px'\r\n                                                                    fields={this.fields}\r\n                                                                    value={formField.categories}\r\n                                                                    dataSource={catlist}\r\n                                                                    placeholder=\"Select a Category\"\r\n                                                                    mode=\"CheckBox\"\r\n                                                                    enableGroupCheckBox=\"true\"\r\n                                                                    allowFiltering=\"true\"\r\n                                                                    // ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                                    // filterBarPlaceholder=\"Search Category\"\r\n                                                                    // change={this.onChangeCategory}\r\n                                                                    // select={this.onSelectCategory}\r\n                                                                    // close={this.onCloseCategory}\r\n                                                                    // showDropDownIcon={true}\r\n                                                                    noRecordsTemplate={this.noRecords}>\r\n                                                                    <Inject services={[CheckBoxSelection]} />\r\n                                                                </MultiSelectComponent>\r\n                                                            </div>\r\n                                                        </ExpansionPanelDetails>\r\n                                                    </ExpansionPanel>\r\n                                                    : null\r\n                                                : null\r\n                                        )\r\n                                    }) : null}\r\n                                </div> */}\r\n                                <div className=\"categoryDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                        >\r\n                                            <p>Categories</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                <MultiSelectComponent\r\n                                                    id=\"mtselement\"\r\n                                                    cssClass={'multi-droupdown'}\r\n                                                    popupHeight='200px'\r\n                                                    fields={this.fields}\r\n                                                    value={formField.categories}\r\n                                                    dataSource={catlist}\r\n                                                    placeholder=\"Select a Category\"\r\n                                                    mode=\"CheckBox\"\r\n                                                    enableGroupCheckBox=\"true\"\r\n                                                    allowFiltering=\"true\"\r\n                                                    ref={(dropdownlist) => { this.listObj = dropdownlist; }}\r\n                                                    filterBarPlaceholder=\"Search Category\"\r\n                                                    change={this.onChangeCategory}\r\n                                                    select={this.onSelectCategory}\r\n                                                    close={this.onCloseCategory}\r\n                                                    showDropDownIcon={true}\r\n                                                    noRecordsTemplate={this.noRecords}>\r\n                                                    <Inject services={[CheckBoxSelection]} />\r\n                                                </MultiSelectComponent>\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                </div>\r\n\r\n                                <div className=\"paymentDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Payment Type</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"settlement\" value={formField.settlement}\r\n                                                    name=\"settlement\"\r\n                                                    onChange={(ev) => this.RadioButtonChanger(ev)} >\r\n                                                    <FormControlLabel value=\"\" control={<Radio />} label=\"Both\" />\r\n                                                    <FormControlLabel value=\"cash\" control={<Radio />} label=\"Cash\" />\r\n                                                    <FormControlLabel value=\"exchange\" control={<Radio />} label=\"Exchange\" />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                </div>\r\n\r\n                                <div className=\"budgetDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Budget </p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"budget\" value={formField.budget}\r\n                                                    name=\"budget\"\r\n                                                    onChange={(ev) => this.RadioButtonChanger(ev)} >\r\n                                                    {[\r\n                                                        { value: \"0\", label: \"Any budget\" },\r\n                                                        { value: \"1\", label: \"Less than $10\" },\r\n                                                        { value: \"2\", label: \"$10-$50\" },\r\n                                                        { value: \"3\", label: \"$50-$100\" },\r\n                                                        { value: \"4\", label: \"$100-$500\" },\r\n                                                        { value: \"5\", label: \"$500-$1k\" },\r\n                                                        { value: \"6\", label: \"$1k-$5k\" },\r\n                                                        { value: \"7\", label: \"$5k+\" }\r\n                                                    ].map((a) => {\r\n                                                        return (\r\n                                                            <FormControlLabel value={a.value} control={<Radio size=\"small\" />} label={a.label} />\r\n                                                        )\r\n                                                    })}\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"budgetDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                            className=\"top\"\r\n                                        >\r\n                                            <p>Number of Offers </p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <FormControl component=\"fieldset\">\r\n                                                {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n                                                <RadioGroup aria-label=\"proposal_count\" value={formField.proposal_count}\r\n                                                    name=\"proposal_count\"\r\n                                                    onChange={(ev) => this.RadioButtonChanger(ev)} >\r\n                                                    {[\r\n                                                        { value: \"0\", label: \"Any number of offers\" },\r\n                                                        { value: \"1\", label: \"Less than 10\" },\r\n                                                        { value: \"2\", label: \"11 to 50\" },\r\n                                                        { value: \"3\", label: \"51 to 100\" },\r\n                                                        { value: \"4\", label: \"101 to 200\" },\r\n                                                        { value: \"5\", label: \"Above 200\" }].map((a) => {\r\n                                                            return (\r\n                                                                <FormControlLabel value={a.value} control={<Radio size=\"small\" />} label={a.label} />\r\n                                                            )\r\n                                                        })}\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n\r\n                                </div>\r\n                                <div className=\"countryDiv\">\r\n                                    <ExpansionPanel defaultExpanded>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1a-content\"\r\n                                            id=\"panel1a-header\"\r\n                                        >\r\n                                            <p>Country</p>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div className={'category'} style={{ width: '100%', paddingTop: '4px', paddingLeft: 5, paddingRight: 5 }}>\r\n                                                <Select\r\n                                                    className=\"multiple-select\"\r\n                                                    classNamePrefix=\"multi\"\r\n                                                    isClearable\r\n                                                    isSearchable\r\n                                                    value={formField.countries}\r\n                                                    name=\"countries\"\r\n                                                    onChange={this.handleAll}\r\n                                                    placeholder=\"Country\"\r\n                                                    options={countriesArr.map(item => ({ value: item.code, label: item.name }))} />\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                </div>\r\n\r\n                                {/* <div className=\"margin-space\"></div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Payment Type</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"#\">Both</a></li>\r\n                                            <li><a href=\"#\">Cash</a></li>\r\n                                            <li><a href=\"#\">Exchange</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Experience Level</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">Entry Level</a></li>\r\n                                            <li><a href=\"\">Intermediate</a></li>\r\n                                            <li><a href=\"\">Expert</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"margin-space\"></div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Job Duration</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">6+ Months</a></li>\r\n                                            <li><a href=\"\">3 - 6 Months</a></li>\r\n                                            <li><a href=\"\">1 - 3 Months</a></li>\r\n                                            <li><a href=\"\">Below 1 Month</a></li>\r\n                                            <li><a href=\"\">Below 1 Week</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h3 className=\"widget_title_small\">Hours Per Week</h3>\r\n                                        <ul className=\"tr-list\">\r\n                                            <li><a href=\"\">30 - 39</a></li>\r\n                                            <li><a href=\"\">20 - 29</a></li>\r\n                                            <li><a href=\"\">10 - 19</a></li>\r\n                                            <li><a href=\"\">1 - 9</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst searchSelector = createSelector(\r\n    state => state.search,\r\n    search => search\r\n);\r\n\r\nconst categoriesSelector = createSelector(\r\n    state => state.categories,\r\n    categories => categories\r\n);\r\n\r\nconst countriesSelector = createSelector(\r\n    state => state.countries,\r\n    countries => countries\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    categoriesSelector,\r\n    countriesSelector,\r\n    processSelector,\r\n    searchSelector,\r\n    (categories, countries, process, search) => ({\r\n        categories, countries, process, search\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ServiceSearch);\r\n","import React from \"react\";\r\n\r\nexport const fileManupulate = (uploadFiles, oldFiles, id) => {\r\n    let files = [];\r\n    uploadFiles.docs && uploadFiles.docs.map(file => files.push(file.id));\r\n    uploadFiles.image && uploadFiles.image.map(file => files.push(file.id));\r\n    uploadFiles.video && uploadFiles.video.map(file => files.push(file.id));\r\n    if (id) {\r\n        files = oldFiles ? files.filter(val => !oldFiles.includes(val)) : files;\r\n    }\r\n    return files;\r\n};\r\n\r\nexport const NoUploadedFiles = () => {\r\n    return (\r\n            <ul className=\"upload-pdf\">\r\n                <li className=\"d-flex flex-wrap\">\r\n                    <div className=\"col pl-0\">\r\n                        {/* No files. */}\r\n                    </div>\r\n\r\n                </li>\r\n            </ul>);\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { defaultActions, } from \"../../../common/redux/actions\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { NoUploadedFiles } from \"../../../helpers/file.helper\";\r\nimport {alertSelectors, uploadSelectors} from \"../../../common/redux/selectors\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport {itemService} from \"../../../common/services\";\r\n\r\nclass FileUploader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleRemove = (id, type = null) => {\r\n        const { dispatch } = this.props;\r\n        if (id !== '' || id !== null) {\r\n            confirmAlert({\r\n                title: null,\r\n                message: `Are you sure you want to delete this file?`,\r\n                buttons: [\r\n                    {\r\n                        label: 'No',\r\n                        onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                    },\r\n                    {\r\n                        label: 'Yes',\r\n                        onClick: () => {\r\n                            dispatch(defaultActions.remove(id, type));\r\n                            this.removeFile(id);\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    removeFile(id) {\r\n        const { upload, dispatch } = this.props;\r\n        let filesArr = upload.files ? upload.files : [];\r\n        let docsIdx = filesArr.docs && filesArr.docs.findIndex(file => (file.id === parseInt(id)));\r\n        (filesArr.docs && docsIdx !== -1) && filesArr.docs.splice(docsIdx, 1);\r\n        let imageIdx = filesArr.image && filesArr.image.findIndex(file => (file.id === parseInt(id)));\r\n        (filesArr.image && imageIdx !== -1) && filesArr.image.splice(imageIdx, 1);\r\n        let videoIdx = filesArr.video && filesArr.video.findIndex(file => (file.id === parseInt(id)));\r\n        (filesArr.video && videoIdx !== -1) && filesArr.video.splice(videoIdx, 1);\r\n        dispatch(uploadSelectors.respond(upload.files));\r\n    }\r\n\r\n    handleUpload = (e) => {\r\n        const { upload, dispatch } = this.props;\r\n        if(e.target.files.length > 0) {\r\n            dispatch(defaultActions.upload(e.target.files, upload));\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(uploadSelectors.clear());\r\n    }\r\n\r\n    coverPhoto = (item) => this.props.coverPhoto(item);\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { upload, title, accept } = this.props;\r\n        let filesList = upload.files ? upload.files : [];\r\n        return (<Fragment>\r\n            {title ? <label>{title}</label> :\r\n                <label>Document & Other files\r\n                    <OverlayTrigger placement={'top'} overlay={<Tooltip>Document & Other files</Tooltip>}>\r\n                        <span className=\"question text-light ml-2\"><i className=\"far fa-question-circle\"></i></span>\r\n                    </OverlayTrigger>\r\n                </label>}\r\n                <div className=\"upload-all mb-3\">\r\n                    <div className=\"bg d-flex align-items-center justify-content-center\"><i\r\n                        className=\"fas fa-cloud-upload-alt\"></i></div>\r\n                    <div className=\"select-file d-flex align-items-center justify-content-center\">\r\n                        <div className=\"inner\">\r\n                            Drop here to upload or <label>Choose File\r\n                                                <input type=\"file\" name=\"media[]\" id=\"fileElem1\" accept={'*'}\r\n                                    onChange={this.handleUpload}\r\n                                    multiple /></label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"upload-progress\" style={{ display: this.props.upload.progress ? 'block' : 'none' }}>\r\n                        <div className=\"progress rounded-0\">\r\n                            <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${this.props.upload.progress}%` }}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {upload.hasFiles ?\r\n                    <div>\r\n                        <ul className=\"upload-pdf pl-0\">\r\n                        {filesList.docs && filesList.docs.map((item) =>\r\n                            item.id && (<li className=\"d-flex flex-wrap mb-2\" key={`doc-${item.id}`}>\r\n                                    <div className=\"col pl-0 d-flex align-items-center\">\r\n                                        {(item.mimetype === 'application/pdf') ?\r\n                                            <i className=\"far fa-file-pdf fa-2x text-info\"></i>\r\n                                            : (item.mimetype === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') ?\r\n                                                <i className=\"far fa-file-word fa-2x text-info\"></i>\r\n                                                : <i className=\"far fa-file fa-2x text-info\"></i>}\r\n                                        <span className=\"title pl-2\">{item.filename}</span>\r\n                                    </div>\r\n                                    <button type=\"button\" className=\"btn btn-outline-info\" item={item.id}\r\n                                    onClick={this.handleRemove.bind(this, item.id, 'docs')}>Remove</button>\r\n                                </li>)\r\n                            )}\r\n                        </ul>\r\n\r\n                        <div className=\"image-list\">\r\n                            <div className=\"row padding-5\">\r\n                                {filesList.image && filesList.image.map((item) =>\r\n                                    item.id && (<div className=\"col-lg-2 col-4\" key={`image-${item.id}`} item={`image-${item.id}`} >\r\n                                        <div className=\"upload-box border text-center mb-3\">\r\n                                            <img src={item.path} alt=\"\" className=\"img-fluid\"\r\n                                                style={{ maxHeight: '170px', maxWidth: \"100%\" }} />\r\n                                            { (this.props.coverImage) && <div className=\"custom-control custom-radio radio-tranparen\">\r\n                                                                <input\r\n                                                                    type=\"radio\" id={`cover-${item.id}`}\r\n                                                                    value={item.id}\r\n                                                                    name=\"coverImages\"\r\n                                                                    defaultChecked={(item.id === this.props.coverImage)}\r\n                                                                    className=\"custom-control-input\" onClick={() => this.coverPhoto(item.id)}\r\n                                                                />\r\n                                                                <label className=\"custom-control-label\"\r\n                                                                    htmlFor={`cover-${item.id}`}>&nbsp;</label>\r\n                                                            </div> }\r\n                                            <button type=\"button\" className=\"btn btn-danger btn-sm px-1 py-0\" item={item.id}\r\n                                                onClick={this.handleRemove.bind(this, item.id, 'image')}><i className=\"far fa-trash-alt\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>)\r\n                                )}\r\n                            {this.props.coverImage && <div className=\"col-12 mb-3\">\r\n                                    <div>\r\n                                        <label className=\"\" htmlFor=\"customCheckg1\">\r\n                                            By clicking any of checkbox you can make that image as service cover image\r\n                                                        </label>\r\n                                    </div>\r\n                                </div>}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"image-list\">\r\n                            <div className=\"row\">\r\n                                {filesList.video && filesList.video.map((item) =>\r\n                                    <div className=\"col-sm-3 col-md-4 col-sm-6 col-12\" key={`video-${item.id}`}>\r\n                                        <div className=\"upload-box mb-3\">\r\n                                            <video style={{ maxHeight: '170px', width: \"100%\" }} controls>\r\n                                                <source src={item.path} type={item.type} />\r\n                                                Your browser does not support the video tag.\r\n                                                                        </video>\r\n                                            <button type=\"button\" className=\"btn btn-outline-info\" item={item.id}\r\n                                                onClick={this.handleRemove.bind(this, item.id, 'video')}>Remove\r\n                                                                        </button>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :<NoUploadedFiles />}\r\n\r\n        </Fragment>);\r\n    }\r\n}\r\n\r\n\r\nconst uploadSelector = createSelector(\r\n    state => state.upload,\r\n    upload => upload\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    uploadSelector,\r\n    (upload) => ({\r\n        upload\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(FileUploader);\r\n","import React, { Component } from 'react';\r\nimport { Element, Link } from 'react-scroll';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { defaultActions, userActions } from \"../../../../common/redux/actions\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { history } from \"../../../../helpers/history\";\r\nimport Select from 'react-select';\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport FormValidator from \"../../../../helpers/FormValidator\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { fileManupulate } from \"../../../../helpers/file.helper\";\r\nimport FileUploader from '../../common/FileUploader';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\n\r\nvar budgetValid = false;\r\n\r\nclass ServiceForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            formField: {\r\n                category_id: '',\r\n                subcategory_id: '',\r\n                title: '',\r\n                description: '',\r\n                virtual: 0,\r\n                settlement: 'cash',\r\n                budget: '',\r\n                skills: [],\r\n                files: [],\r\n                cover_id: null,\r\n            },\r\n            id: null,\r\n            categories: null,\r\n            subCategories: null,\r\n            skills: null,\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n    }\r\n\r\n    validator() {\r\n        return new FormValidator([\r\n            { field: 'category_id', method: 'isEmpty', validWhen: false, message: 'category is required.' },\r\n            { field: 'title', method: 'isEmpty', validWhen: false, message: 'Title is required.' },\r\n            { field: 'description', method: 'isEmpty', validWhen: false, message: 'Description is required.' },\r\n            { field: 'budget', method: 'isEmpty', validWhen: budgetValid, message: 'Budget is required.' },\r\n            { field: 'skills', method: 'isEmpty', validWhen: false, message: 'Skills is required.' },\r\n        ]);\r\n    };\r\n\r\n    componentWillMount() {\r\n        const { dispatch, id, categories, skills, formField, } = this.props;\r\n        Object.getOwnPropertyNames(categories).length === 0 && dispatch(defaultActions.categories());\r\n        Object.getOwnPropertyNames(skills).length === 0 && dispatch(defaultActions.skills());\r\n        this.setState({ id: (id ? id : null) });\r\n        if(id) {\r\n            const html = formField.description;\r\n            const contentBlock = htmlToDraft(html);\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            const editorState = EditorState.createWithContent(contentState);\r\n            this.setState({ formField: {\r\n                category_id: formField.category_id,\r\n                subcategory_id: formField.subcategory_id,\r\n                title: formField.title,\r\n                description: editorState,\r\n                virtual: formField.virtual,\r\n                settlement: formField.settlement,\r\n                budget: formField.budget,\r\n                skills: formField.skills,\r\n                files: formField.files,\r\n                cover_id: formField.cover_id,\r\n            } });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = (e.target.selectedOptions && e.target.name === 'skills') ?\r\n            Array.from(e.target.selectedOptions, (item) => item.value) :\r\n            e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleChangeVirtual = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        if(parseInt(e.target.value) === parseInt(0)) {\r\n            console.log(e.target.value);\r\n            confirmAlert({\r\n                title: null,\r\n                message: `You can only post a service that you can perform virtually. Thank you.`,\r\n                buttons: [\r\n                    {\r\n                        label: 'Yes',\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    }\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        //formField[name] = (name === 'skills') ? item.map(el => el.value) : item.value;\r\n        formField[name] = item;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSelectSkills = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        let id = [];\r\n        item && item.forEach(el => {\r\n            const index = item.findIndex(f => f.value === el.value);\r\n            if (index !== -1) {\r\n                id[index] = el.value;\r\n            } else {\r\n                id.push(el.value);\r\n            }\r\n        });\r\n        formField[name] = id;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    onCover = (id) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['cover_id'] = id;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    onEditorStateChange = (description) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['description'] = description;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n\r\n        if (validation.isValid) {\r\n            const { dispatch, upload } = this.props;\r\n            let filesArr = upload.files ? upload.files : [];\r\n            formField.files = fileManupulate(filesArr, this.state.formField.files, this.state.id);\r\n            formField.category_id = (formField.subcategory_id && formField.subcategory_id.value) ? formField.subcategory_id.value : formField.category_id.value;\r\n            //formField.skills = formField.skills;\r\n            formField.cover_id = (formField.cover_id !== null) ? formField.cover_id : (formField.files.length > 0) ? formField.files[0] : null;\r\n            formField.description = draftToHtml(convertToRaw(formField.description.getCurrentContent()));\r\n            const params = (this.state.id === null) ? null : { item_id: this.state.id };\r\n            //console.log(\"formField\", formField);\r\n            dispatch(userActions.service(\"POST\", { userService: formField }, params));\r\n            history.push('/service/success');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { categories, skills, upload } = this.props;\r\n        const { id, formField, submitted, validation } = this.state;\r\n        let categoriesArr = categories.data ? categories.data.filter(item => (item.parent_id === null || item.parent_id === '')) : [];\r\n        let skillsArr = skills.data ? skills.data : [];\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        let subCategories = categories.data && formField.category_id.value && categories.data.filter(el => (el.parent_id === formField.category_id.value));\r\n        // if (formField && formField.settlement === 'exchange') {\r\n        //     budgetValid = true;\r\n        // }\r\n        return (<div className=\"row\">\r\n\r\n            <div className=\"col-12\">\r\n                <div className=\"heading mb-xl-3 mb-2\">\r\n                    <h1 className=\"text-center font-weight-bold\">Post a Service</h1>\r\n                </div>\r\n                <div className=\"wizard\">\r\n                    <div className=\"wizard-inner\">\r\n                        <ul className=\"nav nav-tabs d-flex justify-content-around\">\r\n                            <li className=\"nav-item\" style={{ width: '50%' }}>\r\n                                <Link className=\"nav-link\" to=\"service_overview\" smooth={true} duration={1000}>\r\n                                    <span className=\"round-tab\">1</span>\r\n                                    <span className=\"text\">Service Overview</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\" style={{ width: '50%' }}>\r\n                                <Link className=\"nav-link\" to=\"upload_portfolio\" smooth={true} duration={1000}>\r\n                                    <span className=\"round-tab\">2</span>\r\n                                    <span className=\"text\">Upload Portfolio</span>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <form name=\"service\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                        <Element className=\"card custom-card\" name=\"service_overview\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"pb-0 pb-lg-4\">1. Service Overview</h3>\r\n                                <div className=\"form-group\">\r\n                                    <label>Service Title\r\n                                        <OverlayTrigger placement={'top'} overlay={<Tooltip>Service Title</Tooltip>}>\r\n                                            <span className=\"question text-light ml-2\"><i className=\"far fa-question-circle\"></i></span>\r\n                                        </OverlayTrigger>\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"title\" value={formField.title}\r\n                                        onChange={this.handleChange}\r\n                                        className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')} />\r\n                                    {submitted && isValid.title.isInvalid &&\r\n                                        <div className=\"invalid-feedback\"> {isValid.title.message} </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Service Description\r\n                                        <OverlayTrigger placement={'top'} overlay={<Tooltip>Service Description</Tooltip>}>\r\n                                            <span className=\"question text-light ml-2\"><i className=\"far fa-question-circle\"></i></span>\r\n                                        </OverlayTrigger>\r\n                                    </label>\r\n                                    <Editor\r\n                                        editorState={formField.description}\r\n                                        wrapperClassName={'srcEtrStyle ' + (submitted && isValid.description.isInvalid ? 'is-invalid' : '')}\r\n                                        editorClassName=\"services-editor\"\r\n                                        toolbarOnFocus\r\n                                        toolbar={{\r\n                                            options: ['inline', 'blockType', 'list', 'textAlign'],\r\n                                            inline: {\r\n                                                inDropdown: false,\r\n                                                className: undefined,\r\n                                                component: undefined,\r\n                                                dropdownClassName: undefined,\r\n                                                subscript: undefined\r\n                                            },\r\n                                        }}\r\n                                        onEditorStateChange={this.onEditorStateChange}\r\n                                    />\r\n                                    {submitted && isValid.description.isInvalid && <div className=\"invalid-feedback\"> {isValid.description.message}</div>}\r\n\r\n                                </div>\r\n                                {categoriesArr && <div className=\"form-group\">\r\n                                    <label>Select Category</label>\r\n                                    {((formField.category_id && id) || (id === null)) && <Select\r\n                                        className={\"multiple-select mb-2 \" + (submitted && isValid.category_id.isInvalid ? 'is-invalid' : '')}\r\n                                        classNamePrefix=\"multi\"\r\n                                        isSearchable\r\n                                        defaultValue={formField.category_id}\r\n                                        name=\"category_id\"\r\n                                        onChange={this.handleSelect}\r\n                                        options={categoriesArr.map(item => ({ value: item.id, label: item.name })\r\n                                        )} />}\r\n                                    {submitted && isValid.category_id.isInvalid &&\r\n                                        <div className=\"invalid-feedback\"> {isValid.category_id.message} </div>\r\n                                    }\r\n                                </div>}\r\n\r\n                                {subCategories && <div className=\"form-group\">\r\n                                    <label>Select Sub-Category</label>\r\n                                    {<Select\r\n                                        className=\"multiple-select mb-2\"\r\n                                        classNamePrefix=\"multi\"\r\n                                        isSearchable\r\n                                        defaultValue={formField.subcategory_id}\r\n                                        name=\"subcategory_id\"\r\n                                        onChange={this.handleSelect}\r\n                                        options={subCategories.map(item => ({ value: item.id, label: item.name }))} />}\r\n                                    {submitted && isValid.category_id.isInvalid &&\r\n                                        <div className=\"invalid-feedback\"> {isValid.category_id.message} </div>}\r\n                                </div>}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Will you be able to perform this service virtually?</label>\r\n                                    <div className=\"w-100\">\r\n                                        <Form.Check custom inline label=\"Yes\" type=\"radio\"\r\n                                            name=\"virtual\"\r\n                                            defaultChecked={(formField.virtual === 1)}\r\n                                            id=\"service-virtual-1\" value={1}\r\n                                            onChange={this.handleChangeVirtual} />\r\n                                        <Form.Check custom inline label=\"No\" type=\"radio\"\r\n                                            name=\"virtual\"\r\n                                            defaultChecked={(formField.virtual === 0)}\r\n                                            id=\"service-virtual-0\" value={0}\r\n                                            onChange={this.handleChangeVirtual} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Payment preference</label>\r\n                                    <div className=\"w-100\">\r\n                                        <Form.Check custom inline label=\"Both\" type=\"radio\"\r\n                                            name=\"settlement\"\r\n                                            defaultChecked={(formField.settlement === 'both')}\r\n                                            id=\"service-settlement-both\" value={'both'}\r\n                                            onChange={this.handleChange} />\r\n\r\n                                        <Form.Check custom inline label=\"Cash\" type=\"radio\"\r\n                                            name=\"settlement\"\r\n                                            defaultChecked={(formField.settlement === 'cash')}\r\n                                            id=\"service-settlement-cash\" value={'cash'}\r\n                                            onChange={this.handleChange} />\r\n                                        <Form.Check custom inline label=\"Exchange\" type=\"radio\"\r\n                                            name=\"settlement\"\r\n                                            defaultChecked={(formField.settlement === 'exchange')}\r\n                                            id=\"service-settlement-exchange\" value={'exchange'}\r\n                                            onChange={this.handleChange} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Service Price\r\n                                        <OverlayTrigger placement={'top'} overlay={<Tooltip>Service Price</Tooltip>}>\r\n                                            <span className=\"question text-light ml-2\"><i className=\"far fa-question-circle\"></i></span>\r\n                                        </OverlayTrigger>\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"budget\" value={formField.budget} placeholder=\"0.00\"\r\n                                        onChange={this.handleChange}\r\n                                        className={'form-control ' + (submitted && isValid.budget.isInvalid ? 'is-invalid' : '')} />\r\n                                    {submitted && isValid.budget.isInvalid &&\r\n                                        <div className=\"invalid-feedback\"> {isValid.budget.message} </div>\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"select-multiple-chip\">Skills\r\n                                        <OverlayTrigger placement={'top'} overlay={<Tooltip>Service Skills</Tooltip>}>\r\n                                            <span className=\"question text-light ml-2\">\r\n                                                <i className=\"far fa-question-circle\"></i>\r\n                                            </span>\r\n                                        </OverlayTrigger>\r\n                                    </label>\r\n                                    <FormControl className=\"w-100\">\r\n                                        {((((formField.skills !== null && (formField.skills.length > 0 || formField.skills.length === 0))) && id) || (id === null)) &&\r\n                                            <Select\r\n                                                className={'multiple-select mb-2 ' + (submitted && isValid.skills.isInvalid ? 'is-invalid' : '')}\r\n                                                classNamePrefix=\"multi\"\r\n                                                isSearchable isMulti\r\n                                                defaultValue={formField.skills}\r\n                                                name=\"skills\"\r\n                                                onChange={this.handleSelectSkills}\r\n                                                options={skillsArr.map(item => ({ value: item.id, label: item.name }))} />}\r\n                                        {submitted && isValid.skills.isInvalid &&\r\n                                            <div className=\"invalid-feedback d-block\"> {isValid.skills.message} </div>\r\n                                        }\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </Element>\r\n\r\n                        <Element className=\"card custom-card\" name=\"upload_portfolio\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"pb-0 pb-lg-4\">2. Upload Portfolio</h3>\r\n                                <div className=\"info\">\r\n                                    Upload your portfolio, including pictures, videos, and supporting documents to provide more information about the service that you offer.\r\n                                </div>\r\n                                {/* <ul className=\"ul-inline\">\r\n                                    <li>Upload images JPGs, PNGs or GIF and Max size is XYZ MB (TBD)</li>\r\n                                    <li>Max you can upload upto 15 photos</li>\r\n                                    <li>Upload images mp4, Mov, Avi and Max size of each video (TBD)</li>\r\n                                    <li>Max you can upload upto 5 video</li>\r\n                                    <li>For the best view of images, upload minimum image size of 1000X1000 px</li>\r\n                                </ul> */}\r\n                                <FileUploader upload={upload} coverImage={(formField.cover_id ? formField.cover_id : true)} coverPhoto={this.onCover} accept={'.xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf, video/*'} />\r\n                            </div>\r\n                        </Element>\r\n                        <div className=\"action text-right\">\r\n                            {this.props.id ? <button type=\"submit\" className=\"btn btn-success px-lg-5\">Update Service</button> : <button type=\"submit\" className=\"btn btn-info px-lg-5\">Save Service</button>}\r\n\r\n                        </div>\r\n                    </form>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card card-instruction services\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Instruction</h5>\r\n                                <h6 className=\"sub-title\">1. What is “Service”?</h6>\r\n                                <p className=\"card-text\">Your service is what you as a freelancer offer to sell or exchange at JoBarter.</p>\r\n                                <hr/>\r\n                                <h6 className=\"sub-title\">2. Fill out the “Service” questionnaire</h6>\r\n                                <p className=\"card-text\">Explain thoroughly and concretely about the specific service you provide and how you intend to meet your clients’ needs. Upload additional information such as, video, pictures and related documents to better explain your expertise in this area.</p>\r\n                                <hr/>\r\n                                <h6 className=\"sub-title\">3. Post Multiple “Services”</h6>\r\n                                <p className=\"card-text\">You also have the option to post multiple services to give people options to either hire you or exchange services with them.</p>\r\n                                <hr/>\r\n                                <h6 className=\"sub-title\">4. Benefits for “Exchange Service”</h6>\r\n                                <p className=\"card-text\">Exchanging your services can help you receive more reviews, have a higher rate of getting hired, and save money.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst uploadSelector = createSelector(\r\n    state => state.upload,\r\n    upload => upload\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\n\r\nconst categoriesSelector = createSelector(\r\n    state => state.categories,\r\n    categories => categories\r\n);\r\n\r\nconst skillsSelector = createSelector(\r\n    state => state.skills,\r\n    skills => skills\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    uploadSelector,\r\n    categoriesSelector,\r\n    skillsSelector,\r\n    (process, upload, categories, skills) => ({\r\n        process, upload, categories, skills\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ServiceForm);\r\n","import React, {Component} from 'react';\r\nimport {Main} from '../../layout';\r\nimport ServiceForm from './partials/ServiceForm';\r\nimport StripeConnection from '../common/StripeConnection';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass ServiceCreate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { authentication } = this.props;\r\n        const { userProfile } = authentication.authentication.user;\r\n        const isStripeConnect = ((userProfile.strip_account_number === null) || (userProfile.strip_account_number === '') || (userProfile.strip_account_number === '0'));\r\n\r\n\r\n        return (\r\n            <Main>\r\n                <div className=\"create-service bg-body\">\r\n                    <div className=\"container\">\r\n                        { /* isStripeConnect ? <StripeConnection /> : <ServiceForm /> */}\r\n                        <ServiceForm />\r\n                    </div>\r\n                </div>\r\n\r\n            </Main>);\r\n    }\r\n}\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst uploadSelector = createSelector(\r\n    state => state.upload,\r\n    upload => upload\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector,\r\n    processSelector,\r\n    uploadSelector,\r\n\r\n    (authentication, process, upload) => ({\r\n        authentication, process, upload\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ServiceCreate);\r\n\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass StripeConnection  extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"create-service bg-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10 col-12 mx-auto\">\r\n                            <div className=\"card custom-card success-service py-md-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"image mb-3\">\r\n                                        <img src=\"/images/success1.PNG\" alt=\"\" className=\"img-fluid\" />\r\n                                    </div>\r\n                                    <h2>Your Stripe account is not connected yet.</h2>\r\n                                    <p>Please provide your Stripe account information before posting a service.</p>\r\n                                    <p className=\"mb-0\"><NavLink to={'/setting/stripe-connect'} className=\"btn btn-primary text-uppercase px-3 active font-weight-bold\">Go to Stripe Connection</NavLink></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StripeConnection;\r\n","import React, { Component } from 'react';\r\n\r\nclass NonAuthoritative extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>203 Non-Authoritative Information</h1>\r\n                        <div className=\"alert alert-danger\">Non-Authoritative Information.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NonAuthoritative;\r\n","import React, { Component } from 'react';\r\n\r\nclass BadRequest extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1> Bad Request (#400)</h1>\r\n                        <div className=\"alert alert-danger\">Page not found.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BadRequest;\r\n","import React, {Component} from 'react';\r\nimport {Main} from '../../layout';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport { uploadSelectors } from \"../../../common/redux/selectors\";\r\nimport { globalService as gs, itemService} from \"../../../common/services\";\r\nimport ServiceForm from './partials/ServiceForm';\r\nimport {NonAuthoritative} from \"../Exceptions\";\r\nimport { FormLoader } from '../../../common/loaders';\r\n\r\n\r\nclass ServiceUpdate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        const {dispatch} = this.props;\r\n        const id = this.props.match.params.id;\r\n        this.setState({id: id});\r\n        this.setState({ loading: true });\r\n        id && itemService.service(\"GET\", null, {item_id: id}).then(res => {\r\n            if (gs.isOwner(res.model.user_id)) {\r\n                let media = res.model.media;\r\n                let skills = res.model.skills.map(item => ({value: item.id, label: item.title}));\r\n                let category_id = {value: res.model.category.id, label: res.model.category.title};\r\n                let subcategory_id = null;\r\n                if (res.model.category.parent) {\r\n                    category_id = {value: res.model.category.parent.id, label: res.model.category.parent.title};\r\n                    subcategory_id = {value: res.model.category.id, label: res.model.category.title};\r\n                }\r\n                this.setState({\r\n                    formField: {\r\n                        category_id: category_id,\r\n                        subcategory_id: subcategory_id,\r\n                        title: res.model.title,\r\n                        description: res.model.description,\r\n                        virtual: res.model.virtual,\r\n                        settlement: res.model.settlement,\r\n                        budget: res.model.budget,\r\n                        skills: skills,\r\n                        cover_id: res.model.cover_id,\r\n                        files: media.image && media.image.map(file => file.id)\r\n                            .concat(media.video && media.video.map(file => file.id))\r\n                            .concat(media.docs && media.docs.map(file => file.id)),\r\n                    }\r\n                });\r\n                dispatch(uploadSelectors.respond(res.model.media));\r\n                this.setState({ loading: false });\r\n            } else {\r\n                this.setState({ formField: null, loading: false });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { id, formField, loading } = this.state;\r\n        console.log(formField);\r\n\r\n        return (\r\n            <Main>\r\n                <div className=\"create-service bg-body\">\r\n                    <div className=\"container\">\r\n                        {loading ? <FormLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={4} width={700} /> : (formField ? <ServiceForm id={id} formField={formField} /> : <NonAuthoritative />)}\r\n                    </div>\r\n                </div>\r\n            </Main>);\r\n    }\r\n}\r\n\r\nconst uploadSelector = createSelector(\r\n    state => state.upload,\r\n    upload => upload\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    uploadSelector,\r\n    (upload) => ({\r\n        upload\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ServiceUpdate);\r\n","import React, { Component } from 'react';\r\n\r\nclass NotAcceptable extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1> 406 Not Acceptable</h1>\r\n                        <div className=\"alert alert-danger\">Not Acceptable.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotAcceptable;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1> 404 Not Found </h1>\r\n                        <div className=\"alert alert-danger\">Page not found.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotImplemented extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>501 Not Implemented</h1>\r\n                        <div className=\"alert alert-danger\">Not Implemented.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotImplemented;\r\n","import React, { Component } from 'react';\r\n\r\nclass ServiceUnavailable extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>503 Service Unavailable</h1>\r\n                        <div className=\"alert alert-danger\">Service Unavailable.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ServiceUnavailable;\r\n","import React, { Component } from 'react';\r\n\r\nclass UpgradeRequired extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>426 Upgrade Required</h1>\r\n                        <div className=\"alert alert-danger\">Upgrade Required.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpgradeRequired;\r\n","import React, { Component } from 'react';\r\n\r\nclass ExpectationFailed extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>417 Expectation Failed</h1>\r\n                        <div className=\"alert alert-danger\">Expectation Failed.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpectationFailed;\r\n","import React, { Component } from 'react';\r\n\r\nclass UnprocessableEntity extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"not-found my-4 float-left w-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>422 Unprocessable Entity</h1>\r\n                        <div className=\"alert alert-danger\">Unprocessable Entity.</div>\r\n                        <p>The above error occurred while the Web server was processing your request.</p>\r\n                        <p>Please contact us if you think this is a server error. Thank you.</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UnprocessableEntity;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Main } from \"../../layout\";\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { serviceActions, userActions } from \"../../../common/redux/actions\";\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { DocumentTitle } from \"../../../helpers/DocumentTitle\";\r\nimport { globalService as gs } from '../../../common/services';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { alertSelectors } from '../../../common/redux/selectors';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\n//const deactive = 0;\r\n\r\nclass ServiceListing extends Component {\r\n\r\n    componentWillMount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(serviceActions.index(\"GET\", null, { user_id: gs.identity.user.id }));\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(serviceActions.clear());\r\n    }\r\n\r\n    deactiveService = (item, action) => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            //title: `Please confirm to ${action} `,\r\n            message: `${action}`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n                        dispatch(userActions.service(\"POST\", { userService: { status: (item.status === 1) ? 0 : 1 } }, { item_id: item.id }));\r\n                        dispatch(serviceActions.index(\"GET\", null, { user_id: gs.identity.user.id }));\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        const { services, process } = this.props;\r\n        let results = services.data ? services.data : [];\r\n\r\n        return (<Main>\r\n            <DocumentTitle title={'My Services'} />\r\n            <div className=\"my-services bg-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-3\">\r\n                            <h1 className=\"d-flex heading\">\r\n                                <span className=\"col pl-0\">My Services</span>\r\n                                <Link to=\"/service/create\" className=\"btn btn-info headingButton\">Post a Service</Link>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {process.loading ? <div className=\"card service-box\"><div className=\"card-body\"><div className=\"d-flex justify-content-center\"><div className=\"spinner-border text-info\"><span className=\"sr-only\">Loading...</span></div></div></div></div> :\r\n                                <Fragment>\r\n                                    {results.items && results.items.map((item) =>\r\n                                        // <div className=\"card service-box\" key={item.id}>\r\n                                        //     <div className=\"card-body\">\r\n                                        //         <h5 className=\"card-title\">\r\n                                        //              <Link to={`/service/view/${item.id}`}>{item.title}</Link>\r\n                                        //         </h5>\r\n                                        //         <div className=\"d-flex align-items-center flex-wrap\">\r\n                                        //             <div className=\"col pl-0 d-flex align-items-center\">\r\n                                        //                 <div className=\"category text-truncate\">\r\n                                        //                     <span>{item.skills && item.skills.map((skill) => skill.title).join(\", \")}</span>\r\n                                        //                 </div>\r\n                                        //                 <div className=\"sold text-nowrap\">{(item.proposal_count === 0) ? 'Not Booked' : `${item.proposal_count} Times Booked`} </div>\r\n                                        //                 <div className=\"price text-nowrap\">{(item.budget === null) ? <small>Not Set</small> : `$${item.budget}`}</div>\r\n                                        //                 <div className=\"ratings d-flex align-items-center\">\r\n                                        //                     {(parseFloat(item.avg_rating) !== 0) && <small>({parseFloat(item.avg_rating)})</small>}\r\n                                        //                     <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                        //                         <Rating value={ parseFloat(item.avg_rating) } readOnly />\r\n                                        //                     </Box>\r\n                                        //                     {(item.proposal_count !== 0) && <small className=\"count\">{item.proposal_count}</small>}\r\n                                        //                 </div>\r\n\r\n                                        //                 <div className={`status badge badge-${(item.status === 0) ? 'info' : `primary`} ml-3`}>{(item.status === 0) ? 'Deactivated' : `Activated`} </div>\r\n                                        //             </div>\r\n                                        //             {gs.isOwner(item.user_id) && <div className=\"auction d-flex align-items-center\">\r\n                                        //                 {item.received_offers ? <div className=\"offer \">\r\n                                        //                     <Link className=\"btn btn-sm btn-outline-primary\" to={`/service/view/${item.id}`}>Offers Received ({item.received_offers})</Link>\r\n                                        //                 </div> : '' }\r\n                                        //                 <Dropdown className=\"button\">\r\n                                        //                     <Dropdown.Toggle as=\"button\" className=\"btn btn-link\">\r\n                                        //                         <i className=\"fas fa-ellipsis-v\"></i>\r\n                                        //                     </Dropdown.Toggle>\r\n                                        //                     <Dropdown.Menu>\r\n                                        //                         <Link className=\"dropdown-item\" to={`/service/update/${item.id}`}>Update</Link>\r\n                                        //                         { (item.status === 1) && <button className=\"dropdown-item\" onClick={() => this.deactiveService(item, 'Are you sure you want to temporarily deactivate this servicer?')}>Deactivate</button> }\r\n                                        //                         { (item.status === 0) && <button className=\"dropdown-item\" onClick={() => this.deactiveService(item, 'Are you sure you want to reactivate this service?')}>Activate</button> }\r\n                                        //                     </Dropdown.Menu>\r\n                                        //                 </Dropdown>\r\n                                        //             </div>\r\n                                        //             }\r\n                                        //         </div>\r\n                                        //     </div>\r\n                                        // </div>\r\n\r\n                                        <div className=\"col-md-3\" key={item.id}>\r\n                                            <div className=\"svcsLBox w-100 float-left\">\r\n                                                <div className=\"image\">\r\n                                                    <div className=\"serviceOverlayer\">\r\n\r\n                                                    </div>\r\n                                                    <Link to={`/service/view/${item.id}`} className=\"bg-image\">\r\n                                                        <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.cover} effect=\"blur\" />\r\n                                                    </Link>\r\n                                                    <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                                        {(item.is_favorite) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                                            <i className=\"far fa-heart\"></i>}\r\n                                                    </IconButton>\r\n                                                    <Dropdown className=\"button DropDownDots\">\r\n                                                        <Dropdown.Toggle as=\"button\" className=\"btn btn-link\">\r\n                                                            <IconButton style={{ width: \"100%\" }}>\r\n                                                                <i class=\"fas fa-ellipsis-v\"></i>\r\n                                                            </IconButton>\r\n                                                        </Dropdown.Toggle>\r\n                                                        <Dropdown.Menu>\r\n                                                            <Link className=\"dropdown-item\" to={`/service/update/${item.id}`}>Update</Link>\r\n                                                            {(item.status === 1) && <button className=\"dropdown-item\" onClick={() => this.deactiveService(item, 'Are you sure you want to temporarily deactivate this servicer?')}>Deactivate</button>}\r\n                                                            {(item.status === 0) && <button className=\"dropdown-item\" onClick={() => this.deactiveService(item, 'Are you sure you want to reactivate this service?')}>Activate</button>}\r\n                                                        </Dropdown.Menu>\r\n                                                    </Dropdown>\r\n                                                </div>\r\n                                                <div className=\"caption w-100 float-left\">\r\n                                                    <h3 className=\"text-truncate\" title={item.title}><Link to={`/service/view/${item.id}`}>{item.title}</Link>\r\n                                                        <p className={`status badge badge-${(item.status === 0) ? 'info' : `primary`} ml-3`}>{(item.status === 0) ? 'Deactivated' : `Activated`} </p>\r\n                                                    </h3>\r\n                                                    {item.sold_count ? <div className=\"service\">{item.sold_count} Service Sold</div> : ''}\r\n                                                    <div className=\"ratings d-flex align-items-center\">\r\n                                                        <small>({item.avg_rating})</small>\r\n                                                        <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                            <Rating value={Math.floor(item.avg_rating)} readOnly />\r\n                                                        </Box>\r\n                                                        {(item && item.count_rating !== 0) && <small className=\"count\">{item.count_rating}</small>}\r\n                                                    </div>\r\n                                                    {/* <div className=\"profile d-flex align-items-center\">\r\n                                        <div className=\"img pr-2\">\r\n                                            <NavLink to={`/user/public/about/${item.user.id}`}><img src={item.user.avatar} className=\"img-fluid rounded-circle\" width=\"32\" height=\"32\" alt=\"\" /></NavLink>\r\n                                        </div>\r\n                                        <div className=\"caption\">\r\n                                            <h6 className=\"mb-0\"> <NavLink to={`/user/public/about/${item.user.id}`}>{item.user.name}</NavLink></h6>\r\n                                            <p className=\"mb-0\"><small>\r\n                                                {item.user && item.user.countryCode && item.user.countryCode.name}\r\n                                            </small></p>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                                    <div class=\"col-lg-12 abc\">\r\n                                                        <div class=\"pull-left\">\r\n                                                            <NavLink to=\"#\">\r\n                                                                {item.user.avatar ?\r\n                                                                    <img class=\"img-responsive\" src={item.user.avatar} alt=\"Image\" />\r\n                                                                    : \"\"}\r\n                                                            </NavLink>\r\n                                                        </div>\r\n                                                        <h5> {item.user.name} </h5>\r\n                                                        <p><i className=\"fas fa-map-marker-alt icon-color\"></i> {item.user.countryCode && item.user.countryCode.name}</p>\r\n                                                        {item.received_offers ?\r\n                                                            <Link className=\"offer\" to={`/service/view/${item.id}`}>Offers ({item.received_offers})</Link>\r\n                                                            : ''}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    )}\r\n                                    {(results.items && results.items.length === 0) &&\r\n                                        <div className=\"card service-box\">\r\n                                            <div className=\"card-body text-center\">\r\n                                                <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                                    <div className=\"inner\">\r\n                                                        <figure>\r\n                                                            <img src=\"/images/not-found/My-Services.png\" alt=\"Not found\" width=\"100\" />\r\n                                                        </figure>\r\n                                                        <h5>You have not created any services yet</h5>\r\n                                                        <p className=\"title\">This is where you’ll be able to track all the services you created</p>\r\n                                                        <p className=\"mb-1\"><Link className=\"btn btn-link text-uppercase\" to=\"/service-search\">Find Services</Link></p>\r\n                                                        <p className=\"mb-2\"><b>OR</b></p>\r\n                                                        <p><Link className=\"btn btn-primary\" to=\"/service/create\">Post First Service</Link></p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </Fragment>\r\n                            }\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-12\">\r\n\r\n                            {/* <div className=\"card button\">\r\n                                <div className=\" d-flex align-items-center\">\r\n                                    <div className=\"col pl-0\">Update all the letest changes made by you, by just cliking on \"Save Changes\" button.</div>\r\n                                    <button type=\"submit\" className=\"btn btn-info\">Save Changes</button>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst serviceSelector = createSelector(\r\n    state => state.services,\r\n    services => services\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    serviceSelector,\r\n    (process, services) => ({\r\n        process,\r\n        services\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ServiceListing);\r\n","import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Fab } from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\nimport { proposalActions } from '../../../../common/redux/actions';\r\n\r\nclass ContractDeclined extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                comment: '',\r\n                status: ''\r\n            },\r\n            open: false,\r\n            item: null,\r\n            validation: this.validator().valid(),\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._mount();\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this._mount();\r\n    }\r\n\r\n    _mount = () => {\r\n        const { open, item } = this.props;\r\n        let { formField } = this.state;\r\n        if (item) {\r\n            this.setState({ id: item.id, open, item, formField });\r\n        }\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'comment', method: 'isEmpty', validWhen: false, message: 'Decline reason is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = (e.target.selectedOptions && e.target.name === 'settlement') ?\r\n            Array.from(e.target.selectedOptions, (item) => item.value) :\r\n            e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.declinedClose();\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { id, formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n\r\n        if (validation.isValid) {\r\n            const { dispatch, } = this.props;\r\n            const params = {};\r\n            const param = { proposal_id: id };\r\n            params.comment = formField.comment;\r\n            params.status = 2;\r\n            dispatch(proposalActions.proposal(\"POST\", { userProposal: params }, param));\r\n            this.setState(this.initializeState);\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { open } = this.props;\r\n        const { formField, item, servicesList,submitted, validation } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n                className=\"offer-dialog\">\r\n                <DialogTitle><span className=\"text-primary\">Decline Offer</span>\r\n                    <Fab color=\"inherit\" onClick={this.handleClose}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </Fab>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form name=\"proposal\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                        {item && item.settlement === 'both' && <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-radio mb-2\">\r\n                                <input type=\"radio\"\r\n                                    name=\"settlement\"\r\n                                    checked={(formField.settlement === 'cash')}\r\n                                    id=\"settlement-cash\" value={'cash'}\r\n                                    onChange={this.handleChange}\r\n                                    className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"settlement-cash\">Cash</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input type=\"radio\"\r\n                                    name=\"settlement\"\r\n                                    checked={(formField.settlement === 'exchange')}\r\n                                    id=\"settlement-exchange\" value={'exchange'}\r\n                                    onChange={this.handleChange}\r\n                                    className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"settlement-exchange\">Exchange</label>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        {(formField.settlement === 'cash') && <div className=\"form-group\">\r\n                            <label>Enter Amount</label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"number\" className=\"form-control\" name=\"price\" placeholder=\"Amount\" onChange={this.handleChange} />\r\n                                <div className=\"input-group-append\">\r\n                                    <span className=\"input-group-text\">$</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        {servicesList && (formField.settlement === 'exchange') && <div className=\"form-group\">\r\n                            <label>Select Services</label>\r\n                            <Select\r\n                                className=\"multiple-select mb-2\"\r\n                                classNamePrefix=\"multi\"\r\n                                isSearchable isMulti\r\n                                defaultValue={formField.services}\r\n                                name=\"services\"\r\n                                onChange={this.handleSelect}\r\n                                options={servicesList.map(item => ({ value: item.id, label: item.title }))} />\r\n                        </div>}\r\n\r\n                        <div className=\"form-group\">\r\n                            {/*<label>Decline Reason</label>*/}\r\n                            <textarea className={'form-control ' + (submitted && isValid.comment.isInvalid ? 'is-invalid' : '')} placeholder=\"Decline Reason\" onChange={this.handleChange}\r\n                                name=\"comment\" rows={3} />\r\n                                {submitted && isValid.comment.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.comment.message} </div>\r\n                                }\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"pb-3\">\r\n                    <button className=\"btn btn-info\" onClick={this.handleSubmit} autoFocus>Submit</button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ContractDeclined);","import React, { Component, Fragment } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Fab } from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\nimport { proposalActions } from '../../../../common/redux/actions';\r\nimport { globalService as gs } from '../../../../common/services';\r\nimport { ModuleHelper } from '../../../../helpers/module.helper';\r\nimport FileUploader from \"../../common/FileUploader\";\r\nimport { fileManupulate } from \"../../../../helpers/file.helper\";\r\nvar validSettlement = true;\r\nvar validService = true;\r\nvar validBudget = true;\r\n\r\nclass PlaceOffer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                settlement: null,\r\n                services: [],\r\n                budget: '',\r\n                comment: '',\r\n                recipients: [],\r\n                answers: [],\r\n                status: '',\r\n                any_questions: '',\r\n                files: []\r\n            },\r\n            modelTitle: null,\r\n            open: false,\r\n            servicesList: null,\r\n            item: null,\r\n            item_id: null,\r\n            validForm: true,\r\n            validation: this.validator().valid(),\r\n        };\r\n        this.initializeState = this.state;\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this._mount();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._mount();\r\n    }\r\n\r\n    _mount = () => {\r\n        const { open, item_id, moduleId, item, title, servicesList } = this.props;\r\n        let { formField } = this.state;\r\n        if (item) {\r\n            formField['settlement'] = (formField.settlement === null) ? item.settlement : formField.settlement;\r\n            formField['moduleId'] = moduleId;\r\n            formField['item_id'] = item_id;\r\n            const isOwner = gs.isOwner(item.user_id);\r\n            const isLogged = gs.isOwner(gs.identity.user.id);\r\n            const provider_id = isLogged && !isOwner ? gs.identity.user.id : null;\r\n            this.setState({ open, item_id, moduleId, item, servicesList, modelTitle: title, formField, provider_id });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'settlement', method: 'isEmpty', validWhen: false, message: 'Service Settlement is required.' },\r\n            { field: 'comment', method: 'isEmpty', validWhen: false, message: 'proposal description is required.' },\r\n            { field: 'budget', method: 'isEmpty', validWhen: validBudget, message: 'Budget is required.' },\r\n            { field: 'services', method: 'isEmpty', validWhen: validService, message: 'Services is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleAnswer = (e) => {\r\n        let { formField } = this.state;\r\n        let index = formField.answers && formField.answers.length > 0 && formField.answers.findIndex(item => (item.question_id === e.target.name));\r\n        if (index !== -1 && index !== false && index !== undefined && index >= 0) {\r\n            formField.answers[index].answer = e.target.value\r\n        } else {\r\n            formField.answers.push({ question_id: e.target.name, answer: e.target.value })\r\n        }\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        let id = [];\r\n        item && item.forEach(el => {\r\n            const index = item.findIndex(f => f.value === el.value);\r\n            if (index !== -1) {\r\n                id[index] = el.value;\r\n            } else {\r\n                id.push(el.value);\r\n            }\r\n        });\r\n        formField[name] = id;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleClose = (event = null, type) => {\r\n        this.props.offerClose(event, type);\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField, item } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n\r\n        if (validation.isValid) {\r\n            const { dispatch, upload } = this.props;\r\n            let filesArr = upload.files ? upload.files : [];\r\n            const params = {};\r\n            params.files = fileManupulate(filesArr, this.state.formField.files);\r\n            params.settlement = formField.settlement;\r\n            params.budget = formField.budget;\r\n            params.services = formField.services;\r\n            params.comment = formField.comment;\r\n            params.provider_id = gs.identity.user.id;\r\n            params.action_by = gs.identity.user.id;\r\n            params.item_id = formField.item_id;\r\n            params.moduleId = formField.moduleId;\r\n            params.recipients = [gs.identity.user.id, item.user_id];\r\n            params.answers = formField.answers;\r\n            params.any_questions = formField.any_questions;\r\n            params.status = ModuleHelper.statuses().status_offers;\r\n            dispatch(proposalActions.proposal(\"POST\", { userProposal: params }));\r\n            this.setState(this.initializeState);\r\n            this.handleClose(null, { proposalStatus: true });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { open, upload, moduleId, buttonTitle, isJob } = this.props;\r\n        const { formField, item, servicesList, submitted, validation, modelTitle } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n\r\n        switch (formField.settlement) {\r\n            case 'exchange':\r\n                validService = false;\r\n                validBudget = true;\r\n                break;\r\n            case 'cash':\r\n                validService = true;\r\n                validBudget = false;\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n                className=\"offer-dialog\">\r\n                <DialogTitle><span className=\"text-primary\">{modelTitle}</span>\r\n                    <Fab color=\"inherit\" onClick={this.handleClose}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </Fab>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form name=\"proposal\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate style={{ minHeight: \"360px\", overflow: 'hidden' }}>\r\n                        {item && item.settlement === 'both' && <div className=\"form-group\">\r\n                            <label>How would you like to get paid for this {(ModuleHelper.UserService === moduleId) ? 'service' : 'job'}?</label>\r\n                            <div className=\"custom-control custom-radio mb-2\">\r\n                                <input type=\"radio\"\r\n                                    name=\"settlement\"\r\n                                    checked={(formField.settlement === 'cash')}\r\n                                    id=\"settlement-cash\" value={'cash'}\r\n                                    onChange={this.handleChange}\r\n                                    className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"settlement-cash\">Cash</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input type=\"radio\"\r\n                                    name=\"settlement\"\r\n                                    checked={(formField.settlement === 'exchange')}\r\n                                    id=\"settlement-exchange\" value={'exchange'}\r\n                                    onChange={this.handleChange}\r\n                                    className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"settlement-exchange\">Exchange</label>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        {(formField.settlement === 'cash') && <div className=\"form-group\">\r\n                            <label>How much would you like to get paid for this {(ModuleHelper.UserService === moduleId) ? 'service' : 'job'}? </label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"number\" className={'form-control ' + (submitted && isValid.comment.isInvalid ? 'is-invalid' : '')} name=\"budget\" placeholder={`${item.budget ? item.budget : 0} ${(item.type === 'fixed') ? ' /Fixed' : ' / Hourly rate'}`} onChange={this.handleChange} />\r\n                                <div className=\"input-group-append ml-0\">\r\n                                    <span className=\"input-group-text mr-1\">$</span>\r\n                                </div>\r\n                            </div>\r\n                            {submitted && isValid.budget.isInvalid &&\r\n                                <div className={'invalid-feedback ' + (submitted && isValid.budget.isInvalid ? 'd-block' : '')}> {isValid.budget.message} </div>\r\n                            }\r\n                        </div>}\r\n\r\n                        {((servicesList) && (formField.settlement === 'exchange')) && <div className=\"form-group\">\r\n                            <label>Select a service as a payment in exchange for your work</label>\r\n                            <Select\r\n                                className={\"multiple-select mb-2 \" + (submitted && isValid.services.isInvalid ? 'is-invalid' : '')}\r\n                                classNamePrefix=\"multi\"\r\n                                isMulti\r\n                                defaultValue={formField.services}\r\n                                name=\"services\"\r\n                                onChange={this.handleSelect}\r\n                                options={servicesList.map(item => ({ value: item.id, label: item.title }))} />\r\n                            {submitted && isValid.services.isInvalid &&\r\n                                <div className={'invalid-feedback ' + (submitted && isValid.services.isInvalid ? 'd-block' : '')}> {isValid.services.message} </div>\r\n                            }\r\n                        </div>}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>{(ModuleHelper.UserService === moduleId) ? 'Message' : 'Job proposal description'} </label>\r\n                            <textarea className={'form-control ' + (submitted && isValid.comment.isInvalid ? 'is-invalid' : '')} placeholder=\"Message ...\" onChange={this.handleChange}\r\n                                name=\"comment\" rows={3} />\r\n                            {submitted && isValid.comment.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.comment.message} </div>\r\n                            }\r\n                        </div>\r\n                        {isJob && <>\r\n                            <div className=\"form-group\">\r\n                                <label>Enter any inquiries that you have regarding this {(ModuleHelper.UserService === moduleId) ? 'service' : 'job'}?</label>\r\n                                <textarea className={'form-control'} placeholder=\"Any questions ...\" onChange={this.handleChange} name=\"any_questions\" rows={3} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <FileUploader upload={upload} coverImage={false} title=\"Attachment\" accept={'.xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf, video/*'} />\r\n                            </div>\r\n                        </>}\r\n\r\n                        {item && item.userItemQuestions && item.userItemQuestions.length > 0 && <Fragment>\r\n                            <h5>Questions by Job Provider</h5>\r\n                            {item.userItemQuestions.map((question, index) =>\r\n                                <div className=\"form-group\" key={`answers-${question.id}`}>\r\n                                    <div className=\"border-bottom\">\r\n                                        {/*<h5>Question {index + 1}</h5>*/}\r\n                                        <label>{question.question}</label>\r\n                                        <input type=\"text\" className=\"form-control\" name={question.id} placeholder=\"Answer ...\" onBlur={this.handleAnswer} />\r\n                                    </div>\r\n                                </div>)}\r\n                        </Fragment>}\r\n\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"pb-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={this.handleClose}>Cancel</button>\r\n                    <button className=\"btn btn-info\" onClick={this.handleSubmit} autoFocus>{buttonTitle}</button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n}\r\n\r\nconst uploadSelector = createSelector(\r\n    state => state.upload,\r\n    upload => upload\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    uploadSelector,\r\n    (process, upload) => ({\r\n        process, upload,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PlaceOffer);\r\n","import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Fab } from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { proposalActions } from '../../../../common/redux/actions';\r\nimport { globalService as gs, itemService } from '../../../../common/services';\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\nimport { ModuleHelper } from '../../../../helpers/module.helper';\r\n\r\nvar validService = true;\r\nvar validBudget = true;\r\n\r\nclass CounterOffer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                settlement: '',\r\n                services: [],\r\n                budget: '',\r\n                comment: '',\r\n                recipients: [],\r\n                status: ''\r\n            },\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n            open: false,\r\n            servicesList: null,\r\n            item: null,\r\n            item_id: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._mount();\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this._mount();\r\n    }\r\n\r\n    _mount = () => {\r\n        const { open, item } = this.props;\r\n        const { servicesList } = this.state;\r\n        let formField = { ...this.state.formField };\r\n        if (item) {\r\n            formField['settlement'] = item.settlement;\r\n            this.setState({ open, item, formField });\r\n            item && (servicesList === null) && itemService.service(\"GET\", null, { user_id: item.provider_id })\r\n                .then(response => (response.items && this.setState({ servicesList: response.items })))\r\n                .catch(exception => {\r\n                    console.log(exception);\r\n                });\r\n        }\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'settlement', method: 'isEmpty', validWhen: false, message: 'Service Settlement is required.' },\r\n            { field: 'comment', method: 'isEmpty', validWhen: false, message: 'Message is required.' },\r\n            { field: 'budget', method: 'isEmpty', validWhen: validBudget, message: 'Budget is required.' },\r\n            { field: 'services', method: 'isEmpty', validWhen: validService, message: 'Services is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = (e.target.selectedOptions && e.target.name === 'settlement') ?\r\n            Array.from(e.target.selectedOptions, (item) => item.value) :\r\n            e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.offerClose();\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n        if (validation.isValid) {\r\n            const { dispatch, item, status} = this.props;\r\n            const params = {};\r\n            const param = { proposal_id: item.id };\r\n            params.budget = formField.budget;\r\n            params.action_by   = gs.identity.user.id;\r\n            params.comment = formField.comment;\r\n            params.status = (status === ModuleHelper.statuses().status_bid) ? ModuleHelper.statuses().status_offers : ModuleHelper.statuses().status_counter_offers;\r\n            params.services = formField.services && formField.services.map(item => item.value);\r\n            param.userMessage = this.props.message(formField.comment);\r\n            dispatch(proposalActions.proposal(\"POST\", { userProposal: params }, param));\r\n            this.setState(this.initializeState);\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { open, moduleTitle, item } = this.props;\r\n        const { formField, servicesList, submitted, validation, } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n\r\n        if (formField.settlement === 'exchange') validService = false;\r\n        if (formField.settlement === 'cash') validBudget = false;\r\n\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n                className=\"offer-dialog\">\r\n    <DialogTitle><span className=\"text-primary\">{`${moduleTitle}`}</span>\r\n                    <Fab color=\"inherit\" onClick={this.handleClose}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </Fab>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form name=\"proposal\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                        {item && item.settlement === 'both' && <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-radio mb-2\">\r\n                                <input type=\"radio\"\r\n                                    name=\"settlement\"\r\n                                    checked={(formField.settlement === 'cash')}\r\n                                    id=\"settlement-cash\" value={'cash'}\r\n                                    onChange={this.handleChange}\r\n                                    className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"settlement-cash\">Cash</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input type=\"radio\"\r\n                                    name=\"settlement\"\r\n                                    checked={(formField.settlement === 'exchange')}\r\n                                    id=\"settlement-exchange\" value={'exchange'}\r\n                                    onChange={this.handleChange}\r\n                                    className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"settlement-exchange\">Exchange</label>\r\n                            </div>\r\n                        </div> }\r\n\r\n                        {(formField.settlement === 'cash') && <div className=\"form-group\">\r\n                            <label>Enter Amount</label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"number\" className={'form-control ' + (submitted && isValid.comment.isInvalid ? 'is-invalid' : '')} name=\"budget\" placeholder=\"Amount\" onChange={this.handleChange} />\r\n                                <div className=\"input-group-append\">\r\n                                    <span className=\"input-group-text\">$</span>\r\n                                </div>\r\n                            </div>\r\n                            {submitted && isValid.budget.isInvalid &&\r\n                            <div className={'invalid-feedback ' + (submitted && isValid.budget.isInvalid ? 'd-block' : '')}> {isValid.budget.message} </div>\r\n                            }\r\n                        </div>}\r\n\r\n                        {servicesList && (formField.settlement === 'exchange') && <div className=\"form-group\">\r\n                            <label>Select Services</label>\r\n                            <Select\r\n                                className={\"multiple-select mb-2 \"  + (submitted && isValid.services.isInvalid ? 'is-invalid' : '')}\r\n                                classNamePrefix=\"multi\"\r\n                                isSearchable isMulti\r\n                                defaultValue={formField.services}\r\n                                name=\"services\"\r\n                                onChange={this.handleSelect}\r\n                                options={servicesList.map(item => ({ value: item.id, label: item.title }))} />\r\n                            {submitted && isValid.services.isInvalid &&\r\n                            <div className={'invalid-feedback ' + (submitted && isValid.services.isInvalid ? 'd-block' : '')}> {isValid.services.message} </div>\r\n                            }\r\n                        </div>}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Message</label>\r\n                            <textarea className={'form-control ' + (submitted && isValid.comment.isInvalid ? 'is-invalid' : '')} placeholder=\"Message ...\" onChange={this.handleChange}\r\n                             name=\"comment\" rows={3} />\r\n                            {submitted && isValid.comment.isInvalid &&\r\n                            <div className=\"invalid-feedback\"> {isValid.comment.message} </div>\r\n                            }\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"pb-3\">\r\n                    <button className=\"btn btn-info\" onClick={this.handleSubmit} autoFocus>Send Offer</button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(CounterOffer);","import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Fab, Box } from '@material-ui/core';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { proposalActions } from '../../../../common/redux/actions';\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport {globalService as gs, itemService} from \"../../../../common/services\";\r\nimport {alertSelectors, processSelectors} from \"../../../../common/redux/selectors\";\r\nimport {EXPAND_RIGHT} from \"react-ladda\";\r\nimport LaddaButton from \"react-ladda\";\r\n\r\nclass RatingReviewForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                proposal_id: \"\",\r\n                title: '',\r\n                review: '',\r\n                rating_skills: 0,\r\n                rating_quality: 0,\r\n                rating_availability: 0,\r\n                rating_deadline: 0,\r\n                rating_communication: 0,\r\n                rating_cooperation: 0,\r\n                rating_avg: 0,\r\n                rating_competence: 0,\r\n                rating_recommend: 0,\r\n            },\r\n            open: false,\r\n            item: null,\r\n            submitted:false,\r\n            loading:false,\r\n            validation: this.validator().valid(),\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._mount()\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this._mount()\r\n    }\r\n\r\n    _mount = () => {\r\n        const { open, item } = this.props;\r\n        let { formField } = this.state;\r\n        if (item) {\r\n            formField['proposal_id'] = item.id;\r\n            this.setState({ id: item.id, open, item, formField });\r\n        }\r\n     }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            //{ field: 'title', method: 'isEmpty', validWhen: false, message: 'Title is required.' },\r\n            { field: 'review', method: 'isEmpty', validWhen: false, message: 'Review is required.' },\r\n            { field: 'rating_communication', method: 'isEmpty', validWhen: false, message: 'Rating for communication is required.' },\r\n            { field: 'rating_competence', method: 'isEmpty', validWhen: false, message: 'Rating for competence is required.' },\r\n            { field: 'rating_quality', method: 'isEmpty', validWhen: false, message: 'Rating for quality is required.' },\r\n            { field: 'rating_deadline', method: 'isEmpty', validWhen: false, message: 'Rating for deadline is required.' },\r\n            { field: 'rating_recommend', method: 'isEmpty', validWhen: false, message: 'Rating for recommend is required.' },\r\n            //{ field: 'rating_skills', method: 'isEmpty', validWhen: false, message: 'Rating for skill is required.' },\r\n            //{ field: 'rating_availability', method: 'isEmpty', validWhen: false, message: 'Rating for availability is required.' },\r\n            //{ field: 'rating_cooperation', method: 'isEmpty', validWhen: false, message: 'Rating for cooperation is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { formField } = this.state;\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.reviewClose();\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true, loading: true });\r\n        if (validation.isValid) {\r\n            const { dispatch } = this.props;\r\n            const params = {};\r\n            params.proposal_id = formField.proposal_id;\r\n            params.title = formField.title;\r\n            params.review = formField.review;\r\n            params.rating_communication = formField.rating_communication;\r\n            params.rating_competence = formField.rating_competence;\r\n            params.rating_quality = formField.rating_quality;\r\n            params.rating_deadline = formField.rating_deadline;\r\n            params.rating_recommend = formField.rating_recommend;\r\n            params.rating_avg = (   parseInt(formField.rating_communication) +\r\n                                    parseInt(formField.rating_competence) +\r\n                                    parseInt(formField.rating_quality) +\r\n                                    parseInt(formField.rating_deadline) +\r\n                                    parseInt(formField.rating_recommend)\r\n                                ) / 5;\r\n            params.rating_avg = parseFloat(params.rating_avg).toFixed(2);\r\n\r\n            itemService.review(\"POST\", { userItemProposalReview: params}, null)\r\n                .then(response => {\r\n                    (response.code === true) ?\r\n                    dispatch(alertSelectors.success(response.message)) :\r\n                    dispatch(alertSelectors.error(response.message));\r\n                    dispatch(processSelectors.stop());\r\n                    this.setState({ loading: false });\r\n                    this.setState(this.initializeState);\r\n                    this.handleClose();\r\n                })\r\n                .catch(exception => {\r\n                    gs.showErrors(dispatch, exception, alertSelectors);\r\n                    dispatch(processSelectors.stop());\r\n                    this.setState({ loading: false });\r\n                });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { open, buyer } = this.props;\r\n        const { formField, submitted, validation, loading } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        let totalRating = (parseInt(formField.rating_communication) + parseInt(formField.rating_competence) + parseInt(formField.rating_quality) + parseInt(formField.rating_deadline) + parseInt(formField.rating_recommend)) / 5;\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'md'}\r\n                className=\"offer-dialog\">\r\n                    <DialogTitle><span className=\"text-primary\">Rate your experience with <span>{buyer.name}</span></span>\r\n                    <Fab color=\"inherit\" onClick={this.handleClose}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </Fab>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form name=\"review\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n\r\n                        <div className=\"form-group d-flex\">\r\n                            <label className=\"w-100\">\r\n                                <b>1. Communication</b> <br /> <small style={{fontSize: '90%', fontWeight: '600'}}>&nbsp;&nbsp;&nbsp;&nbsp; Explain clearly scope of work and responsive</small>\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                                <Box component=\"div\" mb={3} className=\"d-flex mb-0\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating name=\"rating_communication\" value={parseInt(formField.rating_communication)} onChange={this.handleChange} />\r\n                                </Box>\r\n                                {submitted && isValid.rating_communication.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.rating_communication.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group d-flex\">\r\n                            <label className=\"w-100\">\r\n                                <b>2. Professionalism</b> <br /> <small style={{ fontSize: '90%', fontWeight: '600' }}>&nbsp;&nbsp;&nbsp;&nbsp; Respectful and competent</small>\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                                <Box component=\"div\" mb={3} className=\"d-flex mb-0\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating name=\"rating_competence\" value={parseInt(formField.rating_competence)} onChange={this.handleChange} />\r\n                                </Box>\r\n                                {submitted && isValid.rating_competence.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.rating_competence.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div className=\"form-group d-flex\">\r\n                            <label className=\"w-100\">Skills</label>\r\n                            <div className=\"input-group\">\r\n                                <Box component=\"div\" mb={3} className=\"d-flex mb-0\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating name=\"rating_skills\" value={parseInt(formField.rating_skills)} onChange={this.handleChange} />\r\n                                </Box>\r\n                                {submitted && isValid.rating_skills.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.rating_skills.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"form-group d-flex\">\r\n                            <label className=\"w-100\">\r\n                                <b>3. Quality</b> <br /> <small style={{fontSize: '90%', fontWeight: '600'}}>&nbsp;&nbsp;&nbsp;&nbsp; Meet expectation as described</small>\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                                <Box component=\"div\" mb={3} className=\"d-flex mb-0\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating name=\"rating_quality\" value={parseInt(formField.rating_quality)} onChange={this.handleChange} />\r\n                                </Box>\r\n                                {submitted && isValid.rating_quality.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.rating_quality.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div className=\"form-group d-flex\">\r\n                            <label className=\"w-100\">Availability</label>\r\n                            <div className=\"input-group\">\r\n                                <Box component=\"div\" mb={3} className=\"d-flex mb-0\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating name=\"rating_availability\" value={parseInt(formField.rating_availability)} onChange={this.handleChange} />\r\n                                </Box>\r\n                                {submitted && isValid.rating_availability.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.rating_availability.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"form-group d-flex\">\r\n                            <label className=\"w-100\">\r\n                                <b>4. Timely</b> <br /> <small style={{fontSize: '90%', fontWeight: '600'}}>&nbsp;&nbsp;&nbsp;&nbsp; Project was done on time as agreed</small>\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                                <Box component=\"div\" mb={3} className=\"d-flex mb-0\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating name=\"rating_deadline\" value={parseInt(formField.rating_deadline)} onChange={this.handleChange} />\r\n                                </Box>\r\n                                {submitted && isValid.rating_deadline.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.rating_deadline.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group d-flex\">\r\n                            <label className=\"w-100\">\r\n                                <b>5. Recommend</b> <br /> <small style={{fontSize: '90%', fontWeight: '600'}}>&nbsp;&nbsp;&nbsp;&nbsp; Fantastic and collaborative experience</small>\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                                <Box component=\"div\" mb={3} className=\"d-flex mb-0\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating name=\"rating_recommend\" value={parseInt(formField.rating_recommend)} onChange={this.handleChange} />\r\n                                </Box>\r\n                                {submitted && isValid.rating_recommend.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.rating_recommend.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div className=\"form-group d-flex\">\r\n                            <label className=\"w-100\">Co-Operation</label>\r\n                            <div className=\"input-group\">\r\n                                <Box component=\"div\" mb={3} className=\"d-flex mb-0\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating name=\"rating_cooperation\" value={parseInt(formField.rating_cooperation)} onChange={this.handleChange} />\r\n                                </Box>\r\n                                {submitted && isValid.rating_cooperation.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.rating_cooperation.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Title</label>\r\n                            <input type=\"text\" name=\"title\" value={formField.title} onChange={this.handleChange} className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')} />\r\n\r\n                            {submitted && isValid.title.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.title.message} </div>\r\n                            }\r\n                        </div> */}\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <h4 style={{fontWeight: '600'}}>Total Score: { totalRating }</h4>\r\n                            <label>Write a public review about your experience with {buyer.name}</label>\r\n                            <textarea placeholder=\"Review ...\" onChange={this.handleChange}\r\n                                name=\"review\" rows={3} className={'form-control ' + (submitted && isValid.review.isInvalid ? 'is-invalid' : '')} />\r\n\r\n                            {submitted && isValid.review.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.review.message} </div>\r\n                            }\r\n                        </div>\r\n\r\n\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"pb-3\">\r\n                    {/*<button className=\"btn btn-info\" onClick={this.handleSubmit} autoFocus></button>*/}\r\n                    <LaddaButton className=\"btn btn-info\" loading={loading} data-style={EXPAND_RIGHT} onClick={this.handleSubmit}>Submit</LaddaButton>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(RatingReviewForm);","import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Fab } from '@material-ui/core';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport FormValidator from '../../../../helpers/FormValidator'\r\n\r\n\r\n\r\nclass MessageForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                title: '',\r\n                text: '',\r\n                recipient_id: [],\r\n                item_id: '',\r\n                module: '',\r\n                attachment: '',\r\n                group: null,\r\n            },\r\n            validation: this.validator().valid(),\r\n            open: false,\r\n            item: null,\r\n            messageKey: null,\r\n            submitted: false,\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        this._mount();\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this._mount();\r\n    }\r\n\r\n    _mount = () => {\r\n        const { open, item, module, messageKey } = this.props;\r\n        let { formField } = this.state;\r\n        if (item) {\r\n            formField['item_id'] = item.id;\r\n            formField['module'] = module;\r\n            formField['title'] = item.item.title;\r\n            formField['recipient_id'] = item.userItemProposalRecipients.map(item => item.recipient_id);\r\n            this.setState({ id: item.id, item, open, formField, messageKey });\r\n        }\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'title', method: 'isEmpty', validWhen: false, message: 'Title is required.' },\r\n            { field: 'text', method: 'isEmpty', validWhen: false, message: 'Message is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.messageClose();\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n        if (validation.isValid) {\r\n            /*\r\n                const params = {};\r\n                params.text = formField.text;\r\n                params.recipient_id = formField.recipient_id;\r\n                params.group = { group_id: formField.item_id, title: formField.title, image_id: item.item.cover_id, image: item.item.cover };\r\n                params.item = { item_id: formField.item_id, module: formField.module };\r\n                dispatch(messageActions.sendMessageToFirebase(params, messageKey));\r\n            */\r\n            this.props.message(formField.text, formField.title);\r\n            this.setState(this.initializeState);\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { open } = this.props;\r\n        const { formField, item, submitted, validation } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n                className=\"offer-dialog\">\r\n                <DialogTitle><span className=\"text-primary\">Send Message</span>\r\n                    <Fab color=\"inherit\" onClick={this.handleClose}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </Fab>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form name=\"proposal\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                        {item && item.item && <div className=\"form-group\">\r\n                            <label>Subject</label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"text\" value={formField.title} name=\"title\" placeholder=\"Title ...\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')} />\r\n                                {submitted && isValid.title.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.title.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"form-group\">\r\n                            <label>Message</label>\r\n                            <textarea className={'form-control ' + (submitted && isValid.text.isInvalid ? 'is-invalid' : '')} placeholder=\"Message ...\" onChange={this.handleChange}\r\n                                name=\"text\" rows={3} />\r\n                            {submitted && isValid.text.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.text.message} </div>\r\n                            }\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"pb-3\">\r\n                    <button className=\"btn btn-info\" onClick={this.handleSubmit} autoFocus>Submit</button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(MessageForm);","import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Fab } from '@material-ui/core';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport FormValidator from '../../../../helpers/FormValidator'\r\nimport { proposalActions } from '../../../../common/redux/actions/index';\r\nimport { globalService as gs } from '../../../../common/services';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\r\n\r\nconst isValidDuration = false;\r\nconst isValidDated = false;\r\nconst fromType = null;\r\nconst dateFieldTitle = null;\r\n\r\nclass MilestoneForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fromType = props.type;\r\n        this.state = {\r\n            formField: {\r\n                proposal_id: '',\r\n                action_by: '',\r\n                title: '',\r\n                description: '',\r\n                duration: '',\r\n                budget: '',\r\n                dated: (new Date()),\r\n            },\r\n            validation: this.validator().valid(),\r\n            open: false,\r\n            proposal_id: null,\r\n            submitted: false,\r\n            type: null,\r\n        };\r\n        this.dateFieldTitle = (props.type === 'Timesheet') ? 'Start date' : 'Due Date';\r\n        this.initializeState = this.state;\r\n    }\r\n\r\n    componentWillMount(){\r\n        this._mount();\r\n    }\r\n\r\n    componentWillReceiveProps = () => {\r\n        this._mount();\r\n    };\r\n\r\n    _mount = () => {\r\n        const { open, proposal_id, type, field } = this.props;\r\n        console.log('this.props', this.props);\r\n        if(field) {\r\n            let { formField } = this.state;\r\n            this.setState({ proposal_id, open, type, dateFieldTitle, formField: field });\r\n        } else {\r\n            let { formField } = this.state;\r\n            formField['proposal_id'] = proposal_id;\r\n            this.setState({ proposal_id, open, formField, type, dateFieldTitle });\r\n        }\r\n\r\n    };\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'title', method: 'isEmpty', validWhen: false, message: 'Title is required.' },\r\n            { field: 'dated', method: 'isEmpty', validWhen: false, message: `${this.dateFieldTitle} is required.` },\r\n            { field: 'budget', method: 'isEmpty', validWhen: (this.fromType === 'Timesheet'), message: 'Budget is required.' },\r\n            { field: 'duration', method: 'isEmpty', validWhen: (this.fromType === 'Milestone'), message: 'Duration is required.' },\r\n            { field: 'description', method: 'isEmpty', validWhen: false, message: 'Description is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n        if (e.target.name === 'duration') {\r\n            if(parseInt(e.target.value) === 0) {\r\n                formField[e.target.name] = 1;\r\n            }\r\n            if (e.target.value < 0) {\r\n                formField[e.target.name] = -e.target.value;\r\n            }\r\n            formField = this.handleBudget(formField);\r\n        }\r\n\r\n    };\r\n\r\n    handleBudget = (formField) => {\r\n        const {budget} = this.props\r\n        this.budgetForTimesheet = formField.duration * budget;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.milestoneClose();\r\n    };\r\n\r\n    handleDateChange = (dated) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['dated'] = (new Date(dated));\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField, proposal_id, type } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n        if (validation.isValid) {\r\n            const { dispatch, milestone_id } = this.props;\r\n            const params = {};\r\n            const param = proposal_id === null ? null : { proposal_id: proposal_id, item_id: milestone_id };\r\n            params.proposal_id = formField.proposal_id;\r\n            params.action_by = gs.identity.user.id;\r\n            params.title = formField.title;\r\n            params.description = formField.description;\r\n            params.duration = formField.duration;\r\n            params.budget = (this.fromType === 'Timesheet') ? this.budgetForTimesheet : formField.budget;\r\n            params.dated = parseInt(new Date(formField.dated).getTime() / 1000);\r\n            param.userMessage = this.props.message(`New ${type} create.`);\r\n            dispatch(proposalActions.milestone(\"POST\", { userMilestone: params }, param));\r\n            this.setState(this.initializeState);\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { open } = this.props;\r\n        const { formField, submitted, validation, type, dateFieldTitle } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        let typeTitle = gs.capitalize(type);\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n                className=\"offer-dialog\">\r\n                <DialogTitle><span className=\"text-primary\">{`${typeTitle}`}</span>\r\n                    <Fab color=\"inherit\" onClick={this.handleClose}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </Fab>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form name=\"proposal\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                        <div className=\"form-group\">\r\n                            <label>Title</label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"text\" value={formField.title} name=\"title\" placeholder=\"Title ...\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')} />\r\n                                {submitted && isValid.title.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.title.message} </div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                            <textarea className={'form-control ' + (submitted && isValid.description.isInvalid ? 'is-invalid' : '')} placeholder=\"Message ...\" onChange={this.handleChange}\r\n                                name=\"description\" rows={3} value={formField.description} />\r\n                            {submitted && isValid.description.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.description.message} </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>{`${this.dateFieldTitle}`}</label>\r\n                            <div className=\"form-calender\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        placeholder=\"Dated ...\"\r\n                                        value={formField.dated}\r\n                                        onChange={this.handleDateChange}\r\n                                        className={'form-control'}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {type === 'Timesheet' && <div className=\"form-group\">\r\n                            <label>Number of Hours</label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"number\" value={formField.duration} name=\"duration\" placeholder=\"Duration ...\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.duration.isInvalid ? 'is-invalid' : '')} min=\"0\" step=\"1\" pattern=\"\\d+\"/>\r\n                                {submitted && isValid.duration.isInvalid &&\r\n                                    <div className=\"invalid-feedback\"> {isValid.duration.message} </div>}\r\n                            </div>\r\n                        </div>}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Budget</label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"text\" value={(type === 'Timesheet' ? this.budgetForTimesheet : formField.budget)} name=\"budget\" placeholder=\"Budget ...\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.budget.isInvalid ? 'is-invalid' : '')}\r\n                                    readOnly={(type === 'Timesheet')} />\r\n                                {submitted && isValid.budget.isInvalid && <div className=\"invalid-feedback\"> {isValid.budget.message} </div>}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"pb-3\">\r\n                    <button className=\"btn btn-info\" onClick={this.handleSubmit} autoFocus>Submit</button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(MilestoneForm);","import React from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {globalService as gs} from \"../../../../common/services\";\r\nimport ReadMoreReact from \"read-more-react\";\r\n\r\nconst BuyerView = (props) => {\r\n\r\n\r\n    const { item, title } = props;\r\n\r\n    return (\r\n          <div className=\"card mb-4 buyerInfo\">\r\n            <div className=\"card-body text-center\">\r\n                <h5 className=\"card-title text-primary text-left\">{title}</h5>\r\n                <div className=\"image\">\r\n                    <NavLink to={`/user/public/about/${item.id}`}> <img className=\"rounded-circle\" src={item.avatar} alt=\"Images\" width=\"100\" height=\"100\" /></NavLink>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <h4><NavLink to={`/user/public/about/${item.id}`}>{item.name}</NavLink></h4>\r\n                    <div className=\"sold\">{item.sold_count ? item.sold_count : 0} Services Sold</div>\r\n                    <div className=\"rating d-flex align-items-center justify-content-center\">\r\n                        <small>({parseFloat(item.avg_rating)})</small>\r\n                        <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                            <Rating value={parseFloat(item.avg_rating)} readOnly size=\"small\" />\r\n                        </Box>\r\n                        <small className=\"count\">({item.count_rating})</small>\r\n                    </div>\r\n                    {(item && item.countryCode && item.countryCode.name) &&\r\n                        <div className=\"location\">\r\n                            <i className=\"fas fa-map-marker-alt text-primary\"></i> {item && item.countryCode && item.countryCode.name}\r\n                        </div>}\r\n                    <ReadMoreReact className=\"custom-description\" text={gs.html2text(item.about)} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n                    {props.isVisibleMessage && <button className=\"btn btn-primary\" onClick={props.messageOpen}><i className=\"far fa-comments\"></i> Message</button>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    userSelector,\r\n    (user) => ({\r\n        user\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(BuyerView);\r\n","import React, {Fragment} from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Box } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ReadMoreReact from 'read-more-react';\r\nimport { globalService as gs } from '../../../../common/services';\r\n\r\n\r\nconst ItemView = (props) => {\r\n    const { item, settlement, moduleTitle, itemType, authentication } = props;\r\n    const auth = authentication.authentication.user;\r\n    const pgLinkOwner = (moduleTitle === 'Job') ? `/job/view/${item.id}` : `/service/view/${item.id}`;\r\n    const pgLink = (moduleTitle === 'Job') ? `/user/public/job/view/${item.id}` : `/user/public/service/view/${item.id}`;\r\n    return (\r\n        <div className=\"card mb-4 serviceInfo\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title text-primary\">{`${moduleTitle} Information`}</h5>\r\n                <div className=\"image\">\r\n                    {console.log(item)}\r\n                    {item.cover && <Link to={(auth.id === item.user_id) ? pgLinkOwner : pgLink}>\r\n                        <img className=\"img-fluid\" src={item.cover} alt=\"Images\" />\r\n                        </Link>}\r\n                    {(moduleTitle === 'Service') && <div className=\"fixed badge badge-primary\">{settlement}</div>}\r\n                </div>\r\n                <div className=\"text\">\r\n                    <h5><Link to={(auth.id === item.user_id) ? pgLinkOwner : pgLink}>{item.title}</Link></h5>\r\n\r\n                    {/* (moduleTitle === 'Job') && <div className=\"fixed badge badge-primary\" style={{padding: '10px 25px', fontSize: '14px', marginBottom: '6px'}}>{settlement}</div> */}\r\n                    {(moduleTitle === 'Job') && <div className=\"fixed badge badge-primary text-capitalize\" style={{ padding: '10px 25px', fontSize: '14px', marginBottom: '6px' }}>{itemType}</div>}\r\n\r\n                    <ReadMoreReact className=\"custom-description\" text={gs.html2text(item && item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n                    {(moduleTitle === 'Service') &&\r\n                        <Fragment>\r\n                            {item.sold_count && <div className=\"sold w-100\">{item.sold_count} Service Sold</div>}\r\n                            <div className=\"rating d-flex align-items-center w-100 mb-3\">\r\n                                <small>({item.avg_rating})</small>\r\n                                <Box component=\"fieldset\" mx={1.0} borderColor=\"transparent\">\r\n                                    <Rating value={parseInt(item.avg_rating)} readOnly size=\"small\" />\r\n                                </Box>\r\n                                <small className=\"count\">({item.proposal_count})</small>\r\n                            </div>\r\n                        </Fragment>\r\n                    }\r\n                    {settlement === 'cash' && <div className=\"price\"><big>${item.budget}</big></div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    userSelector,\r\n    authenticationSelector,\r\n    (user, authentication) => ({\r\n        user,\r\n        authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ItemView);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { globalService as gs } from '../../../../common/services';\r\nimport { proposalActions } from '../../../../common/redux/actions';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {MilestoneForm} from \"./index\";\r\nimport {ModuleHelper as mh} from \"../../../../helpers\";\r\n\r\nconst status_new = 0;\r\nconst status_submission = 1;\r\nconst status_approved = 2;\r\nconst status_not_approved = 3;\r\nconst status_payment = 4;\r\n\r\nconst submittionStatuses = [\r\n    status_new,\r\n    status_not_approved,\r\n];\r\n\r\n\r\n//const is_active = 0;\r\nconst not_active = 1;\r\nconst active_off = 2;\r\nconst is_paid = 1;\r\n//const is_unpaid = 0;\r\n\r\nclass Milestones extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: null,\r\n            item: null,\r\n            stripeKey: process.env.REACT_APP_STRIPE_PUBLIC_KEY,\r\n            setMilestone: false,\r\n            field: {},\r\n            milestone_id: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { type } = this.props;\r\n        this.setState({ type });\r\n    }\r\n\r\n\r\n    message = (text, title) => {\r\n        this.props.message(text, title);\r\n    };\r\n\r\n    itemAction = (action = 'status_new', comment = null) => {\r\n        const { dispatch } = this.props;\r\n        const { token, item, type } = this.state;\r\n        let capitalizeType = gs.capitalize(type);\r\n        if (action === \"status_delete\") {\r\n            dispatch(proposalActions.milestone(\"DELETE\", {}, { item_id: item.id, proposal_id: item.proposal_id }));\r\n            return;\r\n        }\r\n\r\n        const param = {};\r\n        if (comment !== null) {\r\n            param.comment = comment;\r\n        }\r\n        param.userMessage = null;\r\n        let alert_message = null;\r\n\r\n        switch (action) {\r\n            /** Milestone status */\r\n            case 'status_new':\r\n                param.status = status_new;\r\n                param.userMessage = this.message(`New ${type} create.`);\r\n                alert_message = `You have create a new ${type}.`;\r\n                break;\r\n            case 'status_submission':\r\n                param.status = status_submission;\r\n                param.userMessage = this.message(`${capitalizeType} submitted.`);\r\n                alert_message = `You have submitted a ${type}.`;\r\n                break;\r\n            case 'status_approved':\r\n                param.status = status_approved;\r\n                param.userMessage = this.message(`${capitalizeType} Approved.`);\r\n                alert_message = `You have approved a ${type}.`;\r\n                break;\r\n            case 'status_not_approved':\r\n                param.status = status_not_approved;\r\n                param.userMessage = this.message(`${capitalizeType} Not Approved.`);\r\n                alert_message = `You have declined a ${type}.`;\r\n                break;\r\n            case 'status_payment':\r\n                param.status = status_payment;\r\n                param.userMessage = this.message(`Payment of ${type} ${item.title} is success`);\r\n                param.token = token;\r\n                param.is_paid = 1;\r\n                param.is_active = 2;\r\n                alert_message = `Payment of ${type} ${item.title} is success`;\r\n                break;\r\n            default:\r\n                param.status = status_new;\r\n                alert_message = `You have create a new ${type}.`;\r\n        }\r\n        param.action_by = gs.identity.user.id;\r\n        dispatch(proposalActions.milestone(\"POST\", { userMilestone: param }, { item_id: item.id, proposal_id: item.proposal_id }));\r\n        dispatch(alertSelectors.success(alert_message));\r\n    };\r\n\r\n    onPayment = (item, token) => {\r\n        this.setState({ token: token, item: item });\r\n        this.itemAction('status_payment');\r\n    };\r\n\r\n    isConfirmDialog = (action, message = null) => {\r\n        const { dispatch } = this.props;\r\n        const { type } = this.state;\r\n\r\n        confirmAlert({\r\n            //title: `Confirm Request`,\r\n            message: (message === null ? `Are you sure you want to accept this ${type}?` : message),\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => this.itemAction(action)\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    onSubmit = (item) => {\r\n        this.setState({ item });\r\n        const { type } = this.state;\r\n        this.isConfirmDialog('status_submission', ` Once payment is made under ${type} details please add transaction #`);\r\n    };\r\n\r\n    onApproved = (item) => {\r\n        this.setState({ item });\r\n        const { type } = this.state;\r\n        this.isConfirmDialog('status_approved', `Are you sure you want to approve this ${type} and send the payment?`);\r\n    };\r\n\r\n    onDeclined = (item) => {\r\n        this.setState({ item });\r\n        const { type } = this.state;\r\n        this.isConfirmDialog('status_not_approved', `Are you sure you want to declined submittion of this ${type}?`);\r\n    };\r\n\r\n    isVisiblePayment = (item) => {\r\n        const { proposal } = this.props;\r\n        let itemPayment = parseInt(item.budget) * 100;\r\n        const isRequest = (!gs.isOwner(proposal.provider_id) && item.is_active === 1 && item.status === status_approved);\r\n        return (isRequest && <div className=\"visible-action\">\r\n            <div className=\"btn btn-primary\">\r\n                <StripeCheckout token={this.onPayment.bind(this, item)} stripeKey={this.state.stripeKey} amount={itemPayment} image={`${gs.rootUrl}/images/stripe_logo.png`} ComponentClass=\"div\" label=\"Pay Now\" panelLabel=\"Pay Now\">Pay Now</StripeCheckout>\r\n            </div>\r\n        </div>);\r\n    };\r\n\r\n    isVisibleSubmit = (item) => {\r\n        const { proposal } = this.props;\r\n        const { type } = this.state;\r\n        const isRequest = ((gs.isOwner(proposal.provider_id) && item.is_active === 1) && submittionStatuses.includes(item.status));\r\n        return (isRequest &&\r\n            <div className=\"visible-action\">\r\n            <h5 className=\"card-text mb-1\" style={{fontSize: '14px'}}>Would you like to mark this {`${type}`} as completed?</h5>\r\n                <div className=\"mb-3\">\r\n                    <button className=\"btn btn-success\" type=\"button\" onClick={this.onSubmit.bind(this, item)}><i className=\"fas fa-check\"></i> Mark as Complete </button>\r\n                </div>\r\n            </div>)\r\n    };\r\n\r\n\r\n    isVisibleActions = (item) => {\r\n        const { proposal } = this.props;\r\n        const { type } = this.state;\r\n        const isRequest = (!gs.isOwner(proposal.provider_id) && item.is_active === 1 && item.status === status_submission);\r\n        return (isRequest &&\r\n            <div className=\"visible-action\">\r\n            <h5 className=\"card-text mb-1\" style={{fontSize: '14px'}}>{`${gs.capitalize(type)}`} has been marked as complete would you like to submit the payment now?</h5>\r\n                <div className=\"mb-3\">\r\n                    <button className=\"btn btn-success\" type=\"button\" onClick={this.onApproved.bind(this, item)}><i className=\"fas fa-check\"></i> Accept </button>\r\n                    <button className=\"btn btn-info\" type=\"button\" onClick={this.onDeclined.bind(this, item)}><i className=\"fas fa-times\"></i> Decline</button>\r\n                </div>\r\n            </div>);\r\n    };\r\n\r\n    isDisabled = (item) => {\r\n        return (item.is_active === not_active || item.is_active === active_off) ? 'text-muted' : '';\r\n    };\r\n\r\n    milestoneOpen = (item) => {\r\n        let { field } = this.state;\r\n        field['proposal_id'] = item.proposal_id;\r\n        field['action_by'] = item.action_by;\r\n        field['title'] = item.title;\r\n        field['description'] = item.description;\r\n        field['duration'] = item.duration ? item.duration : '';\r\n        field['budget'] = item.budget;\r\n        field['dated'] = new Date(item.dated * 1000);\r\n        //this.props.onEdit(item)\r\n        this.setState({\r\n            field,\r\n            milestone_id: item.id,\r\n            setMilestone: true\r\n        });\r\n\r\n    };\r\n\r\n    milestoneDelete = (item) => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            //title: `Confirm Request`,\r\n            message: 'Are you sure you want to accept the completion request?',\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => dispatch(proposalActions.milestone(\"DELETE\", null, {proposal_id: item.proposal_id, item_id: item.id}))\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    milestoneClose = () => {\r\n        this.setState({\r\n            setMilestone: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { proposal, status } = this.props;\r\n        const items = proposal.userItemProposalMilestones;\r\n        const { type, setMilestone, field, milestone_id } = this.state;\r\n        const proposalItem = proposal.item;\r\n        const isJobProposal = (proposal.moduleId === mh.UserItem);\r\n        const itemType = proposalItem && proposalItem.type;\r\n        const proposalTypeTitle = (isJobProposal === true) ? ((itemType === 'fixed') ? 'Milestone' : 'Timesheet') : '';\r\n        let capitalizeType = gs.capitalize(type);\r\n\r\n        return (<Fragment>\r\n            {setMilestone && <MilestoneForm open={setMilestone} proposal_id={proposal.id} budget={proposal.budget} milestoneClose={this.milestoneClose} message={this.message} type={proposalTypeTitle} field={field} milestone_id={milestone_id} />}\r\n            <div className=\"card mb-4 milestones\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"offer\">\r\n                        <h5 style={{fontSize: '17px'}}>{capitalizeType}</h5>\r\n                    </div>\r\n                    {items && items.map((item) =>\r\n                        <div className={\"milestones-box \" + this.isDisabled(item)} key={item.id}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-text mb-1 d-flex justify-content-between\">\r\n                                    <div className=\"\">{item.title}</div>\r\n                                    {(item.is_paid !== is_paid) &&\r\n                                    <div className=\"action\">\r\n                                        <button className=\"btn btn-info btn-sm\" onClick={() => this.milestoneOpen(item)}><i className=\"fas fa-edit\"></i></button>\r\n                                        <button className=\"btn btn-danger btn-sm ml-1\" onClick={() => this.milestoneDelete(item)}><i className=\"fas fa-trash\"></i> </button>\r\n                                    </div>}\r\n                                </h5>\r\n                                <div className=\"card-text12\" style={{fontWeight: 400, fontSize: '14px'}}>{item.description}</div>\r\n                                <div className=\"d-flex align-items-center justify-content-between mb-3\" style={{fontWeight: 500, fontSize: '14px'}}>\r\n                                    <div className=\"paid\">Paid On: <big className=\"text-primary\">{(item.is_paid === is_paid) ? 'Yes' : 'No'}</big></div>\r\n                                    <div className=\"price\">Budget: {(item.budget === null) ? <small>Not Set</small> :\r\n                                        <big className=\"text-primary\">$ {item.budget}</big>}</div>\r\n                                </div>\r\n                                {this.isVisibleSubmit(item)}\r\n                                {this.isVisibleActions(item)}\r\n                                {this.isVisiblePayment(item)}\r\n                                <div className=\"auction d-flex align-items-center\">\r\n                                    <div className=\"button d-flex\">\r\n                                        {status}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {(items && items.length === 0) &&\r\n                        <div className=\"card-body text-center\">\r\n                            {`${capitalizeType}`} not found\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Fragment>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Milestones);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { globalService as gs } from '../../../../common/services';\r\n\r\nconst status_pending = 0;\r\nconst status_accepted = 1;\r\nconst status_declined = 2;\r\nconst status_offers = 3;\r\nconst status_payment_confirm = 4;\r\nconst status_mark_as_completed = 5;\r\nconst status_not_completed = 6;\r\nconst status_completed = 7;\r\nconst status_accepted_and_closed = 8;\r\nconst status_counter_offers = 9;\r\n\r\nclass ContractItems extends Component {\r\n\r\n    proposalStatus = (item) => {\r\n        let statusTitle = '';\r\n        //const isOwner = gs.isOwner(item.provider_id);\r\n        let cls = '';\r\n        const isActionBy = gs.isOwner(item.action_by);\r\n        switch (item.status) {\r\n            case status_offers:\r\n                statusTitle = isActionBy ? \"Waiting Approval\" : \"New Offer\";\r\n                cls = 'primary';\r\n                break;\r\n            case status_counter_offers:\r\n                statusTitle = isActionBy ? \"Waiting Approval\" : \"Offer Countered\";\r\n                cls = 'primary';\r\n                break;\r\n            case status_accepted:\r\n                statusTitle = \"Accepted\";\r\n                cls = 'primary';\r\n                break;\r\n            case status_accepted_and_closed:\r\n                statusTitle = \"Accepted and Closed\";\r\n                cls = 'success';\r\n                break;\r\n            case status_declined:\r\n                statusTitle = \"Declined\";\r\n                cls = 'danger';\r\n                break;\r\n            case status_mark_as_completed:\r\n                statusTitle = isActionBy ? \"Mark As Completed\" : \"Waiting Approval\";\r\n                cls = 'primary';\r\n                break;\r\n            case status_not_completed:\r\n                statusTitle = \"Not Completed\";\r\n                cls = 'warning';\r\n                break;\r\n            case status_completed:\r\n                statusTitle = \"Completed\";\r\n                cls = 'success';\r\n                break;\r\n            case status_payment_confirm:\r\n                statusTitle = \"Payment Sent\";\r\n                cls = 'primary';\r\n                break;\r\n            default:\r\n                statusTitle = \"Accepted\";\r\n                cls = 'primary';\r\n        }\r\n        return { title: statusTitle, cls: cls };\r\n    };\r\n\r\n    _getName = (item) => {\r\n        return;\r\n    }\r\n\r\n    render() {\r\n        const { results, status, settlement, pagination } = this.props;\r\n        console.log(results)\r\n        return (<Fragment>\r\n            {results && results.length ?\r\n                <div class=\"box\">\r\n                    <div class=\"box-header\">\r\n                        <h3 class=\"box-title\">Proposals from Freelancers</h3>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"example1\" class=\"table table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Freelancer</th>\r\n                                        <th>Job Title</th>\r\n                                        <th>Assigned</th>\r\n                                        <th>Proposal</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {results && results.map((item) =>\r\n                                        //    <div className=\"card service-box\" key={`e#${item.id}`}>\r\n\r\n                                        //             <div className=\"card-body\">\r\n                                        //                 <h5 className=\"card-title\">\r\n                                        //                     <Link to={`/${status.toLowerCase()}/view/${item.id}`}>{item.item && item.item.title}</Link>\r\n                                        //                 </h5>\r\n                                        //                 <div className=\"d-flex align-items-center\">\r\n                                        //                     <div className=\"col pl-0 d-flex align-items-center\">\r\n                                        //                         <div className=\"category text-truncate w-20 pr-2\">\r\n                                        //                             <span> {item.proposalRecipient && item.proposalRecipient.name }</span>\r\n                                        //                         </div>\r\n                                        //                         <div className=\"date pr-3 w-25\">\r\n                                        //                             { moment(item.updated_at * 1000).format('LLL') }\r\n                                        //                         </div>\r\n                                        //                         <div className=\"ratings d-flex align-items-center w-50\">\r\n                                        //                             {settlement === 'cash' &&\r\n                                        //                                 <div className=\"price d-flex align-items-center\"> {(item.budget === null) ? <small>Not Set</small> : `$${item.budget}`} {((item.status !== status_pending) && (item.status !== status_declined) && (item.status !== status_payment_confirm) && (item.status !== status_completed) && (item.status !== status_accepted_and_closed)) && < small className=\"text-info pt-2 pl-2\" title=\"Active Service\"></small>}</div>\r\n                                        //                             }\r\n                                        //                             {settlement === 'exchange' && <Fragment>\r\n                                        //                                 <div className=\"title pr-2\">Service Exchange</div>\r\n                                        //                                 {item.item && item.item.skills && item.item.skills.slice(0, 4).map((skill) => <div key={`${skill.id}`} className=\"badge badge-pill badge-secondary px-3\">{skill.title}</div>) }\r\n                                        //                             </Fragment>}\r\n                                        //                         </div>\r\n\r\n                                        //                         <div className=\"status w-15 text-left\">\r\n                                        //                             {item.isDispute && <span className={`badge mr-2 badge-info`}>Disputed</span> }\r\n                                        //                             <span className={`badge badge-${this.proposalStatus(item).cls}`}>{this.proposalStatus(item).title}</span>\r\n                                        //                         </div>\r\n                                        //                     </div>\r\n                                        //                     {<div className=\"auction d-flex align-items-center\">\r\n                                        //                         <div className=\"button d-flex\">\r\n                                        //                             <Link className=\"btn btn-sm\" to={`/${status.toLowerCase()}/view/${item.id}`}><i className=\"fas fa-eye\"></i></Link>\r\n                                        //                         </div>\r\n                                        //                     </div>}\r\n                                        //                 </div>\r\n                                        //                     {(status_declined === item.status) && <div><b>Decline Reason: </b> {item.comment}</div>}\r\n                                        //             </div>\r\n                                        //         </div>\r\n                                        <tr>\r\n                                            <td className=\"first\">\r\n                                                <img src={item.actionBy.avatar} class=\"img-responsive img-circle pull-left\" width=\"50\" height=\"50\" alt=\"Image\" />\r\n                                                <a href=\"#\"> {item.proposalRecipient && item.proposalRecipient.name}</a>\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={`/${status.toLowerCase()}/view/${item.id}`}>{item.item && item.item.title}</Link>\r\n                                            </td>\r\n                                            <td>\r\n                                                {(item.budget === null) ? <small>Not Set</small> : `$${item.budget}`} {((item.status !== status_pending) && (item.status !== status_declined) && (item.status !== status_payment_confirm) && (item.status !== status_completed) && (item.status !== status_accepted_and_closed)) && < small className=\"text-info pt-2 pl-2\" title=\"Active Service\"></small>}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.isDispute && <span className={`badge mr-2 badge-info`}>Disputed</span>}\r\n                                                <span className={`badge badge-${this.proposalStatus(item).cls}`}>{this.proposalStatus(item).title}</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link className=\"kafe-btn kafe-btn-mint-small\" to={`/${status.toLowerCase()}/view/${item.id}`}> View Proposal</Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n            {(results && results.length === 0) &&\r\n                <div className=\"card service-box\">\r\n                    <div className=\"card-body text-center\">\r\n                        <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                            <div className=\"inner\">\r\n                                {(settlement === 'cash' && status === 'Received') && <Fragment>\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/Received-Offers-Cash.png\" alt=\"Not found\" width=\"70\" />\r\n                                    </figure>\r\n                                    <h5>You have not received any cash offers yet</h5>\r\n                                    <p className=\"title\">This is where you’ll be able to track all the cash services that you received</p>\r\n                                </Fragment>}\r\n                                {(settlement === 'exchange' && status === 'Received') && <Fragment>\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/Received-Offers-Exchange.png\" alt=\"Not found\" width=\"100\" />\r\n                                    </figure>\r\n                                    <h5>You have not received any exchange offers yet</h5>\r\n                                    <p className=\"title\">This is where you’ll be able to track all the exchange services that you received</p>\r\n                                </Fragment>}\r\n\r\n                                {(settlement === 'cash' && status === 'Sent') && <Fragment>\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/Send-Offers-Cash.png\" alt=\"Not found\" width=\"100\" />\r\n                                    </figure>\r\n                                    <h5>You have not sent any cash offers yet</h5>\r\n                                    <p className=\"title\">This is where you’ll be able to track all the cash services that you sent</p>\r\n                                </Fragment>}\r\n                                {(settlement === 'exchange' && status === 'Sent') && <Fragment>\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/Send-Offers-Exchange.png\" alt=\"Not found\" width=\"120\" />\r\n                                    </figure>\r\n                                    <h5>You have not sent any exchange offers yet</h5>\r\n                                    <p className=\"title\">This is where you’ll be able to track all the exchange services that you sent</p>\r\n                                </Fragment>}\r\n\r\n                                {(settlement === 'cash' && status === 'Contracts') && <Fragment>\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/Send-Offers-Cash.png\" alt=\"Not found\" width=\"100\" />\r\n                                    </figure>\r\n                                    <h5>You have not accepted any cash offers yet</h5>\r\n                                    <p className=\"title\">This is where you’ll be able to track all of your cash accepted offers</p>\r\n                                </Fragment>}\r\n\r\n                                {(settlement === 'exchange' && status === 'Contracts') && <Fragment>\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/Received-Offers-Exchange.png\" alt=\"Not found\" width=\"100\" />\r\n                                    </figure>\r\n                                    <h5>You have not accepted any exchange offers yet</h5>\r\n                                    <p className=\"title\">This is where you’ll be able to track all of your exchange contracts</p>\r\n                                </Fragment>}\r\n\r\n                                {(settlement === 'cash' && status === 'Completed') && <Fragment>\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/Send-Offers-Cash.png\" alt=\"Not found\" width=\"100\" />\r\n                                    </figure>\r\n                                    <h5>You have not completed any cash offers yet</h5>\r\n                                    <p className=\"title\">This is where you’ll be able to track all of your cash accepted offers</p>\r\n                                </Fragment>}\r\n\r\n                                {(settlement === 'exchange' && status === 'Completed') && <Fragment>\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/Received-Offers-Exchange.png\" alt=\"Not found\" width=\"100\" />\r\n                                    </figure>\r\n                                    <h5>You have not completed any exchange offers yet</h5>\r\n                                    <p className=\"title\">This is where you’ll be able to track all of your exchange contracts</p>\r\n                                </Fragment>}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Fragment>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ContractItems);\r\n","import React, { Component, Fragment } from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Element } from 'react-scroll';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box } from '@material-ui/core';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { history } from '../../../../helpers/history';\r\nimport { commonHelper } from '../../../../helpers/common.helper';\r\n\r\nclass ProposalReceived extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuOpen: null,\r\n        };\r\n    }\r\n\r\n    toRedirect = (item) => {\r\n        const path = `/` + this.findPath(item.status).toLowerCase() + `/view/${item.id}`;\r\n        history.push(path);\r\n    };\r\n\r\n    findPath = (statusId) => {\r\n        const { module } = this.props;\r\n        let status = '';\r\n        switch (statusId) {\r\n            case 0:\r\n                status = \"Submitted\";\r\n                break;\r\n            case 3:\r\n                status = (module === \"common\\\\models\\\\UserItem\") ? \"Active\" : \"Offers\";\r\n                break;\r\n            case 2:\r\n                status = \"Declined\";\r\n                break;\r\n            case 5:\r\n                status = \"Completed\";\r\n                break;\r\n            case 11:\r\n                status = \"Bids\";\r\n                break;\r\n            case 1:\r\n            case 4:\r\n                status = \"Contracts\";\r\n                break;\r\n            default:\r\n                status = \"Submitted\";\r\n        }\r\n        return status;\r\n    };\r\n\r\n    render() {\r\n\r\n        const { results } = this.props;\r\n        return (\r\n            // <Element className=\"card\" name=\"offers_received\">\r\n            //     {(results && results.length > 0) ? <div className=\"card-text px-3\">\r\n            //         {results.map(item =>\r\n            //             (<div className=\"my-offers mb-0\" key={`contract-${item.id}`}>\r\n\r\n            //                 <div className=\"row align-items-center\">\r\n            //                     <div className=\"col-12 col-md-6 profile\">\r\n            //                         <div className=\"pic\">\r\n            //                             <NavLink to={`/user/public/about/${item.provider_id}`}><img src={item.provider.avatar} className=\"img-fluid rounded-circle\" width=\"50\" height=\"50\" aria-hidden alt=\"Images Katharine\" /></NavLink>\r\n            //                         </div>\r\n            //                         <div className=\"caption\">\r\n            //                             <h4><NavLink to={`/user/public/about/${item.provider_id}`}>{item.provider.name}</NavLink></h4>\r\n            //                             <div className=\"position\">\r\n            //                                 {item.provider.skills && item.provider.skills.map((skill) => skill.title).join(\", \")}\r\n            //                             </div>\r\n            //                             <p>{item.comment}</p>\r\n            //                         </div>\r\n            //                     </div>\r\n            //                     <div className=\"col col-md-4 rating\">\r\n            //                         <div className=\"w-100 align-items-center\" style={{lineHeight: '15px'}}>\r\n            //                             <small>({item.provider.avg_rating})</small>\r\n            //                             <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n            //                                 <Rating value={item.provider.avg_rating} readOnly />\r\n            //                             </Box>\r\n            //                             <small className=\"count\">({item.provider.count_rating})</small>\r\n            //                         </div>\r\n            //                         <div className=\"location\"><i className=\"fas fa-map-marker-alt text-primary\"></i> {item.provider && commonHelper.address(item.provider)}\r\n            //                        </div>\r\n            //                     </div>\r\n\r\n            //                     {item && <div className=\"col col-md-2 action\">\r\n            //                         <Link to={`/` + this.findPath(item.status).toLowerCase() + `/view/${item.id}`} className=\"btn btn-outline-info\">View Details</Link>\r\n            //                     </div>}\r\n\r\n            //                     {/*  proposal && proposal.status === 3 &&  <div className=\"col col-md-2 action text-right\">\r\n            //                             <button className=\"btn btn-info btn-accept\" onClick={ this.proposalAction('accepted')} >Accepted</button>\r\n            //             </div> */ }\r\n\r\n            //                     {/* <div className=\"col col-md-2 action text-right\">\r\n            //                             <IconButton onClick={this.handleClick} >\r\n            //                                 <MoreVertIcon />\r\n            //                             </IconButton>\r\n            //                             <Menu\r\n            //                                 anchorEl={menuOpen}\r\n            //                                 keepMounted\r\n            //                                 open={open}\r\n            //                                 onClose={this.handleClose}\r\n            //                             >\r\n            //                                 <MenuItem onClick={this.accept}>Accept</MenuItem>\r\n            //                                 <MenuItem onClick={this.decline}>Decline</MenuItem>\r\n            //                                 <MenuItem onClick={this.message}>Message</MenuItem>\r\n            //                                 <MenuItem onClick={this.counterOffer}>Submit Counter Offer</MenuItem>\r\n            //                             </Menu>\r\n            //             </div> */}\r\n            //                 </div>\r\n            //                 {item.settlement === 'cash' && item.budget && <div className=\"offers\">\r\n            //                     <span className=\"pr-2\">Final Offer</span> <big className=\"price text-primary\">${item.budget}</big>\r\n            //                 </div>}\r\n            //                 {item.settlement === 'exchange' && <div className=\"offers\">\r\n            //                     <span className=\"pr-2\">Final Offer</span> <big className=\"price text-primary\">{item.userItemProposalServices && item.userItemProposalServices.map((service) => service.title).join(\", \")}</big>\r\n            //                 </div>}\r\n\r\n            //             </div>)\r\n            //         )}\r\n            //     </div> : (<div className=\"card-body text-center\">None</div>)}\r\n            // </Element>\r\n            <Fragment>\r\n                {results && results.length ?\r\n                    <div class=\"box\">\r\n                        <div class=\"box-header\">\r\n                            <h3 class=\"box-title\">Proposals from Freelancers</h3>\r\n                        </div>\r\n                        <div class=\"box-body\">\r\n                            <div class=\"table-responsive\">\r\n                                <table id=\"example1\" class=\"table table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Freelancer</th>\r\n                                            {/* <th>Comment</th> */}\r\n                                            <th>Final Offer</th>\r\n                                            <th>Ratings</th>\r\n                                            <th>Location</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {results && results.map((item) =>\r\n                                            //    <div className=\"card service-box\" key={`e#${item.id}`}>\r\n\r\n                                            //             <div className=\"card-body\">\r\n                                            //                 <h5 className=\"card-title\">\r\n                                            //                     <Link to={`/${status.toLowerCase()}/view/${item.id}`}>{item.item && item.item.title}</Link>\r\n                                            //                 </h5>\r\n                                            //                 <div className=\"d-flex align-items-center\">\r\n                                            //                     <div className=\"col pl-0 d-flex align-items-center\">\r\n                                            //                         <div className=\"category text-truncate w-20 pr-2\">\r\n                                            //                             <span> {item.proposalRecipient && item.proposalRecipient.name }</span>\r\n                                            //                         </div>\r\n                                            //                         <div className=\"date pr-3 w-25\">\r\n                                            //                             { moment(item.updated_at * 1000).format('LLL') }\r\n                                            //                         </div>\r\n                                            //                         <div className=\"ratings d-flex align-items-center w-50\">\r\n                                            //                             {settlement === 'cash' &&\r\n                                            //                                 <div className=\"price d-flex align-items-center\"> {(item.budget === null) ? <small>Not Set</small> : `$${item.budget}`} {((item.status !== status_pending) && (item.status !== status_declined) && (item.status !== status_payment_confirm) && (item.status !== status_completed) && (item.status !== status_accepted_and_closed)) && < small className=\"text-info pt-2 pl-2\" title=\"Active Service\"></small>}</div>\r\n                                            //                             }\r\n                                            //                             {settlement === 'exchange' && <Fragment>\r\n                                            //                                 <div className=\"title pr-2\">Service Exchange</div>\r\n                                            //                                 {item.item && item.item.skills && item.item.skills.slice(0, 4).map((skill) => <div key={`${skill.id}`} className=\"badge badge-pill badge-secondary px-3\">{skill.title}</div>) }\r\n                                            //                             </Fragment>}\r\n                                            //                         </div>\r\n\r\n                                            //                         <div className=\"status w-15 text-left\">\r\n                                            //                             {item.isDispute && <span className={`badge mr-2 badge-info`}>Disputed</span> }\r\n                                            //                             <span className={`badge badge-${this.proposalStatus(item).cls}`}>{this.proposalStatus(item).title}</span>\r\n                                            //                         </div>\r\n                                            //                     </div>\r\n                                            //                     {<div className=\"auction d-flex align-items-center\">\r\n                                            //                         <div className=\"button d-flex\">\r\n                                            //                             <Link className=\"btn btn-sm\" to={`/${status.toLowerCase()}/view/${item.id}`}><i className=\"fas fa-eye\"></i></Link>\r\n                                            //                         </div>\r\n                                            //                     </div>}\r\n                                            //                 </div>\r\n                                            //                     {(status_declined === item.status) && <div><b>Decline Reason: </b> {item.comment}</div>}\r\n                                            //             </div>\r\n                                            //         </div>\r\n                                            <tr>\r\n                                                <td className=\"first\">\r\n                                                    <img src={item.actionBy.avatar} class=\"img-responsive img-circle pull-left\" width=\"50\" height=\"50\" alt=\"Image\" />\r\n                                                    <NavLink to={`/user/public/about/${item.provider_id}`}>{item.provider.name}</NavLink>\r\n                                                </td>\r\n                                                {/* <td>\r\n                                                    {item.comment}\r\n                                                </td> */}\r\n                                                <td>\r\n                                                    ${item.budget}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n                                                        <small>({item.provider.avg_rating})</small>\r\n                                                        <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                            <Rating value={item.provider.avg_rating} readOnly />\r\n                                                        </Box>\r\n                                                        <small className=\"count\">({item.provider.count_rating})</small>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                <i className=\"fas fa-map-marker-alt text-primary\"></i> {item.provider && commonHelper.address(item.provider)}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Link to={`/` + this.findPath(item.status).toLowerCase() + `/view/${item.id}`} className=\"btn btn-outline-info\">View Details</Link>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process, ) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ProposalReceived);\r\n","import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Fab, Box } from '@material-ui/core';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { proposalActions } from '../../../../common/redux/actions';\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\n\r\n\r\nclass DisputeForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                title: '',\r\n                description: '',\r\n                proposal_id: '',\r\n                status: ''\r\n            },\r\n            open: false,\r\n            item: null,\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        this._mount();\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this._mount();\r\n    }\r\n\r\n    _mount = () => {\r\n        const { open, item } = this.props;\r\n        let { formField } = this.state;\r\n        if (item) {\r\n            formField['proposal_id'] = item.id;\r\n            this.setState({ id: item.id, open, item, formField });\r\n        }\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'title', method: 'isEmpty', validWhen: false, message: 'Title is required.' },\r\n            { field: 'description', method: 'isEmpty', validWhen: false, message: 'Description is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { formField } = this.state;\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.disputeClose();\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n        if (validation.isValid) {\r\n            const { dispatch } = this.props;\r\n            const params = {};\r\n            params.proposal_id = formField.proposal_id;\r\n            params.title = formField.title;\r\n            params.description = formField.description;\r\n            dispatch(proposalActions.dispute(\"POST\", { userItemProposalDispute: params }));\r\n            this.setState(this.initializeState);\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { open } = this.props;\r\n        const { formField, submitted, validation } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n                className=\"offer-dialog\">\r\n                <DialogTitle><span className=\"text-primary\">Dispute</span>\r\n                    <Fab color=\"inherit\" onClick={this.handleClose}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </Fab>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form name=\"review\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Title</label>\r\n                            <input type=\"text\" name=\"title\" value={formField.title} onChange={this.handleChange} className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')} />\r\n                            {submitted && isValid.title.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.title.message} </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                                <textarea placeholder=\"Description ...\" onChange={this.handleChange}\r\n                                name=\"description\" rows={3} className={'form-control ' + (submitted && isValid.description.isInvalid ? 'is-invalid' : '')} />\r\n                            {submitted && isValid.description.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.description.message} </div>\r\n                            }\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"pb-3\">\r\n                    <button className=\"btn btn-info\" onClick={this.handleSubmit} autoFocus>Submit</button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(DisputeForm);","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { globalService as gs } from '../../../../common/services';\r\nimport { proposalActions } from '../../../../common/redux/actions';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\n\r\nconst status_new = 0;\r\nconst status_submission = 1;\r\nconst status_approved = 2;\r\nconst status_not_approved = 3;\r\nconst status_payment = 4;\r\nconst status_bid = 11;\r\n\r\n\r\nclass BidProposal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n            proposal: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    itemAction = (action = 'status_new', comment = null) => {\r\n        const { dispatch } = this.props;\r\n        const { token, item, type } = this.state;\r\n        let capitalizeType = gs.capitalize(type);\r\n        if (action === \"status_delete\") {\r\n            dispatch(proposalActions.milestone(\"DELETE\", {}, { item_id: item.id, proposal_id: item.proposal_id }));\r\n            return;\r\n        }\r\n\r\n        const param = {};\r\n        if (comment !== null) {\r\n            param.comment = comment;\r\n        }\r\n        param.userMessage = null;\r\n        let alert_message = null;\r\n\r\n\r\n\r\n        switch (action) {\r\n            /** Milestone status */\r\n            case 'status_new':\r\n                param.status = status_new;\r\n                param.userMessage = this.message(`New ${type} create.`);\r\n                alert_message = `You have create a new ${type}.`;\r\n                break;\r\n            case 'status_submission':\r\n                param.status = status_submission;\r\n                param.userMessage = this.message(`${capitalizeType} submitted.`);\r\n                alert_message = `You have submitted a ${type}.`;\r\n                break;\r\n            case 'status_approved':\r\n                param.status = status_approved;\r\n                param.userMessage = this.message(`${capitalizeType} Approved.`);\r\n                alert_message = `You have approved a ${type}.`;\r\n                break;\r\n            case 'status_not_approved':\r\n                param.status = status_not_approved;\r\n                param.userMessage = this.message(`${capitalizeType} Not Approved.`);\r\n                alert_message = `You have declined a ${type}.`;\r\n                break;\r\n            case 'status_payment':\r\n                param.status = status_payment;\r\n                param.userMessage = this.message(`Payment of ${type} ${item.title} is success`);\r\n                param.token = token;\r\n                param.is_paid = 1;\r\n                param.is_active = 2;\r\n                alert_message = `Payment of ${type} ${item.title} is success`;\r\n                break;\r\n            default:\r\n                param.status = status_new;\r\n                alert_message = `You have create a new ${type}.`;\r\n        }\r\n        param.action_by = gs.identity.user.id;\r\n        dispatch(proposalActions.milestone(\"POST\", { userMilestone: param }, { item_id: item.id, proposal_id: item.proposal_id }));\r\n        dispatch(alertSelectors.success(alert_message));\r\n    };\r\n\r\n\r\n\r\n\r\n    offerOpen = () => {\r\n        this.props.offerOpen();\r\n    };\r\n\r\n    proposalDeclined = () => {\r\n        this.props.proposalDeclined();\r\n    };\r\n\r\n    messageOpen = () => {\r\n        this.props.messageOpen();\r\n    };\r\n\r\n\r\n\r\n    isVisibleActions = () => {\r\n        const { proposal, item, isVisibleMessage } = this.props;\r\n        const isOwner = gs.isOwner(item.user_id);\r\n        return (isOwner &&\r\n            <div className=\"visible-action\">\r\n                <div className=\"mb-4\">\r\n                    <button className=\"btn btn-primary\" onClick={this.offerOpen}><i className=\"fas fa-redo-alt\"></i>Submit Offer</button>\r\n                    <button className=\"btn btn-info\" onClick={this.proposalDeclined}><i className=\"fas fa-times\"></i> Declined</button>\r\n                    {isVisibleMessage && <button className=\"btn btn-primary\" onClick={this.messageOpen}><i className=\"far fa-comments\"></i> Message</button>}\r\n                </div>\r\n            </div>);\r\n    };\r\n\r\n    render() {\r\n        const { item, proposal } = this.props;\r\n        return (<Fragment>\r\n            <div className=\"card mb-4 milestones\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"offer\">\r\n                        <h2>{`Cover Letter`}</h2>\r\n                    </div>\r\n                    {\r\n                        <div className={\"milestones-box \"} key={item.id}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">\r\n                                    {item.title}\r\n                                </h5>\r\n                                <div className=\"card-text\" dangerouslySetInnerHTML={{ __html: item.description }}></div>\r\n\r\n                                <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                    <div className=\"price\">Budget: {(item.budget === null) ? <small>Not Set</small> :\r\n                                        <big className=\"text-primary\">$ {item.budget}</big>}</div>\r\n                                </div>\r\n                                {this.isVisibleActions(item)}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Fragment>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(BidProposal);\r\n","import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Fab } from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\nimport { proposalActions } from '../../../../common/redux/actions';\r\nimport { itemService } from '../../../../common/services';\r\n\r\nclass CounterOffer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                settlement: '',\r\n                services: '',\r\n                price: '',\r\n                comment: '',\r\n                status: '',\r\n                validation: this.validator().valid(),\r\n            },\r\n            open: false,\r\n            servicesList: null,\r\n            item: null,\r\n            item_id: null\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        const { open, item_id, item } = this.props;\r\n        let { formField, servicesList } = this.state;\r\n        if (item) {\r\n            formField['settlement'] = item.settlement;\r\n            (servicesList === null) && itemService.service(\"GET\", null, { user_id: item.provider_id })\r\n                .then(response => (response.items && this.setState({ servicesList: response.items })))\r\n                .catch(exception => {\r\n                    console.log(exception);\r\n                });\r\n            this.setState({ id: item.id, open, item_id, item, formField });\r\n        }\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'settlement', method: 'isEmpty', validWhen: false, message: 'Service Settlement is required.' },\r\n            { field: 'comment', method: 'isEmpty', validWhen: false, message: 'Description is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = (e.target.selectedOptions && e.target.name === 'settlement') ?\r\n            Array.from(e.target.selectedOptions, (item) => item.value) :\r\n            e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.popUpClose();\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { id, formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n\r\n        if (validation.isValid) {\r\n            const { dispatch, } = this.props;\r\n            const params = {};\r\n            params.budget = formField.budget;\r\n            params.services = formField.services && formField.services.map(item => item.value);\r\n            params.comment = formField.comment;\r\n            params.status = 3;\r\n            const param = { proposal_id: id };\r\n            dispatch(proposalActions.proposal(\"POST\", { userProposal: params }, param));\r\n            this.setState(this.initializeState);\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { open } = this.props;\r\n        const { formField, item, servicesList } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n                className=\"offer-dialog\">\r\n                <DialogTitle><span className=\"text-primary\">Counter Offer</span>\r\n                    <Fab color=\"inherit\" onClick={this.handleClose}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </Fab>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form name=\"proposal\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                        {item && item.settlement === 'both' && <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-radio mb-2\">\r\n                                <input type=\"radio\"\r\n                                    name=\"settlement\"\r\n                                    checked={(formField.settlement === 'cash')}\r\n                                    id=\"settlement-cash\" value={'cash'}\r\n                                    onChange={this.handleChange}\r\n                                    className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"settlement-cash\">Service Cash</label>\r\n                            </div>\r\n                            <div className=\"custom-control custom-radio\">\r\n                                <input type=\"radio\"\r\n                                    name=\"settlement\"\r\n                                    checked={(formField.settlement === 'exchange')}\r\n                                    id=\"settlement-exchange\" value={'exchange'}\r\n                                    onChange={this.handleChange}\r\n                                    className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\" htmlFor=\"settlement-exchange\">Service Exchange</label>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        {(formField.settlement === 'cash') && <div className=\"form-group\">\r\n                            <label>Enter Amount</label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"number\" className=\"form-control\" name=\"price\" placeholder=\"Amount\" onChange={this.handleChange} />\r\n                                <div className=\"input-group-append\">\r\n                                    <span className=\"input-group-text\">$</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        {servicesList && (formField.settlement === 'exchange') && <div className=\"form-group\">\r\n                            <label>Select Services</label>\r\n                            <Select\r\n                                className=\"multiple-select mb-2\"\r\n                                classNamePrefix=\"multi\"\r\n                                isSearchable isMulti\r\n                                defaultValue={formField.services}\r\n                                name=\"services\"\r\n                                onChange={this.handleSelect}\r\n                                options={servicesList.map(item => ({ value: item.id, label: item.title }))} />\r\n                        </div>}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Message</label>\r\n                            <textarea className=\"form-control\" placeholder=\"Message ...\" onChange={this.handleChange}\r\n                                name=\"comment\" rows={3} />\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className=\"pb-3\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} autoFocus>Submit</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(CounterOffer);","import React, { Component, Fragment } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { Box } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Link, Element } from 'react-scroll';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { globalService as gs, itemService } from \"../../../common/services\";\r\nimport { ProposalReceived } from \"../Contract/partials\";\r\nimport { ModuleHelper } from '../../../helpers/module.helper';\r\n\r\nclass ServiceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n            id: null,\r\n            is_redirected: false,\r\n            galleryItems: [],\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { match } = this.props;\r\n        const id = match.params.id;\r\n        this.setState({ id: id ? id : null });\r\n        itemService.service(\"GET\", null, { item_id: id }).then(res => {\r\n            const item = res.model;\r\n            if (item){\r\n                if (item && item.user && !gs.isOwner(item.user.id)) {\r\n                    this.setState({ is_redirected: true });\r\n                }\r\n\r\n                if (item && item.media) {\r\n                    this.setState({ item: item, galleryItems: item.media.image });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { item } = this.state;\r\n        if (item && item.user && !gs.isOwner(item.user.id)) {\r\n            this.setState({ is_redirected: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { item, is_redirected, galleryItems } = this.state;\r\n        if (item && is_redirected === true) {\r\n            return (<Redirect to={`/user/public/service/view/${item.id}`} />)\r\n        }\r\n        return (<Main>\r\n            {item && <div className=\"individual-service bg-body\">\r\n                <DocumentTitle title={item && item.title} />\r\n                <div className=\"bg-white bottom-shadow w-100 float-left\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1>{item && item.title}</h1>\r\n                                <div className=\"d-flex align-items-center headings flex-wrap\">\r\n                                    <div className=\"col pl-0 d-flex align-items-center flex-wrap mobile-width\">\r\n                                        <div className=\"sold\">\r\n                                            {item && item.category && item.category.title}\r\n                                        </div>\r\n                                        <div className=\"sold\">{(item && item.proposal_count === 0) ? 'Not Booked' : `${item && item.proposal_count} Times Booked`} </div>\r\n                                        <div className=\"price\">{(item && item.budget === null) ? <small>Not Set</small> : `$${item && item.budget}`}</div>\r\n                                        <div className=\"ratings d-flex align-items-center\">\r\n                                            {(parseFloat(item && item.avg_rating) !== 0) && <small>({parseFloat(item && item.avg_rating)})</small>}\r\n                                            <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                <Rating value={parseFloat(item && item.avg_rating)} readOnly />\r\n                                            </Box>\r\n                                            {(item && item.proposal_count !== 0) && <small className=\"count\">{item.proposal_count}</small>}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    {item.received_offers && <div className=\"auction d-flex align-items-center\">\r\n                                        <div className=\"offer\">\r\n                                            <Link className=\"btn btn-sm btn-outline-primary\" to=\"offers_received\" smooth={true} duration={1000}>Offers Received ({item.received_offers})</Link>\r\n                                        </div>\r\n                                    </div>}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-12\">\r\n                                {galleryItems &&\r\n                                    <Fragment>\r\n                                        <AliceCarousel className=\"mb-3\"\r\n                                            dotsDisabled={true}\r\n                                            buttonsDisabled={true}\r\n                                            slideToIndex={1}\r\n                                            fadeOutAnimation={true}\r\n                                            items={galleryItems.map((img) => (<div key={img.id} className=\"item\"><img src={img.banner} alt=\"Gallery\" className=\"img-fluid\" /></div>))}\r\n                                            ref={(el) => (this.Carousel = el)}\r\n                                        />\r\n                                        <nav className=\"d-flex galleryThumb\">{galleryItems.map((thumb, i) => (<div className=\"thumb\" key={`drr${i}`} onClick={() => this.Carousel.slideTo(i)}><img src={thumb.thumb} alt=\"Gallery\" className=\"img-fluid\" /></div>))}</nav>\r\n                                    </Fragment>\r\n                                }\r\n\r\n\r\n                                {/*<div className=\"w-100 mb-3\">\r\n                                    <LazyLoadImage alt=\"image\" className=\"img-fluid\" src=\"/images/service-individual-slider.jpg\" effect=\"blur\"/>\r\n                                </div>\r\n                                <div className=\"row thumbs mb-2\">\r\n                                    {item && item.media.image && item.media.image.map((image) =>\r\n                                        <div className=\"col\" key={image.id}>\r\n                                            <LazyLoadImage alt=\"image\" className=\"img-fluid w-100\" src={image.path} effect=\"blur\"/>\r\n                                        </div>\r\n                                    )}\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <nav className=\"nav nav-list\">\r\n                                    <Link className=\"nav-link active\" to=\"description\" smooth={true} duration={1000}>Description</Link>\r\n                                    {item && item.media.docs && <Link className=\"nav-link\" to=\"portfolio\" smooth={true} duration={1000}>Portfolio</Link>}\r\n                                    {item.received_offers && <Link className=\"nav-link\" to=\"offers_received\" smooth={true} duration={1000}>Offers Received</Link>}\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"w-100 float-left pt-lg-4 pt-3\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <Element className=\"card\" name=\"description\">\r\n                                    <div className=\"card-body px-0\">\r\n                                        <h5 className=\"card-title px-3\">Description</h5>\r\n                                        <hr />\r\n                                        <div className=\"card-text px-3\">\r\n                                            <div className=\"custom-description\" dangerouslySetInnerHTML={{__html: item && item.description}}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Element>\r\n                                {item && item.media.docs && <Element className=\"card\" name=\"portfolio\">\r\n                                    <div className=\"card-body px-0\">\r\n                                        <h5 className=\"card-title px-3\">Portfolio</h5>\r\n                                        <hr />\r\n                                        <div className=\"card-text pt-4 px-3\">\r\n                                            <div className=\"row\">\r\n                                                {item && item.media.docs && item.media.docs.map((doc) =>\r\n                                                    <div className=\"col-lg-2 col-md-3 col-sm-4 col-6\" key={doc.id}>\r\n                                                        <div className=\"docs text-center mb-4\">\r\n                                                            {(doc.mimetype === 'application/pdf') ? <i className=\"far fa-file-pdf fa-5x\"></i>\r\n                                                                : (doc.mimetype === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') ?\r\n                                                                    <i className=\"far fa-file-word fa-5x\"></i>\r\n                                                                    // : (doc.mimetype === 'txt') ? <i className=\"far fa-file-alt fa-5x\"></i>\r\n                                                                    // : (doc.mimetype === 'powerpoint') ? <i className=\"far fa-file-powerpoint fa-5x\"></i>\r\n                                                                    // : (doc.mimetype === 'exel') ? <i className=\"far fa-file-excel fa-5x\"></i>\r\n                                                                    // : (doc.mimetype === 'archive') ? <i className=\"far fa-file-archive fa-5x\"></i>\r\n                                                                    : <i className=\"far fa-file fa-5x\"></i>}\r\n                                                            <h6 className=\"text-truncate1\">\r\n                                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${doc.path}`} download>{doc.filename}</a>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                                {(item && item.media.docs && item.media.docs.length === 0) && <div className=\"col-12\">Portfolio not found</div>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Element>}\r\n\r\n                                {item && item.userItemProposals && <div className=\"card-body px-0\">\r\n                                    <h5 className=\"card-title px-3\">Offers Received ({item.received_offers})</h5>\r\n                                    <hr />\r\n                                    { <ProposalReceived results={item.userItemProposals} module={ModuleHelper.UserService}/>}\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default ServiceView;\r\n","import React, { Component } from 'react';\r\nimport {Main} from \"../../layout\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass ServiceSuccess  extends Component {\r\n    render() {\r\n        return (<Main>\r\n            <div className=\"create-service bg-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10 col-12 mx-auto\">\r\n                            <div className=\"card custom-card success-service py-md-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"image mb-3\">\r\n                                        <img src=\"/images/success1.PNG\" alt=\"\" className=\"img-fluid\" />\r\n                                    </div>\r\n                                    <h2>Your information has been submited successfully</h2>\r\n                                    {/* <p>This information first goes to verify and approval. we ‘ll send you notification before publishing. <br /> Generally it will take 24-48 hours to review your</p> */}\r\n                                    <p className=\"mb-0\"><NavLink to={'/services'} className=\"btn btn-primary text-uppercase px-3 active font-weight-bold\">Return to services</NavLink></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default ServiceSuccess;\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { Box } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport CounterOffer from './partials/CounterOffer';\r\nimport { globalService as gs, itemService } from '../../../common/services';\r\n\r\n\r\nclass ServiceProposalView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            setOpen: false,\r\n            proposal: null,\r\n            service: null,\r\n            settlement: null,\r\n            proposalServices: null,\r\n            proposalHistories: null,\r\n            buyer: null,\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { match } = this.props;\r\n        const id = match.params.id;\r\n        this.setState({ id: id ? id : null });\r\n        itemService.proposal(\"GET\", null, { proposal_id: id }).then(res => {\r\n            const item = res.model;\r\n            if (item && item.user && !gs.isOwner(item.user.id)) {\r\n                this.setState({ is_redirected: true });\r\n            }\r\n            this.setState({ proposal: item, service: item.item, settlement: item.settlement, proposalServices: item.userItemProposalServices, buyer: item.provider, proposalHistories: item.userItemProposalHistories });\r\n        });\r\n    }\r\n\r\n    popUpOpen = () => {\r\n        this.setState({\r\n            setOpen: true\r\n        })\r\n    };\r\n\r\n    popUpClose = () => {\r\n        this.setState({\r\n            setOpen: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { proposal, service, buyer, settlement, proposalServices, proposalHistories, setOpen } = this.state;\r\n\r\n\r\n\r\n\r\n        return (<Main>\r\n            <DocumentTitle title=\"Service Proposal\" />\r\n            <CounterOffer open={setOpen} item={proposal} popUpClose={this.popUpClose} />\r\n            {proposal && service && <div className=\"service-proposal bg-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1>Service Proposal</h1>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-12\">\r\n                            <div className=\"card mb-4 serviceInfo\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title text-primary\">Service Info</h5>\r\n                                    <div className=\"image\">\r\n                                        <img className=\"img-fluid\" src={service.cover} alt=\"Images\" />\r\n                                        <div className=\"fixed badge badge-primary\">{settlement}</div>\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <p>{service.description}</p>\r\n                                        <div className=\"sold\">{service.proposal_count} Service Sold</div>\r\n                                        <div className=\"rating d-flex align-items-center\">\r\n                                            <small>({service.avg_rating})</small>\r\n                                            <Box component=\"fieldset\" mx={1.0} borderColor=\"transparent\">\r\n                                                <Rating value={parseInt(service.avg_rating)} readOnly size=\"small\" />\r\n                                            </Box>\r\n                                            <small className=\"count\">({service.proposal_count})</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {buyer && <div className=\"card mb-4 buyerInfo\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <h5 className=\"card-title text-primary text-left\">Buyers Details</h5>\r\n                                    <div className=\"image\">\r\n                                        <img className=\"rounded-circle\" src={buyer.avatar} alt=\"Images\" width=\"100\" height=\"100\" />\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <h4>{buyer.name}</h4>\r\n                                        { /* <div className=\"sold\">35 Service Sold</div> */}\r\n                                        <div className=\"rating d-flex align-items-center justify-content-center\">\r\n                                            <small>({buyer.avg_rating})</small>\r\n                                            <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                <Rating value={buyer.avg_rating} readOnly size=\"small\" />\r\n                                            </Box>\r\n                                            <small className=\"count\">({buyer.count_rating})</small>\r\n                                        </div>\r\n                                        <h6>{buyer.about}</h6>\r\n                                        {/* <h6>Marketing Agent and SEO Expert <br /> Cape town, Paris</h6> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n\r\n                        </div>\r\n\r\n                        {proposal && <div className=\"col-md-8 col-12\">\r\n                            <div className=\"card mb-4 offerInfo\">\r\n                                <div className=\"card-body p-3\">\r\n                                    <div className=\"bg-body p-3\">\r\n                                        <div className=\"offer\">\r\n                                            <h5>Offer Type</h5>\r\n                                            <div className=\"fixed badge badge-primary\">{settlement}</div>\r\n                                        </div>\r\n                                        <div className=\"initial-offer\">\r\n                                            <h5>Initial Offer</h5>\r\n                                            {settlement === 'exchange' &&\r\n                                                <div className=\"chip-group\">\r\n                                                    {proposalServices.map(item => {\r\n                                                        return ((item.action_by === proposal.provider_id) && (<div className=\"badge badge-secondary\" key={`proposal-service-${item.service_id}-${item.action_by}`}>{item.title.toUpperCase()}</div>))\r\n                                                    })}\r\n                                                </div>}\r\n                                            {settlement === 'cash' &&\r\n                                                <div className=\"chip-group\">\r\n                                                    <div className=\"badge badge-secondary\">{proposal.budget}</div>\r\n                                                </div>}\r\n\r\n                                            <div className=\"chip-group\">\r\n                                                {proposalHistories.map(item => {\r\n                                                    return ((item.action_by === proposal.provider_id) && (<div className=\"badge badge-secondary\" key={`proposal-history-${item.id}`}>{item.comment}</div>))\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"initial-offer\">\r\n                                            <h5>Counter Offer</h5>\r\n                                            {settlement === 'exchange' &&\r\n                                                <div className=\"chip-group\">\r\n                                                    {proposalServices.map(item => {\r\n                                                        return ((item.action_by === service.user_id) && (<div className=\"badge badge-secondary\" key={`proposal-service-${item.service_id}`}>{item.title.toUpperCase()}</div>))\r\n                                                    })}\r\n                                                </div>}\r\n                                            {settlement === 'cash' &&\r\n                                                <div className=\"chip-group\">\r\n                                                    <div className=\"badge badge-secondary\">{proposal.budget}</div>\r\n                                                </div>}\r\n                                            <div className=\"chip-group\">\r\n                                                {proposalHistories.map(item => {\r\n                                                    return ((item.action_by === service.user_id) && (<div className=\"badge badge-secondary\" key={`proposal-history-${item.id}`}>{item.comment}</div>))\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"action\">\r\n                                            {(proposal.action_by !== gs.identity.user.id) &&\r\n                                                <div>\r\n                                                    <h5>Would you like to accept the offer request ?</h5>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <button className=\"btn btn-success\"><i className=\"fas fa-times\"></i> Accept</button>\r\n                                                        <button className=\"btn btn-info\"><i className=\"fas fa-check\"></i> Decline</button>\r\n                                                    </div>\r\n                                                </div>}\r\n                                            <button className=\"btn btn-primary\" onClick={this.popUpOpen}><i className=\"fas fa-redo-alt\"></i> Request a Different to Exchange</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default ServiceProposalView;","import React, { useEffect, useState } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    Checkbox,\r\n    TextField,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { itemService } from \"../../../../common/services\";\r\n\r\n\r\nconst ConnectionsDialog = (props) => {\r\n\r\n    const [checked, setChecked] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [connections, setConnections] = useState([]);\r\n\r\n    const { onClose, open, connection, takingData } = props;\r\n    let connectionList = connection && connection.data && connection.data.items;\r\n\r\n    const listOfConnection = new Set();\r\n    useEffect(() => {\r\n        // Your code here\r\n        //props && Object.getOwnPropertyNames(props.connection).length === 0 && props.dispatch(userActions.connection(\"GET\", null, { key:\"my-connections\", status:1 }));\r\n\r\n        itemService.inviteMember(\"GET\", null).then(data => {\r\n            setConnections(data.items);\r\n            takingData(data.items)\r\n        });\r\n\r\n        setChecked((props && props.selected) ? props.selected : []);\r\n\r\n    }, [connectionList]);\r\n\r\n    function handleClose() {\r\n        onClose();\r\n    }\r\n\r\n    function handleChange(e, value) {\r\n        listOfConnection.has(e.target.value) ? listOfConnection.delete(e.target.value) : listOfConnection.add(e.target.value);\r\n    }\r\n\r\n    function handleOk() {\r\n        checked ? onClose(checked) : onClose();\r\n    }\r\n\r\n    const handleToggle = value => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        itemService.inviteMember(\"GET\", null, { q: search }).then(data => {\r\n            setConnections(data.items);\r\n            setChecked(checked);\r\n        });\r\n    };\r\n\r\n    console.log(\"connections:\", connections);\r\n    // console.log(\"function:\", takingData);\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-dialog-title\"\r\n            open={open}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth={true}\r\n            maxWidth={'sm'}\r\n            className=\"offer-dialog connection-dialog\">\r\n            <DialogTitle id=\"simple-dialog-title\">\r\n                Select members from your connection\r\n                {/*<Fab color=\"inherit\" onClick={handleClose}>*/}\r\n                {/*<i className=\"fas fa-times\"></i>*/}\r\n                {/*</Fab>*/}\r\n            </DialogTitle>\r\n            <DialogContent dividers className={''}>\r\n                <div className=\"peple-search\">\r\n                    <div className=\"input-group flex-nowrap\">\r\n                        <TextField\r\n                            id=\"outlined-bare\"\r\n                            defaultValue=\"\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"Select Members\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ 'aria-label': 'bare', 'className': 'pl-3' }}\r\n                            onChange={e => setSearch(e.target.value)}\r\n                            className={'w-100'}\r\n                        />\r\n                        <div className=\"input-group-prepend\">\r\n                            <button className=\"btn\" type=\"button\" onClick={onSubmit}><SearchIcon /></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <List style={{ marginLeft: '-24px', marginRight: '-24px' }} dense>\r\n                    {connections && connections.map((item) => {\r\n                        return (\r\n                            <ListItem key={Math.random()} button>\r\n                                <ListItemAvatar style={{ marginLeft: '10px' }}>\r\n                                    <Avatar alt={item.name} src={item.avatar} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText id={item.id} primary={item.name} />\r\n                                <ListItemSecondaryAction>\r\n                                    <Checkbox\r\n                                        edge=\"end\"\r\n                                        onChange={handleToggle(item.id)}\r\n                                        checked={checked.indexOf(item.id) !== -1}\r\n                                        inputProps={{ 'aria-labelledby': item.id }}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    }\r\n                    )}\r\n                    {(connections && connections.length === 0) && <div className=\"p-3 text-center\">Connections not found</div>}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                <Button onClick={handleOk} color=\"primary\">Ok</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst connectionSelector = createSelector(\r\n    state => state.connection,\r\n    connection => connection\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    connectionSelector,\r\n    (process, connection) => ({\r\n        process, connection\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ConnectionsDialog);\r\n","import React, {Component} from 'react';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button, TextField\r\n} from '@material-ui/core';\r\n\r\nclass QuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            question: '',\r\n            questions: [],\r\n        };\r\n        this.initializeState = this.state;\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        const {open, questions} = this.props;\r\n        this.setState({open: open, questions: questions});\r\n    }\r\n\r\n    onChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({question: e.target.value});\r\n    };\r\n\r\n    handleQuestion = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.question.length > 0) {\r\n            this.setState({\r\n                question: '',\r\n                questions: [...this.state.questions, this.state.question]\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            question: '',\r\n        });\r\n        this.props.onClose([]);\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            question: '',\r\n        });\r\n        this.props.onClose(this.state.questions);\r\n    };\r\n\r\n    render() {\r\n        const {question, questions} = this.state;\r\n        const {open} = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"simple-dialog-title\"\r\n                open={open}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n                className=\"offer-dialog connection-dialog\">\r\n                <DialogTitle id=\"simple-dialog-title\">Write a new question</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div className=\"peple-search\">\r\n                        <div className=\"input-group flex-nowrap\">\r\n                            <TextField name=\"question\" variant=\"outlined\" style={{paddingLeft: '10px', width: '100%'}}\r\n                                       inputProps={{'aria-label': 'bare', 'placeholder': 'Type your question'}}\r\n                                       value={question} onChange={this.onChange}/>\r\n                            <div className=\"input-group-prepend\">\r\n                                <button className=\"btn btn-primary text-nowrap\" onClick={this.handleQuestion} disabled={!question}>Add Question</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {questions && questions.length > 0 &&\r\n                    <ul className={'question-list'}>{questions.map((item, index) => <li key={index}>{item}</li>)}</ul>}\r\n                    {/*{(questions && questions.length === 0) && <div>Question not found</div>}*/}\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={this.handleOk} color=\"primary\">Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(QuestionDialog);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Element, Link, animateScroll as scroll } from 'react-scroll';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from 'react-select';\r\nimport { Switch } from \"@material-ui/core\";\r\n\r\nimport { defaultActions, serviceActions, userActions } from \"../../../../common/redux/actions\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport FormValidator from \"../../../../helpers/FormValidator\";\r\nimport { fileManupulate } from \"../../../../helpers/file.helper\";\r\nimport { ConnectionsDialog, QuestionDialog } from \"../dialog\";\r\nimport { history } from \"../../../../helpers/history\";\r\nimport FileUploader from '../../common/FileUploader';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport { globalService as gs, itemService } from '../../../../common/services';\r\nimport { alertSelectors, processSelectors } from \"../../../../common/redux/selectors\";\r\n\r\nconst deadlineList = [\r\n    { id: 1, value: 'Up to 3 days' },\r\n    { id: 2, value: 'Up to 1 week' },\r\n    { id: 3, value: 'Up to 1 month' },\r\n    { id: 4, value: 'Up to 3 months' },\r\n    { id: 5, value: 'Up to 6 months' },\r\n    { id: 6, value: 'Up to 1 year' },\r\n];\r\n\r\nvar validService = true;\r\nvar validBudget = true;\r\nvar validConnections = true;\r\n\r\nclass JobForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            formField: {\r\n                title: '',\r\n                description: '',\r\n                category_id: '',\r\n                subcategory_id: '',\r\n                settlement: 'exchange',\r\n                //type: 'none',\r\n                type: 'hourly',\r\n                budget: '',\r\n                deadline: 0,\r\n                duration: '',\r\n                locations: [],\r\n                visibility: 'public',\r\n                is_nda: 0,\r\n                is_publish: 'publish', // 'draft, || 'publish'\r\n                is_closed: 0,\r\n                status: 1,\r\n                skills: [],\r\n                connections: [],\r\n                questions: [],\r\n                customquestions: [],\r\n                services: [],\r\n                files: [],\r\n            },\r\n            connectionDialogOpen: false,\r\n            questionDialogOpen: false,\r\n            loading: false,\r\n            id: null,\r\n            categories: null,\r\n            subCategories: null,\r\n            skills: null,\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n        this.initializeState = this.state;\r\n    }\r\n\r\n    validator() {\r\n        return new FormValidator([\r\n            { field: 'category_id', method: 'isEmpty', validWhen: false, message: 'category is required.' },\r\n            { field: 'title', method: 'isEmpty', validWhen: false, message: 'Title is required.' },\r\n            { field: 'description', method: 'isEmpty', validWhen: false, message: 'Description is required.' },\r\n            { field: 'skills', method: 'isEmpty', validWhen: false, message: 'Skills is required.' },\r\n            { field: 'services', method: 'isEmpty', validWhen: validService, message: 'Services is required.' },\r\n            { field: 'budget', method: 'isEmpty', validWhen: validBudget, message: 'Budget is required.' },\r\n            { field: 'connections', method: 'isEmpty', validWhen: validConnections, message: 'Connections is required.' },\r\n        ]);\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { dispatch, id, categories, skills, formField, countries, questions, services } = this.props;\r\n        Object.getOwnPropertyNames(categories).length === 0 && dispatch(defaultActions.categories());\r\n        Object.getOwnPropertyNames(skills).length === 0 && dispatch(defaultActions.skills());\r\n        Object.getOwnPropertyNames(countries).length === 0 && dispatch(defaultActions.countries());\r\n        Object.getOwnPropertyNames(questions).length === 0 && dispatch(defaultActions.questions());\r\n        Object.getOwnPropertyNames(services).length === 0 && dispatch(serviceActions.index(\"GET\", null, { user_id: gs.identity.user.id }));\r\n        this.setState({ id: (id ? id : null) });\r\n\r\n        if (id) {\r\n            //this.setState({ formField: formField });\r\n            const html = formField.description;\r\n            const contentBlock = htmlToDraft(html);\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            const editorState = EditorState.createWithContent(contentState);\r\n            this.setState({\r\n                formField: {\r\n                    title: formField.title,\r\n                    description: editorState,\r\n                    category_id: formField.category_id,\r\n                    subcategory_id: formField.subcategory_id,\r\n                    settlement: formField.settlement,\r\n                    type: formField.type,\r\n                    budget: (formField.budget === null) ? '' : formField.budget,\r\n                    deadline: formField.deadline,\r\n                    duration: formField.duration,\r\n                    locations: formField.locations,\r\n                    visibility: formField.visibility,\r\n                    is_nda: formField.is_nda,\r\n                    is_publish: formField.is_publish,\r\n                    is_closed: formField.is_closed,\r\n                    status: formField.status,\r\n                    skills: formField.skills,\r\n                    connections: formField.connections,\r\n                    questions: formField.questions,\r\n                    customquestions: formField.customquestions,\r\n                    services: formField.services,\r\n                    files: formField.files,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleChangeNda = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = (e.target.checked === true) ? 1 : 0;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    connectionOpen = () => {\r\n        this.setState({\r\n            connectionDialogOpen: true\r\n        })\r\n    };\r\n\r\n    questionOpen = () => {\r\n        this.setState({\r\n            questionDialogOpen: true\r\n        })\r\n    };\r\n\r\n    handleConnection = (connections) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['connections'] = connections ? Array.from(connections) : [];\r\n        this.setState({\r\n            formField,\r\n            connectionDialogOpen: false,\r\n        });\r\n    };\r\n\r\n    handleQuestion = (customquestions) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['customquestions'] = customquestions;\r\n        this.setState({\r\n            formField,\r\n            questionDialogOpen: false,\r\n        });\r\n    };\r\n\r\n    onEditorStateChange = (description) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['description'] = description;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSubmit = (e, action) => {\r\n        //e.preventDefault();\r\n        if (e !== null) e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n\r\n        this.setState({ validation, submitted: true });\r\n        if (validation.isValid) {\r\n            const { dispatch, upload } = this.props;\r\n            let filesArr = upload.files ? upload.files : [];\r\n            const params = {};\r\n            params.files = fileManupulate(filesArr, this.state.formField.files, this.state.id);\r\n            params.category_id = (formField.subcategory_id && formField.subcategory_id.value) ?\r\n                formField.subcategory_id.value :\r\n                formField.category_id.value;\r\n\r\n            params.title = formField.title;\r\n            params.description = draftToHtml(convertToRaw(formField.description.getCurrentContent()));\r\n            params.settlement = formField.settlement ? formField.settlement : 'both';\r\n            params.type = formField.type;\r\n            params.budget = formField.budget;\r\n            params.visibility = formField.visibility ? formField.visibility : 'public';\r\n            params.is_nda = formField.is_nda;\r\n            params.status = formField.status;\r\n            params.is_publish = action ? action : 'publish';\r\n            params.is_closed = formField.is_closed && formField.is_closed.value;\r\n            params.duration = formField.duration;\r\n            params.deadline = formField.deadline && formField.deadline.value;\r\n            params.locations = formField.locations && formField.locations.map(item => item.value);\r\n            params.skills = formField.skills && formField.skills.map(item => item.value);\r\n            params.services = formField.services && formField.services.map(item => item.value);\r\n            const questions = formField.questions && formField.questions.map(item => ({ 'id': item.value, \"question\": item.label }));\r\n            const customquestions = formField.customquestions && formField.customquestions.map(item => ({ 'id': null, \"question\": item }));\r\n            params.questions = [...questions, ...customquestions];\r\n            params.connections = formField.connections;\r\n\r\n            const param = (this.state.id === null) ? null : { item_id: this.state.id };\r\n            //dispatch(userActions.job(\"POST\", { userItem: params }, param));\r\n            const method = \"POST\";\r\n            dispatch(processSelectors.start());\r\n            itemService.job(method, { userItem: params }, param)\r\n                .then(response => {\r\n                    console.log('response', response)\r\n                    if (response.success === true) {\r\n                        if (params.is_publish === 'draft') {\r\n                            dispatch(alertSelectors.success('You have successfully saved the job as draft. Please go to \"My Jobs\", and then select \"Drafts\" to complete and submit the job posting.'));\r\n                        } else {\r\n                            let action = (method === \"POST\" && param !== null) ? 'update' : 'add';\r\n                            dispatch(alertSelectors.success(`You did successfully ${action} the job post.`));\r\n                            gs.isNotified(response.recipients);\r\n                        }\r\n                    } else {\r\n                        let action = (method === \"POST\" && param !== null) ? 'update' : 'add';\r\n                        dispatch(alertSelectors.success(`You did not ${action} the job post.`));\r\n                    }\r\n                    this.setState(this.initializeState);\r\n                    history.push('/job/success');\r\n                    dispatch(processSelectors.stop());\r\n                })\r\n                .catch(exception => {\r\n                    gs.showErrors(dispatch, exception, alertSelectors);\r\n                    dispatch(processSelectors.stop());\r\n                });\r\n\r\n        }\r\n        scroll.scrollToTop();\r\n    };\r\n\r\n    saveDraft = () => {\r\n        this.handleSubmit(null, 'draft');\r\n    };\r\n\r\n    takingData = (data) => {\r\n        this.setState({\r\n            connectionToShow: data\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { id, formField, submitted, validation, connectionDialogOpen, questionDialogOpen } = this.state;\r\n        const { categories, skills, upload, countries, questions, services } = this.props;\r\n        let categoriesList = categories.data ? categories.data.filter(item => (item.parent_id === null || item.parent_id === '')) : [];\r\n        let subCategoriesList = categories.data && formField.category_id.value && categories.data.filter(el => (el.parent_id === formField.category_id.value));\r\n        let skillsList = skills.data ? skills.data : [];\r\n        let countriesList = countries.data ? countries.data : [];\r\n        let questionsList = questions.data ? questions.data : [];\r\n        let servicesList = services.data ? services.data.items : [];\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        let connections = formField.connections;\r\n\r\n        switch (formField.settlement) {\r\n            case 'both':\r\n                validService = validBudget = false;\r\n                break;\r\n            case 'exchange':\r\n                validService = false;\r\n                validBudget = true;\r\n                break;\r\n            case 'cash':\r\n                validService = true;\r\n                validBudget = false;\r\n                break;\r\n            default:\r\n                validService = true;\r\n                validBudget = true;\r\n                validConnections = true;\r\n\r\n        }\r\n\r\n        validConnections = (formField.visibility === 'private') ? false : true;\r\n\r\n        return (\r\n            <div className=\"col-md-12 col-12\">\r\n                <div className=\"heading mb-xl-3 mb-2\">\r\n                    <h1 className=\"text-center font-weight-bold\">Post a Job</h1>\r\n                </div>\r\n                <div className=\"wizard\">\r\n                    <div className=\"wizard-inner\">\r\n                        <ul className=\"nav nav-tabs d-flex justify-content-around\">\r\n                            <li className=\"nav-item\" style={{ width: '20%' }}>\r\n                                <Link className=\"nav-link\" to=\"job_description\" smooth={true} duration={1000}>\r\n                                    <span className=\"round-tab\">1</span>\r\n                                    <span className=\"text\">Job Description</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\" style={{ width: '20%' }}>\r\n                                <Link className=\"nav-link\" to=\"expertise_skills\" smooth={true} duration={1000}>\r\n                                    <span className=\"round-tab\">2</span>\r\n                                    <span className=\"text\">Expertise & Skills</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\" style={{ width: '20%' }}>\r\n                                <Link className=\"nav-link\" to=\"payment_settlement\" smooth={true} duration={1000}>\r\n                                    <span className=\"round-tab\">3</span>\r\n                                    <span className=\"text\">Payment Settlement</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\" style={{ width: '20%' }}>\r\n                                <Link className=\"nav-link\" to=\"visiblity\" smooth={true} duration={1000}>\r\n                                    <span className=\"round-tab\">4</span>\r\n                                    <span className=\"text\">Visiblity</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\" style={{ width: '20%' }}>\r\n                                <Link className=\"nav-link\" to=\"interview_details\" smooth={true} duration={1000}>\r\n                                    <span className=\"round-tab\">5</span>\r\n                                    <span className=\"text\">Interview Questions</span>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <Element className=\"card custom-card\" name=\"job_description\">\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"pb-0 pb-lg-4\">1. Job Description</h3>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Job Title\r\n                                            {/*<OverlayTrigger placement={'top'} overlay={<Tooltip>Job Title</Tooltip>}>*/}\r\n                                            {/*<span className=\"question text-light ml-2\"><i className=\"far fa-question-circle\"></i></span>*/}\r\n                                            {/*</OverlayTrigger>*/}\r\n                                        </label>\r\n                                        <input type=\"text\" name=\"title\" value={formField.title} onChange={this.handleChange} className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')} />\r\n\r\n                                        {submitted && isValid.title.isInvalid &&\r\n                                            <div className=\"invalid-feedback\"> {isValid.title.message} </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Job Description\r\n                                            <OverlayTrigger placement={'top'} overlay={<Tooltip>Some information here</Tooltip>}>\r\n                                                <span className=\"question text-light ml-2\"><i className=\"far fa-question-circle\"></i></span>\r\n                                            </OverlayTrigger>\r\n                                        </label>\r\n                                        <Editor\r\n                                            editorState={formField.description}\r\n                                            wrapperClassName={'srcEtrStyle ' + (submitted && isValid.description.isInvalid ? 'is-invalid' : '')}\r\n                                            editorClassName=\"services-editor\"\r\n                                            toolbarOnFocus\r\n                                            toolbar={{\r\n                                                options: ['inline', 'blockType', 'list', 'textAlign'],\r\n                                                inline: {\r\n                                                    inDropdown: false,\r\n                                                    className: undefined,\r\n                                                    component: undefined,\r\n                                                    dropdownClassName: undefined,\r\n                                                    subscript: undefined\r\n                                                },\r\n                                            }}\r\n                                            onEditorStateChange={this.onEditorStateChange}\r\n                                        />\r\n                                        {submitted && isValid.description.isInvalid &&\r\n                                            <div className=\"invalid-feedback\"> {isValid.description.message} </div>}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Preferred Freelancer Location\r\n                                            <OverlayTrigger placement={'top'} overlay={<Tooltip>Default selected all countries</Tooltip>}>\r\n                                                <span className=\"question text-light ml-2\"><i className=\"far fa-question-circle\"></i></span>\r\n                                            </OverlayTrigger>\r\n                                        </label>\r\n                                        {((((formField.locations !== null && (formField.locations.length > 0 || formField.locations.length === 0))) && id) || (id === null)) &&\r\n                                            <Select\r\n                                                className=\"multiple-select mb-2\"\r\n                                                classNamePrefix=\"multi\"\r\n                                                isSearchable isMulti\r\n                                                defaultValue={formField.locations}\r\n                                                placeholder=\"Any Location\"\r\n                                                name=\"locations\"\r\n                                                onChange={this.handleSelect}\r\n                                                options={countriesList.map(item => ({ value: item.code, label: item.name }))} />}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <FileUploader upload={upload} coverImage={false} accept={'.xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf, video/*'} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Job Deadline</label>\r\n                                        <Select\r\n                                            className=\"multiple-select\"\r\n                                            isSearchable\r\n                                            name=\"deadline\"\r\n                                            classNamePrefix=\"multi\"\r\n                                            onChange={this.handleSelect}\r\n                                            defaultValue={formField.deadline}\r\n                                            options={deadlineList.map(item => ({ value: item.id, label: item.value }))} />\r\n\r\n                                    </div>\r\n                                    {(id) &&\r\n                                        <div className=\"form-group\">\r\n                                            <label>Job status</label>\r\n                                            <Select\r\n                                                className=\"multiple-select\"\r\n                                                isSearchable\r\n                                                name=\"is_closed\"\r\n                                                classNamePrefix=\"multi\"\r\n                                                onChange={this.handleSelect}\r\n                                                defaultValue={formField.is_closed}\r\n                                                options={[{ id: 0, value: 'Open' }, {\r\n                                                    id: 1,\r\n                                                    value: 'Closed'\r\n                                                }].map(item => ({ value: item.id, label: item.value }))} />\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"labels col pl-0\">\r\n                                                <label className=\"mb-0\">Does your job require an NDA? <small className=\"pl-3\">(If yes, please upload your signed NDA contract.)</small></label><br />\r\n                                                {/*<small className=\"font-weight-bold\">If Job requireds NDA, you need to go with NDA Pro plan</small>*/}\r\n                                            </div>\r\n                                            <div className=\"\">\r\n                                                <Switch\r\n                                                    name=\"is_nda\"\r\n                                                    defaultChecked={(formField.is_nda === 1)}\r\n                                                    onChange={this.handleChangeNda}\r\n                                                    color=\"primary\"\r\n                                                    value={(formField.is_nda ? 1 : 0)}\r\n                                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </Element>\r\n\r\n                            <Element className=\"card custom-card\" name=\"expertise_skills\">\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"pb-0 pb-lg-4\">2. Expertise & Skills</h3>\r\n                                    {categoriesList && <div className=\"form-group\">\r\n                                        <label>Select Category</label>\r\n\r\n                                        {((formField.category_id && id) || (id === null)) && <Select\r\n                                            className={\"multiple-select mb-2 \" + (submitted && isValid.category_id.isInvalid ? 'is-invalid' : '')}\r\n                                            classNamePrefix=\"multi\"\r\n                                            isSearchable\r\n                                            defaultValue={formField.category_id}\r\n                                            name=\"category_id\"\r\n                                            onChange={this.handleSelect}\r\n                                            options={categoriesList.map(item => ({ value: item.id, label: item.name })\r\n                                            )} />}\r\n                                        {submitted && isValid.category_id.isInvalid &&\r\n                                            <div className=\"invalid-feedback d-block\"> {isValid.category_id.message} </div>\r\n                                        }\r\n                                    </div>}\r\n\r\n                                    {subCategoriesList && <div className=\"form-group\">\r\n                                        <label>Select Sub-Category</label>\r\n                                        {<Select\r\n                                            className=\"multiple-select mb-2\"\r\n                                            classNamePrefix=\"multi\"\r\n                                            isSearchable\r\n                                            defaultValue={formField.subcategory_id}\r\n                                            name=\"subcategory_id\"\r\n                                            onChange={this.handleSelect}\r\n                                            options={subCategoriesList.map(item => ({ value: item.id, label: item.name }))} />}\r\n                                        {submitted && isValid.category_id.isInvalid &&\r\n                                            <div className=\"invalid-feedback\"> {isValid.category_id.message} </div>\r\n                                        }\r\n                                    </div>}\r\n                                    <div className=\"form-group\">\r\n                                        <label>Skills</label>\r\n                                        {((((formField.skills !== null && (formField.skills.length > 0 || formField.skills.length === 0))) && id) || (id === null)) &&\r\n                                            <Select\r\n                                                className={'multiple-select mb-2 ' + (submitted && isValid.skills.isInvalid ? 'is-invalid' : '')}\r\n                                                classNamePrefix=\"multi\"\r\n                                                isSearchable isMulti\r\n                                                defaultValue={formField.skills}\r\n                                                name=\"skills\"\r\n                                                onChange={this.handleSelect}\r\n                                                options={skillsList.map(item => ({ value: item.id, label: item.name }))} />}\r\n                                        {submitted && isValid.skills.isInvalid &&\r\n                                            <div className=\"invalid-feedback d-block\"> {isValid.skills.message} </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </Element>\r\n\r\n                            <Element className=\"card custom-card\" name=\"payment_settlement\">\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"pb-0 pb-lg-4\">3. Payment Settlement</h3>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Pay by</label>\r\n                                        <div className=\"radio-switch d-flex\">\r\n                                            <div className=\"quality\">\r\n                                                <input type=\"radio\" name=\"settlement\" defaultChecked={(formField.settlement === 'exchange')} value=\"exchange\" id=\"exchange\" onChange={this.handleChange} />\r\n                                                <label htmlFor='exchange'>Exchange</label>\r\n                                            </div>\r\n                                            <div className=\"quality\">\r\n                                                <input type=\"radio\" name=\"settlement\" defaultChecked={(formField.settlement === 'cash')} value=\"cash\" id=\"cash\" onChange={this.handleChange} />\r\n                                                <label htmlFor='cash'>Cash Pay Only</label>\r\n                                            </div>\r\n                                            <div className=\"quality\">\r\n                                                <input type=\"radio\" name=\"settlement\" value=\"both\" defaultChecked={(formField.settlement === 'both')} id=\"both\" onChange={this.handleChange} />\r\n                                                <label htmlFor='both'>Open For Both</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {(formField.settlement === 'both' || formField.settlement === 'exchange') &&\r\n                                        <Fragment>\r\n                                            {servicesList && <div className=\"form-group\">\r\n                                                <label>Services</label>\r\n                                                {((formField.services && id) || (id === null)) && <Select\r\n                                                    isSearchable isMulti\r\n                                                    className={\"multiple-select mb-2 \" + (submitted && isValid.services.isInvalid ? 'is-invalid' : '')}\r\n                                                    classNamePrefix=\"multi\"\r\n                                                    placeholder=\"Select Services\"\r\n                                                    defaultValue={formField.services}\r\n                                                    name=\"services\"\r\n                                                    onChange={this.handleSelect}\r\n                                                    options={servicesList.map(item => ({ value: item.id, label: item.title })\r\n                                                    )} />}\r\n                                            </div>}\r\n                                            {submitted && isValid.services.isInvalid &&\r\n                                                <div className=\"invalid-feedback d-block\"> {isValid.services.message} </div>\r\n                                            }\r\n                                        </Fragment>}\r\n\r\n                                    {(formField.settlement === 'both' || formField.settlement === 'cash') &&\r\n                                        <Fragment>\r\n                                            <div className=\"form-group\">\r\n                                                <label>Payment Preference</label>\r\n                                                <div className=\"radio-switch\">\r\n                                                    <div className=\"quality\">\r\n                                                        <input type=\"radio\" name=\"type\" value=\"hourly\" id=\"fix_hourly\" onChange={this.handleChange}\r\n                                                            checked={(formField.type === 'hourly')} />\r\n                                                        <label htmlFor='fix_hourly'>Hourly Price</label>\r\n                                                    </div>\r\n                                                    <div className=\"quality\">\r\n                                                        <input type=\"radio\" name=\"type\" value=\"fixed\" id=\"fixed_budget\" onChange={this.handleChange}\r\n                                                            checked={(formField.type === 'fixed')} />\r\n                                                        <label htmlFor='fixed_budget'>Fixed Price</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label> {(formField.type === 'fixed') ? 'Enter your fixed price' : 'Enter your hourly price'} </label>\r\n                                                <input type=\"text\" name=\"budget\" value={formField.budget} placeholder={(formField.type === 'fixed') ? '$35.00' : '$35/ per hour'} className={'form-control ' + (submitted && isValid.budget.isInvalid ? 'is-invalid' : '')} onChange={this.handleChange} />\r\n                                                {submitted && isValid.budget.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.budget.message} </div>\r\n                                                }\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    }\r\n\r\n\r\n                                </div>\r\n                            </Element>\r\n\r\n                            <Element className=\"card custom-card\" name=\"visiblity\">\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"pb-0 pb-lg-4\">4. Visiblity</h3>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Choose one</label>\r\n                                        <div className=\"radio-switch\">\r\n                                            <div className=\"quality\">\r\n                                                <input type=\"radio\" name=\"visibility\" defaultChecked={(formField.visibility === 'public')} value=\"public\" id=\"public\" onChange={this.handleChange} />\r\n                                                <label htmlFor='public'>Public</label>\r\n                                            </div>\r\n                                            <div className=\"quality\">\r\n                                                <input type=\"radio\" name=\"visibility\" defaultChecked={(formField.visibility === 'private')} value=\"private\" id=\"private\" onChange={this.handleChange} />\r\n                                                <label htmlFor='private'>Private</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small className=\"form-text text-muted\">{(formField.visibility === 'public') ? 'If you select “Public”, everyone on the platform can see your job post and bid on it' : 'If you select “Private”, you can only invite members from your “Connection” to apply to this job post'} </small>\r\n                                    </div>\r\n                                    {formField.visibility === 'private' &&\r\n                                        <Fragment>\r\n                                            <div className=\"form-group\">\r\n                                                {/*<h6 className=\"font-weight-bold\">As you have choose visibility in private. Kindly select people from your*/}\r\n                                                {/*network</h6>*/}\r\n                                                <button type=\"button\" className=\"btn btn-outline-info btn-md px-4\" onClick={this.connectionOpen}>Invite Members</button>\r\n                                                {submitted && isValid.connections.isInvalid &&\r\n                                                    <div className=\"invalid-feedback d-block\"> {isValid.connections.message} </div>\r\n                                                }\r\n                                            </div>\r\n                                            {connections.length ?\r\n                                                <div className=\"connectionToShow\">\r\n                                                    <h1>Connections</h1>\r\n                                                    <div className=\"connectionFlex\">\r\n                                                        {connections.map((a) => {\r\n                                                            let obj = this.state.connectionToShow && this.state.connectionToShow.find((b) => b.id === a)\r\n                                                            return (\r\n                                                                <div className=\"Connection\">\r\n                                                                    <img src={obj && obj.avatar} />\r\n                                                                    <p>{obj && obj.name}</p>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n                                                    </div>\r\n                                                </div>\r\n                                                : null}\r\n\r\n                                            <ConnectionsDialog takingData={this.takingData} selectedValue={'connectionValue'} open={connectionDialogOpen} onClose={this.handleConnection} selected={connections} />\r\n                                            { /* <div className=\"connections\">\r\n                                                <div className=\"list\">\r\n                                                    <h6>Questions 01</h6>\r\n                                                    <p>What will be your process when you normally design any project ?</p>\r\n                                                </div>\r\n                                                <div className=\"list\">\r\n                                                    <h6>Questions 01</h6>\r\n                                                    <p>What will be your process when you normally design any project ?</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <p>(eg. Workflow and pipeline if anything like that you follow.)</p>\r\n                                            */ }\r\n                                        </Fragment>\r\n                                    }\r\n\r\n                                </div>\r\n                            </Element>\r\n                            <Element className=\"card custom-card\" name=\"interview_details\">\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"pb-0 pb-lg-4\">5. Interview Questions</h3>\r\n                                    <div className=\"form-group\">\r\n                                        <h6 className=\"font-weight-bold\"><small>Add relevant questions for freelancers</small></h6>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        {questionsList && <div className=\"form-group\">\r\n                                            <label>Questions</label>\r\n                                            {((formField.questions && id) || (id === null)) && <Select\r\n                                                isSearchable isMulti\r\n                                                className=\"multiple-select mb-2\"\r\n                                                classNamePrefix=\"multi\"\r\n                                                placeholder=\"Select Questions\"\r\n                                                defaultValue={formField.questions}\r\n                                                name=\"questions\"\r\n                                                onChange={this.handleSelect}\r\n                                                options={questionsList.map(item => ({ value: item.id, label: item.question })\r\n                                                )} />}\r\n                                        </div>}\r\n                                        <div className=\"text-right\">\r\n                                            <button type=\"button\" className=\"btn btn-outline-info btn-md px-4\" onClick={this.questionOpen}>Add New Question</button>\r\n                                        </div>\r\n                                        {<QuestionDialog selectedValue={'questionValue'} open={questionDialogOpen} onClose={this.handleQuestion} questions={formField.customquestions} />}\r\n                                    </div>\r\n                                    {formField.customquestions && <div className=\"questions\">\r\n                                        {formField.customquestions.map((item, idx) => (<div className=\"list\" key={idx}>\r\n                                            <h6>Questions {(idx + 1)}</h6>\r\n                                            <p>{item}</p>\r\n                                        </div>))\r\n                                        }\r\n                                        {/*<p>(eg. Workflow and pipeline if anything like that you follow.)</p>*/}\r\n                                    </div>}\r\n\r\n                                </div>\r\n                            </Element>\r\n                            <div className=\"action text-right\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <button type=\"button\" className=\"btn btn-outline-info btn-lg ml-3\" onClick={this.saveDraft}>Save as Draft</button>\r\n                                        <button type=\"submit\" className=\"btn btn-info btn-lg ml-3\">Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card card-instruction services\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Instruction</h5>\r\n                                <h6 className=\"sub-title\">1. What is “Job”?</h6>\r\n                                <p className=\"card-text\">A job is a project you need to get done where freelancers can apply. After receiving multiple offers, you can hire the best candidate to complete the job.</p>\r\n                                <hr />\r\n                                <h6 className=\"sub-title\">2. Fill out the “Job” questionnaire</h6>\r\n                                <p className=\"card-text\">Describe the job in detail and be very clear about your requirements. It can help you receive better offers from freelancers. Include additional information such as, video, pictures and related documents explaining the job.</p>\r\n                                <hr />\r\n                                <h6 className=\"sub-title\">3. Multiple price “Job” options</h6>\r\n                                <p className=\"card-text\">Set your price whether your job is a fixed or hourly price. You also have the option to select \"exchange services\" if you want to barter your service.</p>\r\n                                <hr />\r\n                                <h6 className=\"sub-title\">4. Benefits for “Job” posting</h6>\r\n                                <p className=\"card-text\">The ability to post a job gives you the flexibility to hire any freelancer on the platform based on your specific needs.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst uploadSelector = createSelector(\r\n    state => state.upload,\r\n    upload => upload\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst categoriesSelector = createSelector(\r\n    state => state.categories,\r\n    categories => categories\r\n);\r\n\r\nconst skillsSelector = createSelector(\r\n    state => state.skills,\r\n    skills => skills\r\n);\r\n\r\nconst countriesSelector = createSelector(\r\n    state => state.countries,\r\n    countries => countries\r\n);\r\n\r\nconst questionsSelector = createSelector(\r\n    state => state.questions,\r\n    questions => questions\r\n);\r\n\r\nconst serviceSelector = createSelector(\r\n    state => state.services,\r\n    services => services\r\n);\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    uploadSelector,\r\n    categoriesSelector,\r\n    skillsSelector,\r\n    countriesSelector,\r\n    questionsSelector,\r\n    serviceSelector,\r\n    (process, upload, categories, skills, countries, questions, services) => ({\r\n        process, upload, categories, skills, countries, questions, services\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(JobForm);\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport JobForm from './partials/JobForm';\r\nimport StripeConnection from '../common/StripeConnection';\r\n\r\n\r\nclass JobCreate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const { authentication } = this.props;\r\n        const { userProfile } = authentication.authentication.user;\r\n        const isStripeConnect = ((userProfile.strip_account_number === null) || (userProfile.strip_account_number === '') || (userProfile.strip_account_number === '0'));\r\n\r\n        return (<Main>\r\n            <div className=\"create-service bg-body\">\r\n                <div className=\"container\">\r\n                    {/* isStripeConnect ? <StripeConnection /> : <JobForm /> */}\r\n                    <JobForm />\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst questionsSelector = createSelector(\r\n    state => state.questions,\r\n    questions => questions\r\n);\r\n\r\nconst countriesSelector = createSelector(\r\n    state => state.countries,\r\n    countries => countries\r\n);\r\n\r\nconst skillsSelector = createSelector(\r\n    state => state.skills,\r\n    skills => skills\r\n);\r\n\r\nconst categoriesSelector = createSelector(\r\n    state => state.categories,\r\n    categories => categories\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector,\r\n    categoriesSelector,\r\n    skillsSelector,\r\n    countriesSelector,\r\n    questionsSelector,\r\n    (authentication, categories, skills, countries, questions) => ({\r\n        authentication, categories, skills, countries, questions\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(JobCreate);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport JobForm from './partials/JobForm';\r\nimport { NonAuthoritative } from '../Exceptions';\r\nimport { globalService as gs } from \"../../../common/services/global.service\";\r\nimport { uploadSelectors } from '../../../common/redux/selectors';\r\nimport { itemService } from '../../../common/services';\r\nimport { FormLoader } from '../../../common/loaders';\r\n\r\n\r\nclass JobUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loading:false};\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        const { dispatch } = this.props;\r\n        const id = this.props.match.params.id;\r\n        this.setState({ id: id, loading:true });\r\n\r\n       id && itemService.job(\"GET\", null, { item_id: id }).then(res => {\r\n            if (gs.isOwner(res.model.user_id)) {\r\n                let media = res.model.media;\r\n                let skills = res.model.skills.map(item => ({ value: item.id, label: item.title }));\r\n                let locations = res.model.userItemLocations.map(item => ({ value: item.country_id, label: item.name }));\r\n                let category_id = { value: res.model.category.id, label: res.model.category.title };\r\n                let subcategory_id = null;\r\n                let iniDeadline = res.model.deadline ? res.model.deadline : 0;\r\n                let deadline = { value: iniDeadline, label: iniDeadline === 0 ? `Select Month` : `Upto ${iniDeadline} month` };\r\n                let iniIsClosed = res.model.is_closed ? res.model.is_closed : 0;\r\n                let isClosed = { value: iniIsClosed, label: iniIsClosed === 0 ? `Open` : `Closed` };\r\n                if (res.model.category.parent) {\r\n                    category_id = { value: res.model.category.parent.id, label: res.model.category.parent.title };\r\n                    subcategory_id = { value: res.model.category.id, label: res.model.category.title };\r\n                }\r\n                let questions = res.model.userItemQuestions\r\n                .filter(item => ((item.question_id !== null)))\r\n                .map(item => ({ value: item.question_id, label: item.question }));\r\n                let customquestions = res.model.userItemQuestions\r\n                .filter(item => (item.question_id === null))\r\n                .map(item => item.question);\r\n                let services = res.model.services.map(item => ({ value: item.id, label: item.title }));\r\n                this.setState({\r\n                    formField: {\r\n                        category_id: category_id,\r\n                        subcategory_id: subcategory_id,\r\n                        locations: locations,\r\n                        title: res.model.title,\r\n                        description: res.model.description,\r\n                        budget: res.model.budget,\r\n                        deadline: deadline,\r\n                        duration: res.model.duration,\r\n                        is_nda: res.model.is_nda,\r\n                        status: res.model.status,\r\n                        visibility: res.model.visibility,\r\n                        settlement: res.model.settlement,\r\n                        type: res.model.type,\r\n                        services: services,\r\n                        is_closed: isClosed,\r\n                        skills: skills,\r\n                        questions: questions,\r\n                        connections: res.model.connections,\r\n                        customquestions: customquestions,\r\n                        files: media.image && media.image.map(file => file.id)\r\n                            .concat(media.video && media.video.map(file => file.id))\r\n                            .concat(media.docs && media.docs.map(file => file.id)),\r\n                    }\r\n                });\r\n                dispatch(uploadSelectors.respond(res.model.media));\r\n                this.setState({ loading: false });\r\n            }else{\r\n                this.setState({ formField: null, loading: false });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { id, formField, loading } = this.state;\r\n        return (<Main>\r\n            <div className=\"create-service bg-body\">\r\n                <div className=\"container\">\r\n                    {loading ? <FormLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={4} width={700} /> : (formField ? <JobForm id={id} formField={formField} /> : <NonAuthoritative />)}\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\n\r\nconst skillsSelector = createSelector(\r\n    state => state.skills,\r\n    skills => skills\r\n);\r\n\r\nconst categoriesSelector = createSelector(\r\n    state => state.categories,\r\n    categories => categories\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    categoriesSelector,\r\n    skillsSelector,\r\n    (categories, skills) => ({\r\n        categories, skills\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(JobUpdate);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const JobsNavbar = () => {\r\n    return(\r\n        <div className=\"public-navbar card mb-4\">\r\n            <div className=\"card-body\">\r\n                <nav className=\"nav\">\r\n                    <NavLink className=\"nav-link\" to={`/jobs`}>Posted Jobs</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/job/draft`}>Draft Jobs</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/job/closed`}>Closed Jobs</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/job/invited`}>Invited Jobs</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Main } from '../../layout';\r\nimport { JobsNavbar } from './partials/JobsNavbar';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass JobLayout extends Component {\r\n    render() {\r\n        const {children} = this.props;\r\n        return (<Main>\r\n            <DocumentTitle title={'My Jobs'} />\r\n            <div className=\"bg-body allJobsPage PostedJobs\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"d-flex align-items-center\">\r\n                                <span className=\"col pl-0\">My Jobs</span>\r\n                                <Link to=\"/job/create\" className=\"btn btn-info\">Post a Job</Link>\r\n                            </h1>\r\n                            <JobsNavbar />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            { children }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default JobLayout;","import React, { Component, Fragment } from 'react';\r\nimport JobLayout from './JobLayout';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { SearchLoader } from '../../../common/loaders';\r\nimport { globalService as gs, itemService } from '../../../common/services';\r\nimport ReadMoreReact from \"read-more-react\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nclass JobListing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                user_id: parseInt(gs.identity.user.id),\r\n                is_publish: null,\r\n                is_closed: null,\r\n                page: 1,\r\n            },\r\n            jobs: [],\r\n            loading: false\r\n        };\r\n        this.initializedStated = this.state\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.props = nextProps;\r\n        //console.log(this.props,  nextProps)\r\n        if (this.props.is_publish === nextProps.is_publish) {\r\n            this.loadJobs(1);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { is_publish, is_closed, is_visibility } = this.props;\r\n        console.log(\"is_visibility:\", is_visibility)\r\n        const formField = { ...this.state.formField };\r\n        const user_id = gs.identity && gs.identity.user && gs.identity.user.id;\r\n        formField[\"user_id\"] = user_id;\r\n        formField[\"is_publish\"] = is_publish ? is_publish : '';\r\n        formField[\"is_closed\"] = is_closed ? is_closed : '';\r\n        formField[\"is_visibility\"] = is_visibility ? is_visibility : 'public';\r\n        //console.log(\"formField:\", formField)\r\n        //this.loadJobs(formField);\r\n        this.setState({ formField });\r\n    }\r\n\r\n    loadJobs = (page) => {\r\n        const { is_publish, is_closed, is_visibility } = this.props;\r\n        const formField = { ...this.state.formField };\r\n        const user_id = gs.identity && gs.identity.user && gs.identity.user.id;\r\n        formField[\"user_id\"] = user_id;\r\n        formField[\"is_publish\"] = is_publish ? is_publish : null;\r\n        formField[\"is_closed\"] = is_closed ? is_closed : null;\r\n        formField[\"is_visibility\"] = is_visibility ? is_visibility : null;\r\n        formField[\"page\"] = page;\r\n        this.setState({ loading: true });\r\n        itemService.job(\"GET\", null, formField).then(response => {\r\n            this.setState({ jobs: response, loading: false });\r\n        });\r\n    };\r\n\r\n    onChangePage = (page) => {\r\n        //if (page !== 1) {}\r\n        this.loadJobs(page);\r\n    };\r\n\r\n    renderItem = (item) => {\r\n        let isOwner = (item.user_id === gs.identity.user.id);\r\n        let viewLink = isOwner ? `/job/view/${item.id}` : `/user/public/job/view/${item.id}`;\r\n        return (\r\n            // <div className=\"jobBox card mb-4\" key={item.id}>\r\n            //     <div className=\"card-body\">\r\n            //         <div className=\"caption\">\r\n            //             <h3 className=\"d-flex align-items-center pr-0\">\r\n            //                 <div className=\"col pl-0\">\r\n            //                     <NavLink to={viewLink}>{item.title}</NavLink> {/* <small> {item.category && item.category.parent ? item.category.parent.title + ',' : null} {item.category.title}</small> */}\r\n            //                 </div>\r\n            //                 {isOwner && <div className=\"d-flex\">\r\n            //                     <NavLink to={viewLink} className=\"btn btn-secondary mr-2\"><i\r\n            //                         className=\"far fa-eye\"></i> View {item.view_counts}</NavLink>\r\n            //                     <NavLink to={`/job/update/${item.id}`} className=\"btn btn-primary\"><i\r\n            //                         className=\"fas fa-pencil-alt\"></i> Edit</NavLink>\r\n            //                 </div>}\r\n            //             </h3>\r\n            //         </div>\r\n            //         <div className=\"prices d-flex align-items-center\">\r\n            //             {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>}\r\n            //             <div className=\"fixed badge badge-secondary text-capitalize\">{item.settlement}</div>\r\n            //             {item.settlement && item.settlement === 'cash' &&\r\n            //                 <div className=\"cash badge badge-success text-capitalize\">{item.type}</div>}\r\n            //         </div>\r\n            //         <div className=\"priview d-flex flex-wrap pb-0\"></div>\r\n            //         <ReadMoreReact className=\"text\" text={gs.html2text(item && item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n\r\n            //         <div className=\"chips\">\r\n            //             {item.skills && item.skills.map((skill) =>\r\n            //                 <div className=\"badge badge-secondary\" style={{ textTransform: 'capitalize' }} key={skill.id}>{skill.title}</div>)}\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n\r\n            <div class=\"job\">\r\n\r\n                <div class=\"row top-sec\">\r\n                    <div class=\"col-lg-12\">\r\n                        {/* {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>} */}\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div className=\"previousButton\">\r\n                                {isOwner && <div className=\"d-flex\">\r\n                                    <NavLink to={viewLink} className=\"btn btn-secondary mr-2\"><i\r\n                                        className=\"far fa-eye\"></i> View {item.view_counts}</NavLink>\r\n                                    <NavLink to={`/job/update/${item.id}`} className=\"btn btn-primary\"><i\r\n                                        className=\"fas fa-pencil-alt\"></i> Edit</NavLink>\r\n                                </div>}\r\n                            </div>\r\n                            <div className=\"topLabel\">\r\n                                <div className=\"cashAndExchange\">{(item.settlement === 'both') ? 'Cash & Exchange' : item.settlement}</div>\r\n                            </div>\r\n                            {/* {item.settlement && item.settlement === 'cash' && <div className=\"label label-primary\">{item.type}</div>} */}\r\n                        </div>\r\n                        <div class=\"col-lg-12 col-xs-12\">\r\n                            <h4><a href=\"jobpost.html\"><NavLink to={viewLink}>{item.title}</NavLink></a>\r\n                            </h4>\r\n                            {item.category.parent ?\r\n                                <h5>{item.category && item.category.parent && item.category.parent.title} <small>- {item.category.title}</small></h5>\r\n                                :\r\n                                <h5>{item.category.title}<small></small></h5>\r\n                            }\r\n\r\n                            {item.settlement === 'both' || item.settlement === 'cash' ?\r\n                                <div className=\"prices d-flex align-items-center\">\r\n                                    {/* {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>} */}\r\n                                    <div className=\"\">Cash</div>\r\n                                    {/* {item.settlement && item.settlement === 'cash' && <div className=\"\">{item.type}</div>} */}\r\n                                </div>\r\n                                : null}\r\n\r\n                            {item.type === \"hourly\" ?\r\n                                <h6>{item.budget} {item.budget ? \"$$ per hour\" : \"\"}</h6>\r\n                                :\r\n                                <h6>{item.budget} $$ fixed</h6>\r\n                            }\r\n                            {/* <p><small>Posted 14 Hours ago</small></p> */}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mid-sec\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"col-lg-12\">\r\n                            {/* <hr class=\"small-hr\" /> */}\r\n                            {/* <p>Description of every page/module: I have a PSD ebay store and listing design in photoshop that needs to be sliced and coded for eBay to be mobile responsive. Description of requirements/features: Mobile Responsive Ebay store and listing design...</p> */}\r\n                            <ReadMoreReact className=\"text\" text={gs.html2text(item && item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n\r\n                            <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n                                {item.skills.length &&\r\n                                    item.skills.map((a, index) =>\r\n                                        <span key={index} class=\"label label-success\">{a.title}</span>\r\n                                    )\r\n                                }\r\n                                {/* <span class=\"label label-success\">HTML 5</span>\r\n            <span class=\"label label-success\">CSS3</span>\r\n            <span class=\"label label-success\">PHP 5.4</span>\r\n            <span class=\"label label-success\">Mysql</span>\r\n            <span class=\"label label-success\">Bootstrap</span> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {item.settlement === 'both' || item.settlement === 'exchange' ?\r\n                    <div class=\"row mid-sec\">\r\n                        <div class=\"col-lg-12\">\r\n                            <div class=\"col-lg-12\">\r\n                                <hr class=\"small-hr\" />\r\n                                <div className=\"prices d-flex align-items-center\">\r\n                                    {/* {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>} */}\r\n                                    <div className=\"\">{(item.settlement === 'both') ? 'Exchange' : item.settlement}</div>\r\n                                    {/* {item.settlement && item.settlement === 'cash' && <div className=\"\">{item.type}</div>} */}\r\n                                </div>\r\n                                {(item.services.length > 0) &&\r\n                                    <div className=\"priview d-flex flex-wrap\">\r\n                                        {(item.services[0].cover) &&\r\n                                            <div className=\"image\">\r\n                                                {item.services[0].cover.thumb &&\r\n                                                    <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.services[0].cover.thumb} effect=\"blur\" />\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        <div className=\"caption\">\r\n                                            <h5>\r\n                                                {item.services[0].title}\r\n                                                {(item.services.length > 1) && <NavLink to={`/user/public/job/view/${item.id}`} className=\"ml-3 text-info\">+{item.services.length - 1} more </NavLink>}\r\n                                            </h5>\r\n                                            <div className=\"ratings d-flex align-items-center\">\r\n                                                <p class=\"p-star\">\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                </p>\r\n                                            </div>\r\n                                            <p>\r\n                                                {item.services[0].budget}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div> : null}\r\n\r\n                <div class=\"row bottom-sec\">\r\n                    <div class=\"col-lg-12\">\r\n\r\n                        <div class=\"col-lg-12\">\r\n                            <hr class=\"small-hr\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-12 prices\">\r\n                            <div className=\"\">posted by:</div>\r\n                        </div>\r\n                        <div class=\"col-lg-6\">\r\n                            <div class=\"pull-left\">\r\n                                <NavLink to=\"#\">\r\n                                    {item.user.avatar ?\r\n                                        <img class=\"img-responsive\" src={item.user.avatar} alt=\"Image\" />\r\n                                        : \"\"}\r\n                                </NavLink>\r\n                            </div>\r\n                            <h5> {item.user.name} </h5>\r\n                            <p><i class=\"fas fa-map-marker-alt icon-color\"></i> {item.user.countryCode && item.user.countryCode.name}</p>\r\n                            <p class=\"p-star\">\r\n                                {item.user.avg_job_rating === \"5.00\" ?\r\n                                    <>\r\n                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                    </>\r\n                                    :\r\n                                    item.user.avg_job_rating === \"4.00\" ?\r\n                                        <>\r\n                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                            <i class=\"far fa-star\"></i>\r\n                                        </>\r\n                                        :\r\n                                        item.user.avg_job_rating === \"3.00\" ?\r\n                                            <>\r\n                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                <i class=\"far fa-star\"></i>\r\n                                                <i class=\"far fa-star\"></i>\r\n                                            </>\r\n                                            :\r\n                                            item.user.avg_job_rating === \"2.00\" ?\r\n                                                <>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"far fa-star\"></i>\r\n                                                    <i class=\"far fa-star\"></i>\r\n                                                    <i class=\"far fa-star\"></i>\r\n                                                </>\r\n                                                :\r\n                                                item.user.avg_job_rating === \"1.00\" ?\r\n                                                    <>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"far fa-star\"></i>\r\n                                                        <i class=\"far fa-star\"></i>\r\n                                                        <i class=\"far fa-star\"></i>\r\n                                                        <i class=\"far fa-star\"></i>\r\n                                                    </>\r\n                                                    :\r\n                                                    item.user.avg_job_rating === \"0.00\" ?\r\n                                                        <>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                        </>\r\n                                                        : null\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                        {/* <div class=\"col-lg-6\">\r\n            <div class=\"pull-right\">\r\n                <h4> 5 </h4>\r\n                <p> Applicants</p>\r\n            </div>\r\n        </div> */}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { jobs, loading } = this.state;\r\n        const { is_publish, is_closed, is_visibility } = this.props;\r\n        let results = (jobs && jobs.items) ? jobs.items : null;\r\n\r\n        return (<JobLayout>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 jobBoxx\">\r\n                    {loading ? <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={2} width={700} /> : <Fragment>\r\n                        {(results && results.length === 0) && <div>\r\n                            <div className=\"jobBox card mb-4\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                        <div className=\"inner text-center\">\r\n                                            <figure>\r\n                                                <img src=\"/images/not-found/My-Services.png\" alt=\"Image\" width=\"100\" />\r\n                                            </figure>\r\n                                            {((is_publish === 'publish') || (is_publish === 'draft')) &&\r\n                                                <h5>You have not posted any jobs yet</h5>\r\n                                            }\r\n                                            {(is_closed === '1') &&\r\n                                                <h5>You have not closed any jobs yet</h5>\r\n                                            }\r\n                                            {((is_publish === 'publish') || (is_publish === 'draft')) &&\r\n                                                <p className=\"title\">This is where you’ll be able to track all the jobs you posted</p>\r\n                                            }\r\n                                            {(is_closed === '1') &&\r\n                                                <p className=\"title\">This is where you’ll be able to track all the jobs you closed</p>\r\n                                            }\r\n                                            {(is_visibility === 'private') &&\r\n                                                <p className=\"title\">This is where you’ll be able to track all the jobs you private</p>\r\n                                            }\r\n                                            <div className={'text-center'}>\r\n                                                <p className=\"mb-1\"><Link className=\"btn btn-link text-uppercase\" to=\"/job-search\">Find Jobs</Link></p>\r\n                                                <p className=\"mb-2\"><b>OR</b></p>\r\n                                                <p> <Link className=\"btn btn-primary\" to=\"/job/create\">Post Job</Link></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        {results && results.map((item) => this.renderItem(item))}\r\n                    </Fragment>}\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Pagination className=\"justify-content-end\"\r\n                        pageSize={20}\r\n                        totalCount={(jobs && jobs.publish && jobs.publish.pagination.totalCount) ? jobs.publish.pagination.totalCount : 10}\r\n                        onChangePage={this.onChangePage} />\r\n                </div>\r\n            </div>\r\n        </JobLayout>);\r\n    }\r\n}\r\n\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst jobSelector = createSelector(\r\n    state => state.jobs,\r\n    jobs => jobs\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    jobSelector,\r\n    (process, jobs) => ({\r\n        process, jobs\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(JobListing);\r\n","// import React, { Component, Fragment } from 'react';\r\n// import { Main } from '../../layout';\r\n// import { Redirect } from 'react-router-dom';\r\n// import { createSelector } from \"reselect\";\r\n// import { connect } from \"react-redux\";\r\n// import { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n// import { SearchLoader } from '../../../common/loaders';\r\n// import {globalService as gs, itemService} from '../../../common/services';\r\n// import { ProposalReceived } from '../Contract/partials';\r\n// import { ModuleHelper } from '../../../helpers/module.helper';\r\n// import ReadMoreReact from \"read-more-react\";\r\n\r\n// class JobView extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             item: null,\r\n//             id: null,\r\n//         };\r\n//     }\r\n\r\n//     componentWillMount() {\r\n//         const { match } = this.props;\r\n//         const id = match.params.id;\r\n//         this.setState({ id: id ? id : null });\r\n//         this.jobs(id);\r\n//     }\r\n\r\n//     jobs = (id) => {\r\n//         id && itemService.job(\"GET\", null, { item_id: id }).then(res => {\r\n//             this.setState({ item: res.model });\r\n//         });\r\n//     };\r\n\r\n//     render() {\r\n//         const { process } = this.props;\r\n//         let item = this.state.item;\r\n\r\n//         return (<Main>\r\n//             <DocumentTitle title={item && item.title} />\r\n//             <div className=\"job-individual bg-body\">\r\n//                 <div className=\"container\">\r\n//                     <div className=\"row\">\r\n//                         {process.loading ? <div className=\"col-12\"><SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={3} width={700} /></div> : <Fragment>\r\n//                             {(item && item.length === 0) ? <Redirect to={{ pathname: '/not-found' }} /> : <Fragment>\r\n//                                 <div className=\"col-12\">\r\n//                                     {/*<h1>Received Offers/Bids({item && item.userItemProposals.length})</h1>*/}\r\n//                                     <div className=\"jobBox card mb-4\">\r\n//                                         <div className=\"card-body\">\r\n//                                             <div className=\"caption\">\r\n//                                                 <h3 className=\"d-flex align-items-center pr-0\">\r\n//                                                     <div className=\"col pl-0\">\r\n//                                                         {item && item.title}\r\n//                                                         {/*<small> {item && item.category && item.category.parent ? item.category.parent.title + ',' : null} {item && item.category.title}</small>*/}\r\n//                                                     </div>\r\n//                                                 </h3>\r\n//                                             </div>\r\n//                                             <div className=\"prices d-flex align-items-center\">\r\n//                                                 {item && item.settlement && item && item.settlement === 'cash' && <div className=\"price\">${item && item.budget}</div>}\r\n//                                                 {/*<div className=\"fixed badge badge-secondary text-capitalize\">{item && item.settlement}</div>*/}\r\n//                                                 <div className=\"fixed badge badge-secondary text-capitalize\">{(item && item.settlement === 'both') ? 'Cash & Exchange' : item && item.settlement}</div>\r\n//                                                 {item && item.settlement && item && item.settlement === 'cash' &&\r\n//                                                     <div className=\"cash badge badge-success text-capitalize\">{item && item.type}</div>}\r\n//                                             </div>\r\n//                                             {item && item.skills &&\r\n//                                             <div className=\"chips\">\r\n//                                                 <h6 className=\"h6 mb-0\">Skills</h6>\r\n//                                                 {item && item.skills.map((skill) =>\r\n//                                                     <div className=\"badge badge-secondary\" key={skill.id}>{skill.title}</div>\r\n//                                                 )}\r\n//                                             </div>}\r\n//                                             {/*<div className=\"d-flex align-items-center proposals mb-0\">*/}\r\n//                                                 {/*<div className=\"deadline\">*/}\r\n//                                                     {/*{<h6>Project Deadline</h6>} {item && item.duration && `${item.duration - 4} - ${item.duration} Weeks`}*/}\r\n//                                                 {/*</div>*/}\r\n//                                                 {/*<div className=\"deadline\">*/}\r\n//                                                     {/*<h6>Visiblity</h6> {item && item.visibility}*/}\r\n//                                                 {/*</div>*/}\r\n//                                                 {/*<div className=\"deadline\">*/}\r\n//                                                     {/*<h6>Published on</h6> {(new Date(item && item.created_at * 1000)).toLocaleDateString('en-GB', {*/}\r\n//                                                         {/*year: 'numeric',*/}\r\n//                                                         {/*month: 'short',*/}\r\n//                                                         {/*day: '2-digit'*/}\r\n//                                                     {/*})}*/}\r\n//                                                 {/*</div>*/}\r\n//                                                 {/*<div className=\"deadline\">*/}\r\n//                                                     {/*<h6>Proposals</h6> {item && item.proposal_count}*/}\r\n//                                                 {/*</div>*/}\r\n//                                             {/*</div>*/}\r\n//                                             {/*<ReadMoreReact className=\"text\" text={gs.html2text(item && item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} />*/}\r\n//                                             {/*<div className=\"text\" dangerouslySetInnerHTML={{ __html: item && item.description }}></div>*/}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 sorting d-flex align-items-center\">\r\n//                                     { /* <div className=\"sort\">\r\n//                                         <Select\r\n//                                             className=\"multiple-select\"\r\n//                                             classNamePrefix=\"multi\"\r\n//                                             placeholder=\"Sort By\"\r\n//                                             name=\"sort\"\r\n//                                             onChange={this.handleAll}\r\n//                                             options={[{ value: \"id\", label: \"Ascending\" }, { value: \"-id\", label: \"Descending\" }]} />\r\n//                                                 </div> */}\r\n//                                 </div>\r\n//                                 <div className=\"col-12\">\r\n//                                     {item && item.userItemProposals && <div className=\"card-body px-0 pt-0\">\r\n//                                         <h5 className=\"card-title\" style={{fontSize: '18px'}}>Received Proposals ({item && item.userItemProposals.length})</h5>\r\n//                                         <hr style={{margin: '10px 0px'}} />\r\n//                                         { <ProposalReceived results={item.userItemProposals} module={ModuleHelper.UserItem} />}\r\n//                                     </div>}\r\n\r\n//                                 </div>\r\n//                             </Fragment>}\r\n//                         </Fragment>}\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </Main>);\r\n//     }\r\n// }\r\n\r\n// const processSelector = createSelector(\r\n//     state => state.process,\r\n//     process => process\r\n// );\r\n\r\n// const jobSelector = createSelector(\r\n//     state => state.jobs,\r\n//     jobs => jobs\r\n// );\r\n\r\n// const mapStateToProps = createSelector(\r\n//     processSelector,\r\n//     jobSelector,\r\n//     (process, jobs) => ({\r\n//         process, jobs\r\n//     })\r\n// );\r\n\r\n// export default connect(mapStateToProps)(JobView);\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { itemService, globalService as gs } from '../../../common/services';\r\nimport { alertSelectors } from '../../../common/redux/selectors';\r\nimport { PlaceOffer, ProposalReceived } from '../Contract/partials';\r\nimport { ModuleHelper, commonHelper } from '../../../helpers';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { FacebookShareButton, LinkedinShareButton, TwitterShareButton } from \"react-share\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n// import '../../../../assets/css/font-awesome.min.css';\r\n\r\n\r\nconst deadlineList = [\r\n    { id: 1, value: 'Up to 3 days' },\r\n    { id: 2, value: 'Up to 1 week' },\r\n    { id: 3, value: 'Up to 1 month' },\r\n    { id: 4, value: 'Up to 3 months' },\r\n    { id: 5, value: 'Up to 6 months' },\r\n    { id: 6, value: 'Up to 1 year' },\r\n];\r\nconst status_declined = 2;\r\nconst status_completed = 7;\r\n\r\nclass JobView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n            id: null,\r\n            loading: null,\r\n            servicesList: null,\r\n            favorite: {},\r\n            setOffer: false,\r\n            proposalStatus: false,\r\n            proposal: null\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { match, dispatch, authentication } = this.props;\r\n        const id = match.params.id;\r\n        const user = authentication.authentication.user;\r\n        this.setState({ id: id ? id : null });\r\n        //dispatch(jobActions.index(\"GET\", null, { item_id: id }));\r\n        this.job(id);\r\n        itemService.proposal(\"GET\", null, { item_id: id, user_id: user.id, moduleId: 'UserItem' }).then(response => {\r\n            this.setState({ proposal: response.items[0] });\r\n        });\r\n        itemService.service(\"GET\", null, { user_id: user.id }).then(response => {\r\n            this.setState({ servicesList: response.items });\r\n        });\r\n    }\r\n\r\n    job = (id) => {\r\n        itemService.job(\"GET\", null, { item_id: id }).then(res => {\r\n            this.setState({ item: res.model, proposalStatus: res.model.proposalStatus });\r\n        });\r\n    };\r\n\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userFavorite\": {\r\n                favorite_id: item.id,\r\n                moduleId: \"UserItem\"\r\n            }\r\n        };\r\n\r\n        let method = (item.is_favorite) ? \"DELETE\" : \"POST\";\r\n        let param = (item.is_favorite) ? { item_id: item.is_favorite } : null;\r\n        let action = (item.is_favorite) ? \"remove\" : \"add\";\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to ${action}`,\r\n            message: `Are you sure to ${action} this favorite list`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(method, params, param)\r\n                            .then(response => {\r\n                                if (method === \"POST\") dispatch(alertSelectors.success(\"You have successfully selected a favorite.\"));\r\n                                if (method === \"DELETE\") dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                item.is_favorite = (method === \"POST\") ? response.model.id : false;\r\n                                this.setState({ favorite: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    offerOpen = () => {\r\n        this.setState({\r\n            setOffer: true\r\n        })\r\n    };\r\n\r\n    offerClose = (event, type) => {\r\n        this.setState({\r\n            setOffer: false\r\n        });\r\n        this.setState(type);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { item, setOffer, proposalStatus, servicesList, proposal } = this.state;\r\n\r\n        console.log('proposal', proposal);\r\n        return (<Main>\r\n            <DocumentTitle title={item && item.title} />\r\n            {item && <PlaceOffer open={setOffer} item={item} item_id={item.id} servicesList={servicesList} moduleId={ModuleHelper.UserItem} offerClose={this.offerClose} title={`Place A Bid`} buttonTitle={`Submit proposal`} isJob={true} />}\r\n            {/* <div className=\"job-individual bg-body\">\r\n                <div className=\"container\">\r\n                    {(item && item.length === 0) ? <Redirect to={{ pathname: '/not-found' }} /> :\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-9 col-md-8 col-12\">\r\n                                <div className=\"card views mb-4\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"heading border-bottom mb-3\">\r\n                                            <h1>{item && item.title}</h1>\r\n                                            <h6 className=\"mb-3\">{item && item.category.parent ? item.category.parent.title + ',' : null} {item && item.category.title}</h6>\r\n                                            <div className=\"prices d-flex align-items-center\">\r\n                                                {item && item.settlement === 'cash' && <div className=\"price\">${item && item.budget}</div>} */}\r\n            {/*<div className=\"fixed badge badge-success text-capitalize\">{item && item.settlement}</div>*/}\r\n            {/* <div className=\"fixed badge badge-secondary text-capitalize\">{(item && item.settlement === 'both') ? 'Cash & Exchange' : item && item.settlement}</div>\r\n                                                {item && item.settlement === 'cash' &&\r\n                                                    <div className=\"cash badge badge-success text-capitalize\">{item && item.type}</div>}\r\n                                                {item && item.is_nda === 1 && <div className=\"cash badge badge-primary ml-1\">With NDA</div>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-start proposals mb-3\">\r\n                                            <div className=\"deadline w-20\">\r\n                                                <h6>Deadline</h6>\r\n                                                {item && item.deadline && deadlineList.map((el) => <Fragment key={`deadline${el.id}`}>\r\n                                                    {(parseInt(el.id) === parseInt(item.deadline)) ? el.value : ''}\r\n                                                </Fragment>)}\r\n                                            </div>\r\n                                            <div className=\"deadline w-20\">\r\n                                                <h6>Visiblity</h6> {gs.capitalize(item && item.visibility)}\r\n                                            </div>\r\n                                            <div className=\"deadline w-20\">\r\n                                                <h6>Published</h6> {(new Date(item && item.created_at * 1000)).toLocaleDateString('en-GB', {\r\n                                                    year: 'numeric',\r\n                                                    month: 'short',\r\n                                                    day: '2-digit'\r\n                                                })}\r\n                                            </div> */}\r\n            {/*<div className=\"deadline w-20\">*/}\r\n            {/*<h6>Proposals</h6> {item && item.proposal_count}*/}\r\n            {/*</div>*/}\r\n            {/* </div>\r\n                                        <div className=\"text\" dangerouslySetInnerHTML={{ __html: item && item.description }}></div>\r\n\r\n                                        <div className=\"chips mb-3\">\r\n                                            <h6 className=\"h6\">Skills</h6>\r\n                                            {(item && item.skills.length === 0) && 'Skills not found'}\r\n                                            {item && item.skills.map((skill) =>\r\n                                                <div className=\"badge badge-secondary\" key={skill.id}>{skill.title}</div>\r\n                                            )}\r\n                                        </div>\r\n                                        {(item && item.userItemLocations.length > 0) &&\r\n                                        <div className=\"chips mb-3\">\r\n                                            <h6 className=\"h6\">Freelancer Location Peferences</h6>\r\n                                            {item && item.userItemLocations && item.userItemLocations.map((location) =>\r\n                                                <div className=\"badge badge-secondary\" key={`location-${location.country_id}`}>{location.name}</div>\r\n                                            )}\r\n                                        </div>}\r\n\r\n                                        <div className=\"document\">\r\n                                            <h6 className=\"h6\">Portfolio</h6>\r\n                                            <div className=\"row padding-5\">\r\n                                                {item && item.media.docs && item.media.docs.map((doc) =>\r\n                                                    <div className=\"col-lg-2 col-md-3 col-sm-4 col-6\" key={doc.id}>\r\n                                                        <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                            <div className=\"d-flex align-items-center justify-content-center\" style={{height: '110px'}}>\r\n                                                                {(doc.mimetype === 'application/pdf') ?\r\n                                                                    <i className=\"far fa-file-pdf fa-3x text-info\"></i>\r\n                                                                    : (doc.mimetype === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') ?\r\n                                                                        <i className=\"far fa-file-word fa-3x text-info\"></i>\r\n                                                                        : <i className=\"far fa-file fa-3x text-info\"></i>}\r\n                                                            </div>\r\n                                                            <h6 className=\"text-truncate px-1\">\r\n                                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${doc.path}`} title={doc.filename} download><small>{doc.filename}</small></a>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                                {item && item.media.image && item.media.image.map((imag) =>\r\n                                                    <div className=\"col-lg-2 col-md-3 col-sm-4 col-6\" key={imag.id}>\r\n                                                        <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                            <img src={imag.thumb} alt={imag.filename} className=\"img-fluid w-100\" style={{ maxHeight: '108px', maxWidth: \"100%\" }} />\r\n                                                            <h6 className=\"text-truncate px-1\">\r\n                                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${imag.path}`} title={imag.filename} download><small>{imag.filename}</small></a>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {item && item.media.video && item.media.video.map((video) =>\r\n                                                    <div className=\"col-lg-2 col-md-3 col-sm-4 col-6\" key={video.id}>\r\n                                                        <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                            <video style={{ maxHeight: '170px', width: \"100%\" }} controls>\r\n                                                                <source src={video.path} type={video.type} />\r\n                                                                Your browser does not support the video tag.\r\n                                                            </video>\r\n                                                            <h6 className=\"text-truncate px-1\">\r\n                                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${video.path}`} title={video.filename} download><small>{video.filename}</small></a>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {(item && item.media.length === 0) && <div className=\"col-12\">Portfolio not found</div>}\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"card mb-4 questinList\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5>Service that I can exchange</h5>\r\n                                        <div className=\"row\">\r\n                                            {item && item.services.map((service) =>\r\n                                            <div className=\"col-lg-4 col-sm-6 col-12\" key={service.id}>\r\n                                                <div className=\"jobBox\">\r\n                                                    <div className=\"priview d-flex flex-wrap pb-0 border-bottom-0\">\r\n                                                        {(service.cover) && <div className=\"image\">\r\n                                                            <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={service.cover.thumb} effect=\"blur\" />\r\n                                                        </div>}\r\n                                                        <div className=\"caption\">\r\n                                                            <h4>\r\n                                                                {service.title}\r\n                                                            </h4>\r\n                                                            <div className=\"ratings d-flex align-items-center\">\r\n                                                                <small>({service.avg_rating})</small>\r\n                                                                <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                                    <Rating value={Math.floor(service.avg_rating)} readOnly />\r\n                                                                </Box>\r\n                                                            </div>\r\n                                                            <div className=\"price\">\r\n                                                                <span className=\"\">{service.budget}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"card mb-4 questinList\">\r\n                                    <div className=\"card-body\">\r\n                                        {(item && item.userItemQuestions.length === 0) && 'Questions not found'}\r\n                                        {item && item.userItemQuestions.map((question, index) =>\r\n                                            <div className=\"border-bottom\" key={question.id}>\r\n                                                <h5>Question {index + 1}</h5>\r\n                                                <p>{question.question}</p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-lg-3 col-md-4 col-12\">\r\n                                <div className=\"card mb-4 postBid\">\r\n                                    <div className=\"card-body\">\r\n                                        <h3>Submit Proposal</h3>\r\n                                        <div className=\"card-text mb-2\">Please ensure you fill out your profile before sending a proposal</div>\r\n\r\n                                        {(item && !gs.isOwner(item.user_id) && (proposalStatus === false) && (item.is_closed === 0) && !(proposal && proposal.status === status_declined)) &&\r\n                                            <div className=\"action mt-3\">\r\n                                                {<button className=\"btn btn-info btn-block\" onClick={this.offerOpen}>Send Proposal</button>}\r\n                                            </div>\r\n                                        }\r\n                                        {((item && proposalStatus === true) && !(proposal && parseInt(proposal.status) === parseInt(status_completed)) && !(proposal && parseInt(proposal.status) === parseInt(status_declined))) && <button className=\"btn btn-info btn-block mt-3\" >Proposal in Process</button>}\r\n                                        {((item && proposalStatus === true) && (proposal && parseInt(proposal.status) === parseInt(status_completed))) && <button className=\"btn btn-info btn-block mt-3\" >Contract Completed</button>}\r\n                                        {((item && !gs.isOwner(item.user_id)) && (proposal && parseInt(proposal.status) === parseInt(status_declined))) && <button className=\"btn btn-info btn-block mt-3\" >Proposal Declined</button>}\r\n                                        <ul className=\"social-login nav justify-content-center\">\r\n                                            <li className=\"nav-item verified\">\r\n                                                <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item && item)}>\r\n                                                    {(item && item.is_favorite) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                                        <i className=\"far fa-heart\"></i>}\r\n                                                </IconButton>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <FacebookShareButton\r\n                                                    url={`${gs.rootUrl}/user/public/job/view/${item && item.id}`}\r\n                                                    quote={item && item.title}\r\n                                                    className=\"share-button\">\r\n                                                    <IconButton className=\"favorite\" title=\"Facebook\">\r\n                                                        <i className=\"fab fab fa-facebook-f\"></i>\r\n                                                    </IconButton>\r\n                                                </FacebookShareButton>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <TwitterShareButton\r\n                                                    url={`${gs.rootUrl}/user/public/job/view/${item && item.id}`}\r\n                                                    title={item && item.title}\r\n                                                    className=\"share-button\">\r\n                                                    <IconButton className=\"favorite\" title=\"Twitter\">\r\n                                                        <i className=\"fab fa-twitter\"></i>\r\n                                                    </IconButton>\r\n                                                </TwitterShareButton>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <LinkedinShareButton\r\n                                                    url={`${gs.rootUrl}/user/public/job/view/${item && item.id}`}\r\n                                                    windowWidth={750}\r\n                                                    windowHeight={600}\r\n                                                    className=\"share-button\">\r\n                                                    <IconButton className=\"favorite\" title=\"Linkedin\">\r\n                                                        <i className=\"fab fab fa-linkedin-in\"></i>\r\n                                                    </IconButton>\r\n                                                </LinkedinShareButton>\r\n                                            </li> */}\r\n            {/*{item && item.user.userProfilePlatforms && item.user.userProfilePlatforms.length > 0 &&\r\n                                                item.user.userProfilePlatforms.map((platform) => (<li className=\"nav-item\" key={`platform-${platform.id}`}>\r\n                                                    <IconButton className=\"favorite\" title={platform.title}>\r\n                                                        <i className={`fab ${platform.icon}`}></i>\r\n                                                    </IconButton>\r\n                                                </li>))}*/}\r\n            {/* </ul>\r\n                                    </div>\r\n                                </div>\r\n                                {item && <div className=\"card mb-4 buyerInfo\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h5 className=\"card-title text-black pb-2\">Client's Profile</h5>\r\n                                        <div className=\"image\">\r\n                                            {gs.isOwner(item.user.id) && <NavLink to={`/user/public/about/${item.user.id}`}>\r\n                                                <img className=\"rounded-circle\" src={item && item.user.avatar} alt=\"Images\" width=\"100\" height=\"100\" /></NavLink>}\r\n                                        </div>\r\n                                        <div className=\"text mb-0\">\r\n                                            {gs.isOwner(item.user.id) && <h4 style={{fontSize: '16px'}}><NavLink to={`/user/public/about/${item.user.id}`}>{item.user.name}</NavLink></h4>}\r\n                                            <div className=\"rating d-flex align-items-center justify-content-center\">\r\n                                                {item.user.avg_rating > 0 && <small>({parseFloat(item.user.avg_rating)})</small>}\r\n                                                <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                    <Rating value={parseFloat(item.user.avg_rating)} readOnly size=\"small\" />\r\n                                                </Box>\r\n                                                <small className=\"count\">({item.proposal_count})</small>\r\n                                            </div>\r\n                                            <h6>{item.user.title} <br />\r\n                                                {item.user && commonHelper.address(item.user)}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div> */}\r\n\r\n            <section class=\"jobpost\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"card-box-profile\">\r\n                            <div class=\"col-lg-12 col-md-12 col-sm-6 col-xs-12\">\r\n\r\n                                <div class=\"row bottom-sec\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <h3>{item && item.title}</h3>\r\n                                        <h4>{item && item.category.parent && item.category.parent.title} - {item && item.category.title}</h4>\r\n\r\n                                        <div class=\"col-lg-12\">\r\n                                            <hr class=\"small-hr\" />\r\n                                        </div>\r\n\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Posted </h5>\r\n                                            <p>{(new Date(item && item.created_at * 1000)).toLocaleDateString('en-GB', {\r\n                                                year: 'numeric',\r\n                                                month: 'short',\r\n                                                day: '2-digit'\r\n                                            })}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Location </h5>\r\n                                            <p><i class=\"fas fa-map-marker-alt\"></i>{item && item.user.countryCode && item.user.countryCode.name}</p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Budget </h5>\r\n                                            <p>{item && item.budget}</p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Duration </h5>\r\n                                            <p>{item && item.deadline && deadlineList.map((el) => <Fragment key={`deadline${el.id}`}>\r\n                                                {(parseInt(el.id) === parseInt(item.deadline)) ? el.value : ''}\r\n                                            </Fragment>)}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Proposals </h5>\r\n                                            <p>{item && item.proposal_count}</p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2 buttton\">\r\n                                            {(item && !gs.isOwner(item.user_id) && (proposalStatus === false) && (item.is_closed === 0) && !(proposal && proposal.status === status_declined)) &&\r\n                                                <a href=\"#\" onClick={this.offerOpen} class=\"kafe-btn kafe-btn-mint-small\"><i class=\"fa fa-align-left\"></i> Send Proposal</a>\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section class=\"profile-details\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-lg-7 col-md-7 col-sm-6 col-xs-12\">\r\n                            <div class=\"card-box-profile-details\">\r\n\r\n                                <div class=\"description-profile\">\r\n\r\n                                    <ul class=\"tr-list resume-info\">\r\n\r\n                                        <li>\r\n                                            <div class=\"icon\">\r\n                                                <p class=\"tr-title\"><i class=\"fab fa-black-tie\"></i> Job Description</p>\r\n                                            </div>\r\n                                            <div className=\"media-body\" dangerouslySetInnerHTML={{ __html: item && item.description }}></div>\r\n                                            <div className=\"chips mb-3\">\r\n                                                <h6 className=\"h6\">Skills</h6>\r\n                                                {(item && item.skills.length === 0) && 'Skills not found'}\r\n                                                {item && item.skills.map((skill) =>\r\n                                                    <div className=\"badge badge-secondary\" key={skill.id}>{skill.title}</div>\r\n                                                )}\r\n                                            </div>\r\n                                            {(item && item.userItemLocations.length > 0) &&\r\n                                                <div className=\"chips mb-3\">\r\n                                                    <h6 className=\"h6\">Freelancer Location Peferences</h6>\r\n                                                    {item && item.userItemLocations && item.userItemLocations.map((location) =>\r\n                                                        <div className=\"badge badge-secondary\" key={`location-${location.country_id}`}>{location.name}</div>\r\n                                                    )}\r\n                                                </div>}\r\n                                        </li>\r\n\r\n\r\n                                    </ul>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            {item && item.userItemQuestions &&\r\n                                <div class=\"work\">\r\n\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"icon\">\r\n                                            <p class=\"tr-title\">Questions</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"questionDiv\">\r\n                                        {(item && item.userItemQuestions.length === 0) && 'Questions not found'}\r\n                                        {item && item.userItemQuestions.map((question, index) =>\r\n                                            <div className=\"border-bottom\" key={question.id}>\r\n                                                <h5>Question {index + 1}</h5>\r\n                                                <p>{question.question}</p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-5 col-md-5 col-sm-8 col-xs-12\">\r\n\r\n                            <div class=\"stats\">\r\n                                <div class=\"row\">\r\n                                    <h5>Service that I can exchange </h5>\r\n                                    <div style={{ width: \"100%\" }} className=\"row\">\r\n                                        {item && item.services.map((service) =>\r\n                                            <div className=\"col-lg-12\" key={service.id}>\r\n                                                <div className=\"jobBox\">\r\n                                                    <div className=\"priview d-flex flex-wrap pb-0 border-bottom-0\">\r\n                                                        {(service.cover) && <div className=\"image\">\r\n                                                            <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={service.cover.thumb} effect=\"blur\" />\r\n                                                        </div>}\r\n                                                        <div className=\"caption\">\r\n                                                            <h4>\r\n                                                                {service.title}\r\n                                                            </h4>\r\n                                                            <div className=\"ratings d-flex align-items-center\">\r\n                                                                <small>({service.avg_rating})</small>\r\n                                                                <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                                    <Rating value={Math.floor(service.avg_rating)} readOnly />\r\n                                                                </Box>\r\n                                                            </div>\r\n                                                            <div className=\"price\">\r\n                                                                <span className=\"\">{service.budget}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* <div class=\"stats\">\r\n                                <div class=\"row\">\r\n                                    <h5>Activity</h5>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>3</h6>\r\n                                        <p class=\"bottom\">Proposals</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>0</h6>\r\n                                        <p class=\"bottom\">Interviewing</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>0</h6>\r\n                                        <p class=\"bottom\">Hired</p>\r\n                                    </div>\r\n                                    <p class=\"bottom\"> Last viewed by client: <b> 3 days ago </b></p>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div class=\"card-box text-center\">\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"member-card\">\r\n                                    <h3>Client's profile</h3>\r\n                                    <div class=\"thumb-xl member-thumb m-b-10 center-block\">\r\n                                        <LazyLoadImage alt=\"image\" class=\"img-circle img-thumbnail\" src={item && item.user.avatar} effect=\"blur\" />\r\n                                        {/* <img src={item && item.user.avatar} class=\"img-circle img-thumbnail\" alt=\"profile-image\" /> */}\r\n                                        {/* <i class=\"fa fa-star member-star text-success\" title=\"verified user\"></i> */}\r\n                                    </div>\r\n                                    <h5><NavLink to={`/user/public/about/${item && item.user.id}`}>{item && item.user.name}</NavLink></h5>\r\n\r\n                                    {/* <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <h4 class=\"top\">1</h4>\r\n                                            <p class=\"bottom\">Jobs Posted</p>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <h4 class=\"top\">$0.00</h4>\r\n                                            <p class=\"bottom\">Spent</p>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-12 col-md-12 col-sm-6 col-xs-12 stats\">\r\n                            {item && item.userItemProposals && <div className=\"card-body px-0 pt-0\">\r\n                                <h5 className=\"card-title\" style={{ fontSize: '18px' }}>Received Proposals ({item && item.userItemProposals.length})</h5>\r\n                                <hr style={{ margin: '10px 0px' }} />\r\n                                {<ProposalReceived results={item.userItemProposals} module={ModuleHelper.UserItem} />}\r\n                            </div>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </Main>);\r\n    }\r\n}\r\nconst jobSelector = createSelector(\r\n    state => state.jobs,\r\n    jobs => jobs\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    jobSelector,\r\n    authenticationSelector,\r\n    (jobs, authentication) => ({\r\n        jobs, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(JobView);\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass JobSuccess extends Component {\r\n    render() {\r\n        return (<Main>\r\n            <div className=\"create-service bg-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10 col-12 mx-auto\">\r\n                            <div className=\"card custom-card success-service py-md-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"image mb-3\">\r\n                                        <img src=\"/images/success1.PNG\" alt=\"\" className=\"img-fluid\" />\r\n                                    </div>\r\n                                    <h2>Your information has been submitted successfully</h2>\r\n                                    {/* <p>This information first goes to verify and approval. we ‘ll send you notification before publishing. <br /> Generally it will take 24-48 hours to review your</p> */}\r\n                                    <p className=\"mb-0\"><NavLink to={'/jobs'} className=\"btn btn-primary text-uppercase px-3 active font-weight-bold\">Return to Jobs</NavLink></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default JobSuccess;","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\n\r\nclass JobProposalView extends Component {\r\n    render() {\r\n        return (<Main>\r\n            <DocumentTitle title=\"Job Proposal Details\" />\r\n            <div className=\"service-proposal bg-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1>Job Proposal Details</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default JobProposalView;","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { blogAction } from '../../../common/redux/actions';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport moment from \"moment\";\r\nimport { FreelancerListLoader } from '../../../common/loaders';\r\n\r\nclass BlogCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            moduleId: 'blog',\r\n            category_slug: '',\r\n            page: 1,\r\n            pagesize: 30,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.onRouteChanged();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            if(this.props.match.params.slug !== 'all') {\r\n                this.setState({ category_slug: this.props.match.params.slug }, () => this.onRouteChanged());\r\n            } else {\r\n                this.setState({ category_slug: null }, () => this.onRouteChanged());\r\n            }\r\n            if(prevProps.match.params.slug !== this.props.match.params.slug) {\r\n                //this.onRouteChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n    onRouteChanged = () => {\r\n        const { dispatch } = this.props;\r\n        dispatch(blogAction.item(\"GET\", null, this.state));\r\n    };\r\n\r\n    onChangePage = (page) => {\r\n        this.setState({ page });\r\n        //this.onRouteChanged();\r\n    };\r\n\r\n    render() {\r\n        const { pagesize } = this.state;\r\n        const { blog, process } = this.props;\r\n        let items = blog.list ? blog.list.items : [];\r\n        return (\r\n            <div className=\"w-100\">\r\n                <DocumentTitle title={'Blog'}/>\r\n                <div className=\"row\">\r\n                {(process.loading) ? <Fragment>{[1,2].map(item => <div className=\"col-md-6 col-12\" key={item}><FreelancerListLoader listCount={0} /></div>)}</Fragment> : <Fragment>\r\n                    {items && items.length === 0 && <div className=\"col\">Blog not found</div>}\r\n                    {items && items.map((item) =>\r\n                        <div className=\"col-md-6 col-12\" key={item.id}>\r\n                            <div className=\"blog-box mb-4\">\r\n                                {item && item.blog_image && \r\n                                    <div className=\"image\">\r\n                                        <img src={item.blog_image && item.blog_image.path} alt=\"\" className=\"img-fluid\" />\r\n                                    </div>\r\n                                }\r\n                                <div className=\"caption\">\r\n                                    <h4 className=\"text-truncate\"><Link to={`/press-release/${item.slug}`}>{item.title}</Link></h4>\r\n                                    <div className=\"date pl-0\">{moment(item.created_at * 1000).format('LL')} | <span className=\"text-primary\">{(item && item.created_by) ? item.created_by : 'JoBarter Team'}</span></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"col-12\">\r\n                        <Pagination className=\"justify-content-end\"\r\n                            pageSize={pagesize}\r\n                            totalCount={(blog && blog.list && blog.list.pagination && blog.list.pagination.totalCount) ? blog.list.pagination.totalCount : 10}\r\n                            onChangePage={this.onChangePage} />\r\n                    </div>\r\n                    </Fragment>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst blogSelector = createSelector(\r\n    state => state.blog,\r\n    blog => blog\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    blogSelector,\r\n    (process, blog) => ({\r\n        process, blog\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(BlogCategory);","import React, { Component, Fragment } from 'react';\r\nimport { Main } from '../../layout';\r\nimport BlogCategory from './BlogCategory';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport {history} from '../../../helpers/history';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { blogAction } from '../../../common/redux/actions';\r\n\r\nclass BlogList extends Component {\r\n    componentDidMount() {\r\n        history.push(`/blog/category/all`);\r\n        const { dispatch, blog } = this.props;\r\n        Object.getOwnPropertyNames(blog).length === 0 && dispatch(blogAction.categories(\"GET\", null, { parent_id: 2 }));\r\n    }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     if (this.props.location !== prevProps.location) {\r\n    //         history.push(`/blog/category/all`);\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const params = this.props.match;\r\n        const { blog } = this.props;\r\n        let categories = blog.categories ? blog.categories.items : [];\r\n        //console.log(categories);\r\n        return (<Main>\r\n            <DocumentTitle title={`Blog`}/>\r\n            <div className=\"blog-page\" >\r\n                <div className=\"heading border-bottom\">\r\n                    <img src=\"/images/articlebg.png\" alt=\"\" className=\"img-fluid\" />\r\n                    <div className=\"caption d-flex align-items-center justify-content-center w-100 h-100\">\r\n                        <h1 className=\"text-center mt-4 mt-lg-4 pb-3\">Blogs</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Route path={params.url} exact render={() => (<Fragment>                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 mb-3 mb-lg-5\">\r\n                                <ul className=\"nav nav-tabs justify-content-center\">\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to={`/blog/category/all`}>All</NavLink>\r\n                                    </li>\r\n                                    {categories && categories.map((item) =>\r\n                                        <li className=\"nav-item\" key={item.category_id}>\r\n                                            <NavLink className=\"nav-link\" to={`/blog/category/${item.slug}`}>{item.name}</NavLink>\r\n                                        </li>\r\n                                    )}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <Route path={`/blog/category/:slug`} component={BlogCategory}/>\r\n                    </Fragment>)}/>\r\n                    \r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst blogSelector = createSelector(\r\n    state => state.blog,\r\n    blog => blog\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    blogSelector,\r\n    (process, blog) => ({\r\n        process, blog\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(BlogList);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport moment from \"moment\";\r\nimport { blogAction } from '../../../common/redux/actions';\r\nimport { FormLoader } from '../../../common/loaders';\r\nimport { Link } from 'react-router-dom';\r\nimport { globalService as gs } from '../../../common/services';\r\nimport { FacebookShareButton, LinkedinShareButton, TwitterShareButton } from 'react-share';\r\n\r\nclass BlogView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(blogAction.item(\"GET\", null, {slug: this.props.match.params.slug}));\r\n    }\r\n\r\n    render() {\r\n        const { location, blog, process } = this.props;\r\n        let item = blog.list ? blog.list.item : [];\r\n        let search = new URLSearchParams(location.search);\r\n\r\n        return (<Main onlycontent={search.get(\"onlycontent\")}>\r\n                <DocumentTitle title={item && item.title}/>\r\n                <div className=\"bIndividual\">\r\n                    <div className=\"container bg-white\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {(process.loading) ? <div className=\"py-3\"><FormLoader listCount={3} /></div> : \r\n                                <div className=\"content py-3 h-auto\">\r\n                                    {item && item.blog_image && <figure><img src={item.blog_image && item.blog_image.path} alt=\"\" className=\"img-fluid\" /></figure>}\r\n\r\n                                    <h2 className=\"text-center\">{item && item.title}</h2>\r\n                                    <ul className=\"updated d-flex align-items-center flex-wrap\">\r\n                                        <li className=\"\">{moment(item && item.created_at * 1000).format('LL')}</li>\r\n                                        <li className=\"text-primary\">{(item && item.created_by) ? item.created_by : 'JoBarter Team'}</li>\r\n                                    </ul>\r\n                                    <div className=\"details border-bottom-0\">\r\n                                        <div dangerouslySetInnerHTML={{__html: item && item.content}}></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"tags border-top d-flex flex-wrap align-items-center justify-content-center\">\r\n                                        <div className=\"d-flex align-items-center col pl-0\">\r\n                                            <big>Tag:</big>\r\n                                            <ul className=\"chip d-flex align-items-center mb-0\">\r\n                                                <li><Link to=\"#\" className=\"active\">Sales</Link></li>\r\n                                                <li><Link to=\"#\">Tyre</Link></li>\r\n                                                <li><Link to=\"#\">DIY</Link></li>\r\n                                                <li><Link to=\"#\">Medical</Link></li>\r\n                                                <li><Link to=\"#\">Transport</Link></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"sharing d-flex align-items-center\">\r\n                                            <big>Share this blog</big>\r\n                                            <ul className=\"d-flex \">\r\n                                                <li>\r\n                                                    <FacebookShareButton\r\n                                                        url={`${gs.rootUrl}/press-release/${item && item.slug}`}\r\n                                                        quote={item && item.title}\r\n                                                        className=\"share-button\">\r\n                                                        <i className=\"fab fab fa-facebook-f\"></i>\r\n                                                    </FacebookShareButton>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <TwitterShareButton\r\n                                                        url={`${gs.rootUrl}/press-release/${item && item.slug}`}\r\n                                                        title={item && item.title}\r\n                                                        className=\"share-button\">\r\n                                                        <i className=\"fab fa-twitter\"></i>\r\n                                                    </TwitterShareButton>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <LinkedinShareButton\r\n                                                        url={`${gs.rootUrl}/press-release/${item && item.slug}`}\r\n                                                        windowWidth={750}\r\n                                                        windowHeight={600}\r\n                                                        className=\"share-button\">\r\n                                                        <i className=\"fab fab fa-linkedin-in\"></i>\r\n                                                    </LinkedinShareButton>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst blogSelector = createSelector(\r\n    state => state.blog,\r\n    blog => blog\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    blogSelector,\r\n    (process, blog) => ({\r\n        process, blog\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(BlogView);","import React, {Fragment} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {withSnackbar} from 'notistack';\r\nimport {createSelector} from \"reselect\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nclass Notifier extends React.Component {\r\n\r\n    componentDidUpdate() {\r\n        const {alert, enqueueSnackbar, closeSnackbar} = this.props;\r\n        if (alert) {\r\n            const action = (key) => (\r\n                <Fragment>\r\n                    <Button className=\"text-white\" style={{fontSize: '10px'}} onClick={() => {\r\n                        closeSnackbar(key)\r\n                    }}>\r\n                        {'Dismiss'}\r\n                    </Button>\r\n                </Fragment>\r\n            );\r\n\r\n            enqueueSnackbar && enqueueSnackbar((alert.message ? alert.message : ''), {\r\n                action,\r\n                variant: alert.type,\r\n                anchorOrigin: {\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst alertSelector = createSelector(\r\n    state => state.alert,\r\n    alert => alert\r\n);\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    alertSelector,\r\n    (alert) => ({\r\n        alert\r\n    })\r\n);\r\n\r\nexport default withSnackbar(connect(mapStateToProps)(Notifier));\r\n","import React, {Fragment} from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport { globalService as gs } from \"../../../../../common/services\";\r\n\r\nconst NavBar = (prop) => {\r\n\r\n    const authentication = gs.parseItem('authentication');\r\n    const is_co_founder = authentication.user.userProfile.is_co_founder;\r\n\r\n\r\n    return (<Fragment>\r\n        <ul className=\"nav flex-column mb-4\">\r\n            <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/user/update\">Profile</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/user/experience-and-education\">Experience & Education</NavLink>\r\n            </li>\r\n            { (is_co_founder === 1) &&\r\n            <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/user/co-founder\">Co-founder</NavLink>\r\n            </li>\r\n            }\r\n        </ul>\r\n        <div className=\"card card-instruction\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"text-center section-titles\">Instruction</h5>\r\n                <hr/>\r\n                <div className=\"description-profile\">\r\n<ul className=\"tr-list resume-info\">\t\t\t\r\n\r\n <li>\r\n { (prop.instruction === 'profile') && <div className=\"media-body\">Filling out your profile information thoroughly will help us better meet your freelancing goals. Based on your specific interests, other members will be reviewing your profile before deciding whether to hire you, exchange services with you, or to consider you as a co-founder on their business ideas. It is really important to diligently highlight the breadth of your experience to make your profile standout.</div> }\r\n { (prop.instruction === 'experience') && <div className=\"media-body\">Provide comprehensive information about your professional experience and education to highlight your expertise.</div> }\r\n { (prop.instruction === 'co-founder') && <div className=\"media-body\">To more effectively match you with ideal co-founders for your business ideas, please ensure that you fill out all of your information, and also include your wish list request.</div> }\r\n </li>\t\r\n </ul>\r\n </div>\r\n\r\n\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    </Fragment>);\r\n};\r\n\r\nexport default NavBar;\r\n","import React, {Component, Fragment} from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from 'moment';\r\n\r\n\r\nclass ExperienceList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getYear = (date) => {\r\n        let nedDate = [];\r\n        //return new Date(date).getFullYear();\r\n        nedDate.push(new Date(date).getMonth());\r\n        nedDate.push(new Date(date).getFullYear());\r\n        return nedDate.join(\"/ \")\r\n    };\r\n\r\n    onEdit = (item) => this.props.onEdit('experience', item, true);\r\n    onDelete = (item) => this.props.onDelete('experience', item);\r\n\r\n    render() {\r\n        const items = this.props.items;\r\n\r\n        return (<Fragment>\r\n            <Row>\r\n                <Col xs>\r\n                    <ul className=\"list-group\">\r\n                        {items && items.map(item =>\r\n                            (<li key={`experience-${item.id}`} className=\"list-group-item d-flex align-items-center\">\r\n                                <h6 className=\"mb-0 col pl-0\">{item.title} <small>({`${moment(item.from).format('MM/YYYY')} to ${item.is_present === 1 ? 'Present' : moment(item.to).format('MM/YYYY')}`})</small></h6>\r\n                                <div className=\"d-flex\">\r\n                                    <button className=\"btn btn-sm btn-outline-info mr-1 trash-btn\" onClick={() => this.onDelete(item.id)}><i\r\n                                        className=\"far fa-trash-alt\"></i></button>\r\n                                    <button className=\"btn btn-outline-primary float-right btn-sm\" onClick={() => this.onEdit(item)}><i className=\"fas fa-pencil-alt\"></i></button>\r\n\r\n                                </div>\r\n                            </li>)\r\n                        )}\r\n                        {items && (items.length === 0) &&\r\n                            <div className=\"pl-2\">None</div>\r\n                        }\r\n                    </ul>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>);\r\n    }\r\n}\r\n\r\nconst experiencesSelector = createSelector(\r\n    state => state.experiences,\r\n    experiences => experiences\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    experiencesSelector,\r\n    (experiences) => ({\r\n        experiences\r\n    })\r\n);\r\n\r\n\r\nexport default connect(mapStateToProps)(ExperienceList);\r\n\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from 'moment';\r\n\r\nclass EducationList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getYear = (date) => {\r\n        let nedDate = [];\r\n        //return new Date(date).getFullYear();\r\n        nedDate.push(new Date(date).getMonth());\r\n        nedDate.push(new Date(date).getFullYear());\r\n        return nedDate.join(\"/ \")\r\n    };\r\n\r\n    onEdit = (item) => this.props.onEdit('education', item, true);\r\n    onDelete = (item) => this.props.onDelete('education', item);\r\n\r\n    render() {\r\n        const items = this.props.items;\r\n\r\n        return (<Fragment>\r\n            <Row>\r\n                <Col xs>\r\n                    <ul className=\"list-group\">\r\n                        {items && items.map(item =>\r\n                            (<li key={`education-${item.id}`} className=\"list-group-item d-flex align-items-center\">\r\n                                <h6 className=\"mb-0 col pl-0\">{item.title} <small>({`${moment(item.from).format('MM/YYYY')} to ${item.is_present === 1 ? 'Present' : moment(item.to).format('MM/YYYY')}`})</small></h6>\r\n                                <div className=\"d-flex\">\r\n                                    <button className=\"btn btn-sm btn-outline-info mr-1 trash-btn\" onClick={() => this.onDelete(item.id)}><i\r\n                                        className=\"far fa-trash-alt\"></i></button>\r\n                                    <button className=\"btn btn-outline-primary float-right btn-sm\" onClick={() => this.onEdit(item)}><i className=\"fas fa-pencil-alt\"></i></button>\r\n\r\n                                </div>\r\n                            </li>)\r\n                        )}\r\n                        {items && (items.length === 0) &&\r\n                            <div className=\"pl-2\">None</div>\r\n                        }\r\n                    </ul>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>);\r\n    }\r\n}\r\n\r\nconst educationsSelector = createSelector(\r\n    state => state.educations,\r\n    educations => educations\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    educationsSelector,\r\n    (educations) => ({\r\n        educations\r\n    })\r\n);\r\n\r\n\r\nexport default connect(mapStateToProps)(EducationList);\r\n\r\n\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport FormValidator from \"../../../../../helpers/FormValidator\";\r\nimport {userActions} from \"../../../../../common/redux/actions\";\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\r\n\r\nclass EducationForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                title: \"\",\r\n                institute: \"\",\r\n                from: (new Date()),\r\n                to: (new Date()),\r\n                description: \"\",\r\n                is_present: 0,\r\n            },\r\n            id: null,\r\n            minDate: \"\",\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(prop) {\r\n        if(prop.formField){\r\n            this.setState({formField: prop.formField, id:prop.formField.id})\r\n        } else {\r\n            this.setState({formField:  {\r\n                title: \"\",\r\n                institute: \"\",\r\n                from: (new Date()),\r\n                to: (new Date()),\r\n                description: \"\",\r\n                is_present: 0,\r\n            }, id: null})\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let today = new Date();\r\n        const date =  today.getFullYear()+'-'+ ((today.getMonth()+1) < 10 ? '0'+(today.getMonth()+1) : (today.getMonth()+1)) + '-' + (today.getDate() < 10 ? '0'+today.getDate() : today.getDate());\r\n        this.setState({minDate: date})\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            {field: 'title', method: 'isEmpty', validWhen: false, message: 'First name is required.'},\r\n            {field: 'institute', method: 'isEmpty', validWhen: false, message: 'Institute Name is required.'},\r\n            {field: 'from', method: 'isEmpty', validWhen: false, message: 'Duration From date is required.'},\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = {...this.state.formField};\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({formField});\r\n    };\r\n\r\n    handlePresentChange = (e) => {\r\n        let formField = {...this.state.formField};\r\n        formField[e.target.name] = (e.target.checked ? 1 : 0);\r\n        this.setState({formField});\r\n    };\r\n\r\n    handleFromDate = (dated) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['from'] = (new Date(dated));\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleToDate = (dated) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['to'] = (new Date(dated));\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {formField, id} = this.state;\r\n\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({validation, submitted: true});\r\n\r\n        //const decoratedOnClick = useAccordionToggle(eventKey, onClick);\r\n\r\n        if (validation.isValid) {\r\n            const {dispatch} = this.props;\r\n            dispatch(userActions.education(\"POST\", { userEducation: formField }, { item_id: id }));\r\n            this.setState({\r\n                formField: {\r\n                    title: \"\",\r\n                    institute: \"\",\r\n                    from: (new Date()),\r\n                    to: (new Date()),\r\n                    description: \"\",\r\n                    is_present: 0,\r\n                },\r\n                submitted: false,\r\n                validation: this.validator().valid(),\r\n                loading: false,\r\n            });\r\n            //dispatch(userActions.education());\r\n            setTimeout(() => {\r\n                this.props.hideToggle('education_toggle');\r\n            }, 800);\r\n        }\r\n    };\r\n\r\n    cancelForm = () => this.props.hideToggle('education_toggle');\r\n\r\n\r\n    render() {\r\n        const {formField, submitted, validation, id} = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        return (<Fragment>\r\n            <form name=\"education\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Title / Degree</label>\r\n                            <input type=\"text\" name=\"title\" placeholder=\"Degree\" onChange={this.handleChange}\r\n                                   value={formField.title} className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')}/>\r\n                            {submitted && isValid.title.isInvalid &&\r\n                            <div className=\"invalid-feedback\"> {isValid.title.message} </div>\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>School Name</label>\r\n                            <input type=\"text\" name=\"institute\" placeholder=\"School Name\" onChange={this.handleChange}\r\n                                   value={formField.institute}\r\n                                   className={'form-control ' + (submitted && isValid.institute.isInvalid ? 'is-invalid' : '')}/>\r\n                            {submitted && isValid.institute.isInvalid &&\r\n                            <div className=\"invalid-feedback\"> {isValid.institute.message} </div>\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {/*<Col xs={12} md={12}>*/}\r\n                        {/*<label>Duration</label>*/}\r\n                    {/*</Col>*/}\r\n                    <Col>\r\n                        <div className=\"form-group\">\r\n                            <label>Start Date</label>\r\n                            <div className=\"form-calender is-invalid\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-from3-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        placeholder=\"Start Date\"\r\n                                        value={formField.from}\r\n                                        onChange={this.handleFromDate}\r\n                                        maxDate={new Date()}\r\n                                        className={'form-control'}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                                {submitted && isValid.from.isInvalid &&\r\n                                <div className=\"invalid-feedback d-block\"> {isValid.from.message} </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"form-group\">\r\n                            <label>End Date</label>\r\n                            <div className=\"form-calender is-invalid\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-to3-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        placeholder=\"End Date\"\r\n                                        value={formField.to}\r\n                                        onChange={this.handleToDate}\r\n                                        maxDate={new Date()}\r\n                                        minDate={formField.from}\r\n                                        disabled={(formField.is_present === 1) ? true : false}\r\n                                        className={'form-control'}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                                <small className=\"form-text text-muted\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" name=\"is_present\" id=\"customCheckw1\" checked={formField.is_present === 1 ? true : false} onChange={this.handlePresentChange} />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"customCheckw1\">Present</label>\r\n                                    </div>\r\n                                </small>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                            <textarea className=\"form-control\" rows=\"3\" name=\"description\"\r\n                                      placeholder=\"About text here\"\r\n                                      value={formField.description}\r\n                                      onChange={this.handleChange}></textarea>\r\n                        </div>\r\n                        <div className=\"form-group button text-right px-0\" style={{boxShadow: 'none', backgroundImage: 'none'}}>\r\n                            <button type=\"button\" onClick={() => this.cancelForm()} className=\"btn btn-link btn-sm btn-cancel\"> Cancel Form </button>\r\n                            <button type=\"submit\" className={id ? 'btn btn-success' : 'btn btn-info ladda-btn'}>{ id ? 'Update Education' : 'Add Education' }</button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </form>\r\n        </Fragment>);\r\n    }\r\n}\r\n\r\nconst educationSelector = createSelector(\r\n    state => state.education,\r\n    education => education\r\n);\r\nconst educationsSelector = createSelector(\r\n    state => state.educations,\r\n    educations => educations\r\n);\r\n\r\n\r\nconst mapStateToProps = createSelector(\r\n    educationSelector,\r\n    educationsSelector,\r\n    (education, educations) => ({\r\n        education, educations\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(EducationForm);\r\n\r\n\r\n\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport FormValidator from \"../../../../../helpers/FormValidator\";\r\nimport { userActions } from \"../../../../../common/redux/actions\";\r\nimport LaddaButton from \"react-ladda\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\r\n\r\nclass ExperienceForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                title: \"\",\r\n                industry_name: \"\",\r\n                from: (new Date()),\r\n                to: (new Date()),\r\n                description: \"\",\r\n                is_present: 0,\r\n            },\r\n            id: null,\r\n            minDate: \"\",\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(prop) {\r\n        if (prop.formField) {\r\n            this.setState({ formField: prop.formField, id: prop.formField.id })\r\n        } else {\r\n            this.setState({\r\n                formField: {\r\n                    title: \"\",\r\n                    industry_name: \"\",\r\n                    from: (new Date()),\r\n                    to: (new Date()),\r\n                    description: \"\",\r\n                    is_present: 0,\r\n                }, id: null\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let today = new Date();\r\n        const date = today.getFullYear() + '-' + ((today.getMonth() + 1) < 10 ? '0' + (today.getMonth() + 1) : (today.getMonth() + 1)) + '-' + (today.getDate() < 10 ? '0' + today.getDate() : today.getDate());\r\n        this.setState({ minDate: date })\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            { field: 'title', method: 'isEmpty', validWhen: false, message: 'First name is required.' },\r\n            { field: 'industry_name', method: 'isEmpty', validWhen: false, message: 'Industry Name is required.' },\r\n            { field: 'from', method: 'isEmpty', validWhen: false, message: 'Duration From date is required.' },\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handlePresentChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = (e.target.checked ? 1 : 0);\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleFromDate = (dated) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['from'] = (new Date(dated));\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleToDate = (dated) => {\r\n        let formField = { ...this.state.formField };\r\n        formField['to'] = (new Date(dated));\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField, id } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true });\r\n\r\n        //const decoratedOnClick = useAccordionToggle(eventKey, onClick);\r\n\r\n        if (validation.isValid) {\r\n            const { dispatch } = this.props;\r\n            dispatch(userActions.experience(\"POST\", { userExperience: formField }, { item_id: id }));\r\n            this.setState({\r\n                formField: {\r\n                    title: \"\",\r\n                    industry_name: \"\",\r\n                    from: (new Date()),\r\n                    to: (new Date()),\r\n                    description: \"\",\r\n                    is_present: 0,\r\n                },\r\n                submitted: false,\r\n                validation: this.validator().valid(),\r\n                loading: false,\r\n            });\r\n            setTimeout(() => {\r\n                this.props.hideToggle('experience_toggle');\r\n            }, 800);\r\n        }\r\n    };\r\n\r\n    cancelForm = () => this.props.hideToggle('experience_toggle');\r\n\r\n\r\n    render() {\r\n        const { formField, submitted, validation, id } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n\r\n        return (<Fragment>\r\n            <form name=\"experience\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Title / Designation</label>\r\n                            <input type=\"text\" name=\"title\" placeholder=\"UI/UX Designer\"\r\n                                onChange={this.handleChange}\r\n                                value={formField.title} className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')} />\r\n                            {submitted && isValid.title.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.title.message} </div>\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Company</label>\r\n                            <input type=\"text\" name=\"industry_name\" placeholder=\"Company\"\r\n                                onChange={this.handleChange}\r\n                                value={formField.industry_name}\r\n                                className={'form-control ' + (submitted && isValid.industry_name.isInvalid ? 'is-invalid' : '')} />\r\n                            {submitted && isValid.industry_name.isInvalid &&\r\n                                <div className=\"invalid-feedback\"> {isValid.industry_name.message} </div>\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <Col>\r\n                        <div className=\"form-group\">\r\n                            <label>Start Date</label>\r\n                            <div className=\"form-calender is-invalid\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        autoOk\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-from-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        placeholder=\"Start Date\"\r\n                                        value={formField.from}\r\n                                        onChange={this.handleFromDate}\r\n                                        maxDate={new Date()}\r\n                                        className={'form-control'}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                                {submitted && isValid.from.isInvalid &&\r\n                                    <div className=\"invalid-feedback d-block\"> {isValid.from.message} </div>\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"form-group\">\r\n                            <label>End Date</label>\r\n                            <div className=\"form-calender is-invalid\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-to-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        placeholder=\"End Date\"\r\n                                        value={formField.to}\r\n                                        onChange={this.handleToDate}\r\n                                        maxDate={new Date()}\r\n                                        minDate={formField.from}\r\n                                        disabled={(formField.is_present === 1) ? true : false}\r\n                                        className={'form-control'}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                                <small className=\"form-text text-muted\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" name=\"is_present\" id=\"customCheck1\" checked={formField.is_present === 1 ? true : false} onChange={this.handlePresentChange} />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Present</label>\r\n                                    </div>\r\n                                </small>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                            <textarea className=\"form-control\" rows=\"3\" name=\"description\"\r\n                                placeholder=\"About text here\"\r\n                                value={formField.description}\r\n                                onChange={this.handleChange}></textarea>\r\n                        </div>\r\n                        <div className=\"form-group button text-right px-0\" style={{ boxShadow: 'none', backgroundImage: 'none' }}>\r\n                            <button type=\"button\" onClick={() => this.cancelForm()} className=\"btn btn-link btn-sm btn-cancel\"> Cancel Form </button>\r\n                            <LaddaButton className={id ? 'btn btn-success' : 'btn btn-info ladda-btn'}> {id ? 'Update Experience' : 'Add Experience'} </LaddaButton>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </form>\r\n        </Fragment>);\r\n    }\r\n}\r\n\r\n\r\nconst experiencesSelector = createSelector(\r\n    state => state.experiences,\r\n    experiences => experiences\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    experiencesSelector,\r\n    processSelector,\r\n    (experiences, process) => ({\r\n        experiences, process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ExperienceForm);\r\n\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Main } from '../../../layout';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { defaultActions, userActions } from '../../../../common/redux/actions';\r\nimport { NavBar } from './partials';\r\nimport { uploadSelectors } from \"../../../../common/redux/selectors\";\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport FileUploader from '../../common/FileUploader';\r\nimport LaddaButton, { EXPAND_RIGHT } from 'react-ladda';\r\nimport { defaultService } from '../../../../common/services';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\n\r\nclass ProfileUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                first_name: null,\r\n                last_name: null,\r\n                email: null,\r\n                title: null,\r\n                hometown: null,\r\n                country_code: null,\r\n                //is_co_founder: 0,\r\n                date_of_birth: null,\r\n                mobile: null,\r\n                about: null,\r\n                website: null,\r\n                timezone: null,\r\n                skills: null,\r\n                platforms: null\r\n            },\r\n            FieldModel: {\r\n                languages: null\r\n            },\r\n            submitted: false,\r\n            //validation: this.validator().valid(),\r\n            loading: false,\r\n            loadingProfile: false,\r\n            removeCoFounder: true,\r\n            languageList: null,\r\n            address: ''\r\n        };\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            autoForceUpdate: this,\r\n            className: 'invalid-feedback d-block',\r\n            messages: {\r\n                //password_repeat: 'Confirm Password is required.'\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    updatedState = () => {\r\n        const { dispatch, authentication, skills, countries, platforms, process } = this.props;\r\n        Object.getOwnPropertyNames(skills).length === 0 && dispatch(defaultActions.skills());\r\n        Object.getOwnPropertyNames(countries).length === 0 && dispatch(defaultActions.countries());\r\n        Object.getOwnPropertyNames(platforms).length === 0 && dispatch(defaultActions.platforms());\r\n        const { userProfile, email, media } = authentication.authentication.user;\r\n        const profileSkills = userProfile.skills.map(item => ({ value: item.id, label: item.title }));\r\n        const country_code = userProfile.countryCode ? { value: userProfile.countryCode.code, label: userProfile.countryCode.name } : null;\r\n        const languages = authentication.authentication.user.languages;\r\n\r\n        const lans = ( typeof languages === 'string' )  ? [ languages ] : languages;\r\n        const lang2 = ((lans === null) || (lans === undefined)) ? [\"English\"] : lans; //undefined\r\n        const profileLanguage = lang2.map((item, index) => ({ value: item, label: item }));\r\n\r\n        const userProfilePlatforms = {};\r\n        userProfile.userProfilePlatforms && userProfile.userProfilePlatforms.map(item => {\r\n            userProfilePlatforms[item.slug] = item.link;\r\n        });\r\n        this.setState({\r\n            formField: {\r\n                title: userProfile.title || \"\",\r\n                first_name: userProfile.first_name || \"\",\r\n                last_name: userProfile.last_name || \"\",\r\n                email: email,\r\n                hometown: userProfile.hometown || \"\",\r\n                country_code: country_code || null,\r\n                mobile: userProfile.mobile || \"\",\r\n                about: userProfile.about || \"\",\r\n                website: userProfile.website || \"\",\r\n                //is_co_founder: userProfile.is_co_founder,\r\n                strip_account_number: userProfile.strip_account_number || \"\",\r\n                timezone: userProfile.timezone || \"\",\r\n                skills: profileSkills || null,\r\n                platforms: userProfilePlatforms || null,\r\n                avatar_id: userProfile.avatar_id,\r\n                files: media && (media.image && media.image.map(file => file.id)\r\n                    .concat(media.video && media.video.map(file => file.id))\r\n                    .concat(media.docs && media.docs.map(file => file.id))),\r\n            },\r\n            FieldModel: {\r\n                languages: profileLanguage || null\r\n            },\r\n        });\r\n    };\r\n\r\n    componentWillMount() {\r\n        const { dispatch, authentication } = this.props;\r\n        this.updatedState();\r\n        const { media } = authentication.authentication.user;\r\n        dispatch(uploadSelectors.respond(media));\r\n        defaultService.coreField({field: 'languages'}).then((res) => {\r\n            this.setState({\r\n                languageList: res\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.updatedState();\r\n    }\r\n\r\n    addCoFounder = () => {\r\n        const {dispatch} = this.props;\r\n        dispatch(userActions.profile(\"POST\", {userProfile: {is_co_founder: 1}}, 'co-founder'));\r\n    }\r\n\r\n    removeCoFounder = () => {\r\n        this.setState({removeCoFounder: false})\r\n    }\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[name] = item;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    languagesSelect = (item, { action, name }) => {\r\n        this.setState({ FieldModel: { languages: item } });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleCheckboxChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = (e.target.checked ? 1 : 0);\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handlePlatform = (e) => {\r\n        let { formField } = this.state;\r\n        formField.platforms[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleChangeAddress = address => {\r\n        console.log(address);\r\n        this.setState({ address });\r\n    };\r\n\r\n    handleSelectAddress = address => {\r\n        geocodeByAddress(address)\r\n          .then(results => {\r\n              console.log(getLatLng(results[0]));\r\n          })\r\n          .then(latLng => {\r\n            console.log('Success', latLng)\r\n          })\r\n          .catch(error => console.error('Error', error));\r\n    };\r\n\r\n\r\n    handleUpload = (e) => {\r\n        const { dispatch } = this.props;\r\n        this.setState({loadingProfile: true});\r\n        defaultService.uploadWithoutProgress(e.target.files).then((res) => {\r\n            let fileId = res.files[0].id;\r\n            dispatch(userActions.profile(\"POST\", {userProfile: {avatar_id: fileId}}, 'avatar'));\r\n            this.setState({loadingProfile: false});\r\n        });\r\n    };\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { formField, FieldModel } = this.state;\r\n        //const validation = this.validator().validate(formField);\r\n        this.setState({ submitted: true, loading: true });\r\n        if( this.validator.allValid() ){\r\n            const { dispatch, upload, authentication } = this.props;\r\n            let { userProfile } = authentication.authentication.user;\r\n            //let identity = authentication.authentication.user.id;\r\n            let filesArr = upload.files ? upload.files : [];\r\n            let files = [];\r\n            filesArr && filesArr.docs && filesArr.docs.map(file => files.push(file.id));\r\n            filesArr && filesArr.image && filesArr.image.map(file => files.push(file.id));\r\n            filesArr && filesArr.video && filesArr.video.map(file => files.push(file.id));\r\n            //console.log('filesArr', files);\r\n            formField.files = files;\r\n            formField.avatar_id = userProfile.avatar_id;\r\n            formField.skills = formField.skills && formField.skills.map(item => item.value);\r\n            formField.country_code = formField.country_code ? formField.country_code.value : null;\r\n            FieldModel.languages = FieldModel.languages && FieldModel.languages.map(item => item.label);\r\n            dispatch(userActions.profile(\"POST\", { userProfile: formField, FieldModel }));\r\n            this.updatedState();\r\n        } else {\r\n            this.validator.showMessages();\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({loading: false});\r\n        }, 800);\r\n    };\r\n\r\n    render() {\r\n        const { skills, upload, countries, platforms, authentication, process } = this.props;\r\n        const { formField, FieldModel, languageList, loadingProfile, loading, removeCoFounder } = this.state;\r\n        let skillsList = skills.data ? skills.data : [];\r\n        let countriesList = countries.data ? countries.data : [];\r\n        let platformsList = platforms.data ? platforms.data : [];\r\n        let isValid = this.validator.fields;\r\n        const { userProfile } = authentication.authentication.user;\r\n        //console.log(this.validator, this.validator.helpers);\r\n        return (<Main>\r\n            <DocumentTitle title={`Update Profile`} />\r\n         \r\n            <div className=\"update-profile bg-body\">\r\n                <div className=\"container\">\r\n                    <form name=\"profile\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                        <Card className=\"mb-4 mb-lg-5\">\r\n\r\n   <p className=\"card-titles ml-2 mt-4\"> My Profile</p>\r\n\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col xs=\"12\" md=\"3\" xl=\"4\">\r\n                                        <NavBar instruction=\"profile\" />\r\n                                        {removeCoFounder &&<Fragment>\r\n                                            {((parseInt(userProfile.is_co_founder) === 0) || (userProfile.is_co_founder === null)) &&\r\n                                                <div className='custom-ui bg-white border coFounder mt-3'>\r\n                                                <h5>Are you interested in finding to co-founder for your business\r\n                                                idea? </h5>\r\n                                                <button type=\"button\" onClick={this.removeCoFounder} className=\"btn btn-info\" style={{\r\n                                                width: '50px',\r\n                                                padding: '7px'\r\n                                            }}>No\r\n                                                </button>\r\n                                                <button type=\"button\" className=\"btn btn-primary ml-2\"\r\n                                                style={{width: '50px', padding: '7px'}} onClick={this.addCoFounder}>Yes\r\n                                                </button>\r\n                                                </div>\r\n                                            }\r\n                                        </Fragment>}\r\n                                    </Col>\r\n                                    <Col xs=\"12\" md=\"9\" xl=\"8\">\r\n                                        <div className=\"py-3 w-100 float-left\">\r\n                                         \r\n                                               <span className=\"section-titles\">Update Profile</span>\r\n                                              \r\n                                               \r\n                                            <Row>\r\n                                                <Col className=\"card-profile border-0 mb-3 col-md-3 col-12 order-md-2 text-center\" style={{boxShadow: 'none'}}>\r\n                                                    <label><Link to={`/user/public/about/${userProfile && userProfile.user_id}`} className=\"float-right\">View Profile</Link></label>\r\n                                                    <figure className=\"d-flex align-items-center profile-upload justify-content-center\">\r\n                                                        <div className=\"pic rounded-circle\">\r\n                                                            <img className=\"img-fluid rounded-circle border\" alt=\"profile\" width=\"145\" height=\"145\" src={(userProfile && (userProfile.avatar !== null)) ? userProfile.avatar.thumb : '/images/dummy-profile.png'} />\r\n                                                            <label className=\"btn btn-upload text-white\">\r\n                                                                <i className=\"fas fa-camera-retro\"></i>\r\n                                                                <input type=\"file\" accept=\"image/*\" onChange={this.handleUpload} />\r\n                                                            </label>\r\n                                                            {loadingProfile && <div className=\"loader rounded-circle\"><span></span> <span></span></div>}\r\n                                                        </div>\r\n                                                    </figure>\r\n                                                </Col>\r\n                                                <Col className=\"col-md-9 col-12 order-md-1\">\r\n                                                    <div className=\"form-group d-none\">\r\n                                                        <Autocomplete\r\n                                                            className={'form-control'}\r\n                                                            onPlaceSelected={(place) => {\r\n                                                            console.log(place);\r\n                                                            }}\r\n                                                            types={['(regions)']}\r\n                                                            componentRestrictions={{country: \"ru\"}}\r\n                                                        />\r\n                                                        <PlacesAutocomplete\r\n                                                            value={this.state.address}\r\n                                                            onChange={this.handleChangeAddress}\r\n                                                            onSelect={this.handleSelectAddress}\r\n                                                            shouldFetchSuggestions={this.state.address.length > 2}\r\n                                                        >\r\n                                                            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                                            <div >\r\n                                                                <input\r\n                                                                {...getInputProps({\r\n                                                                    placeholder: 'Search Places ...',\r\n                                                                    className: 'location-search-input',\r\n                                                                })}\r\n                                                                className={'form-control'}\r\n                                                                />\r\n                                                                <div className=\"autocomplete-dropdown-container\">\r\n                                                                {loading && <div>Loading...</div>}\r\n                                                                {/* {console.log(\"suggestions\", suggestions)} */}\r\n                                                                {suggestions.map(suggestion => {\r\n                                                                    const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\r\n                                                                    // inline style for demonstration purpose\r\n                                                                    const style = suggestion.active ? { backgroundColor: '#fafafa', cursor: 'pointer' } : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                                                    return (\r\n                                                                    <div\r\n                                                                        {...getSuggestionItemProps(suggestion, {\r\n                                                                        className,\r\n                                                                        style,\r\n                                                                        })}\r\n                                                                    >\r\n                                                                        <span>{suggestion.description}</span>\r\n                                                                    </div>\r\n                                                                    );\r\n                                                                })}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </PlacesAutocomplete>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Title</span>\r\n                                                        <input type=\"text\" value={formField.title} name=\"title\"\r\n                                                            onChange={this.handleChange}\r\n                                                            onBlur={() => this.validator.showMessageFor('title')}\r\n                                                            className={'form-control ' + (this.validator.errorMessages.title !== null ? 'is-invalid' : '')} />\r\n                                                        {this.validator.message('title', formField.title, 'required')}\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Languages</span>\r\n                                                        <Select\r\n                                                            className=\"multiple-select mb-2\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isSearchable\r\n                                                            isMulti\r\n                                                            defaultValue={FieldModel.languages}\r\n                                                            name=\"languages\"\r\n                                                            onChange={this.languagesSelect}\r\n                                                            options={languageList && languageList.map(item => ({ value: item.option_code, label: item.option_value }))} />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">First Name</span>\r\n                                                        <input type=\"text\" value={formField.first_name} name=\"first_name\"\r\n                                                            onChange={this.handleChange}\r\n                                                            onBlur={() => this.validator.showMessageFor('first_name')}\r\n                                                            className={'form-control ' + (this.validator.errorMessages.first_name !== null ? 'is-invalid' : '')} />\r\n                                                        {this.validator.message('first_name', formField.first_name, 'required')}\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Last Name</span>\r\n                                                        <input type=\"text\" value={formField.last_name} name=\"last_name\"\r\n                                                            onChange={this.handleChange}\r\n                                                            onBlur={() => this.validator.showMessageFor('last_name')}\r\n                                                            className={'form-control ' + (this.validator.errorMessages.last_name !== null ? 'is-invalid' : '')} />\r\n                                                        {this.validator.message('last_name', formField.last_name, 'required')}\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Email Address</span>\r\n                                                        <input type=\"text\" className=\"form-control\" value={formField.email} name=\"email\" readOnly\r\n                                                            onChange={this.handleChange} />\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Address</span>\r\n                                                        <input type=\"text\" value={formField.hometown} name=\"hometown\"\r\n                                                            onChange={this.handleChange}\r\n                                                            onBlur={() => this.validator.showMessageFor('hometown')}\r\n                                                            className={'form-control ' + (this.validator.errorMessages.hometown !== null ? 'is-invalid' : '')} />\r\n                                                        {this.validator.message('hometown', formField.hometown, 'required')}\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                      <span className=\"form-label\">Select Country </span>\r\n                                                        {countriesList && <Select\r\n                                                            className={'multiple-select mb-2 ' + (this.validator.errorMessages.country_code !== null ? 'is-invalid' : '')}\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isSearchable\r\n                                                            defaultValue={formField.country_code}\r\n                                                            name=\"country_code\"\r\n                                                            onChange={this.handleSelect}\r\n                                                            options={countriesList.map(item => ({ value: item.code, label: item.name }))} />}\r\n                                                        {this.validator.message('country_code', formField.country_code, 'required')}\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    {/*<div className=\"form-group\">*/}\r\n                                                        {/*<div className=\"custom-control custom-checkbox mt-4 pt-2\">*/}\r\n                                                            {/*<input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\"*/}\r\n                                                                {/*name=\"is_co_founder\"*/}\r\n                                                                {/*value={''}*/}\r\n                                                                {/*defaultChecked={(formField.is_co_founder === 1)}*/}\r\n                                                                {/*onChange={this.handleCheckboxChange} />*/}\r\n                                                            {/*<label className=\"custom-control-label\" htmlFor=\"customCheck1\">Co-founder</label>*/}\r\n                                                        {/*</div>*/}\r\n                                                    {/*</div>*/}\r\n                                                    {/* <div className=\"form-group\">\r\n                                                        <label>Phone Number</label>\r\n                                                        <div className=\"input-group\">\r\n                                                            <div className=\"input-group-prepend\">\r\n                                                                <span className=\"input-group-text\" id=\"basic-addon1\">@</span>\r\n                                                                {countriesList && <Select\r\n                                                                    className={'multiple-select mb-0 country-code '}\r\n                                                                    classNamePrefix=\"multi\"\r\n                                                                    isSearchable\r\n                                                                    placeholder=\"Code\"\r\n                                                                    onChange={this.handleSelect}\r\n                                                                    options={countriesList.map(item => ({ value: item.code, label: `${item.phone_code} (${item.code})` }))} />}\r\n                                                            </div>\r\n                                                            <input type=\"text\" className=\"form-control\"\r\n                                                                   placeholder=\"Phone Number\" />\r\n                                                        </div>\r\n                                                    </div> */}\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Phone Number </span>\r\n                                                        <input type=\"text\"\r\n                                                               className={'form-control ' + (this.validator.errorMessages.mobile !== null ? 'is-invalid' : '')}\r\n                                                               value={formField.mobile}\r\n                                                               name=\"mobile\"\r\n                                                               onBlur={() => this.validator.showMessageFor('mobile')}\r\n                                                               onChange={this.handleChange} />\r\n                                                        {this.validator.message('mobile', formField.mobile, 'phone')}\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">About Me </span>\r\n                                                        <textarea className=\"form-control\" rows=\"3\" value={formField.about} name=\"about\"\r\n                                                                  onChange={this.handleChange}></textarea>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Website </span>\r\n                                                        <input type=\"text\" className={'form-control ' + (this.validator.errorMessages.website !== null ? 'is-invalid' : '')} value={formField.website} name=\"website\"\r\n                                                               onChange={this.handleChange} />\r\n                                                        {this.validator.message('website', formField.website, 'url')}\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12}>\r\n                                                <hr/>\r\n                                                <span className=\"section-titles\">Skills</span>\r\n                                               \r\n                                                    <div className=\"form-group\">\r\n                                                        {/* <label>Skills</label> */}\r\n                                                        {(formField.skills || !formField.skills) &&\r\n                                                            <Select\r\n                                                                className={'multiple-select mb-2 ' + (this.validator.errorMessages.skills !== null ? 'is-invalid' : '')}\r\n                                                                classNamePrefix=\"multi\"\r\n                                                                isSearchable isMulti\r\n                                                                defaultValue={formField.skills}\r\n                                                                name=\"skills\"\r\n                                                                onChange={this.handleSelect}\r\n                                                                options={skillsList.map(item => ({ value: item.id, label: item.name }))} />}\r\n                                                        {this.validator.message('skills', formField.skills, 'required')}\r\n                                                    </div>\r\n\r\n                                                    <hr/>\r\n                                                    <span className=\"section-titles\">Social Media Accounts</span>\r\n                                                  \r\n                                                    <h6>Please provide your social media links for our internal verification.</h6>\r\n                                                    <div className=\"row\">\r\n                                                        {platformsList && <Fragment>\r\n                                                            {platformsList.map((platform, index) =>\r\n                                                                <div className=\"col-md-6 col-12\" key={`platform-${platform.slug}`}>\r\n                                                                    <div className=\"form-group\">\r\n                                                                        <div className=\"border-bottom\">\r\n                                                                        <span className=\"form-label\">{platform.title}</span>\r\n                                                                            <input type=\"text\"\r\n                                                                                className=\"form-control\"\r\n                                                                                name={platform.slug}\r\n                                                                                placeholder=\"Link ...\"\r\n                                                                                onChange={this.handlePlatform}\r\n                                                                                value={(formField.platforms[platform.slug] ? formField.platforms[platform.slug] : \"\")} />\r\n                                                                            {this.validator.message(platform.slug, formField.platforms[platform.slug], 'url')}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>)}\r\n                                                        </Fragment>}\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <span className=\"section-titles\">Additional Document</span>\r\n                                                 \r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <FileUploader upload={upload} coverImage={formField.cover_id} accept={'.xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf, video/*'} />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                               \r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"button bg-white\">\r\n                            <div className=\" d-flex align-items-center\">\r\n                                <div className=\"col pl-0\">Update all your latest changes by clicking on “Save Changes ”</div>\r\n                                <LaddaButton className=\"btn ladda-btn\" loading={loading} data-style={EXPAND_RIGHT}>Save Changes</LaddaButton>\r\n                            </div>\r\n                        </Card>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst countriesSelector = createSelector(\r\n    state => state.countries,\r\n    countries => countries\r\n);\r\n\r\nconst skillsSelector = createSelector(\r\n    state => state.skills,\r\n    skills => skills\r\n);\r\n\r\nconst platformsSelector = createSelector(\r\n    state => state.platforms,\r\n    platforms => platforms\r\n);\r\n\r\n\r\nconst uploadSelector = createSelector(\r\n    state => state.upload,\r\n    upload => upload\r\n);\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    skillsSelector,\r\n    authenticationSelector,\r\n    uploadSelector,\r\n    countriesSelector,\r\n    platformsSelector,\r\n    (process, skills, authentication, upload, countries, platforms) => ({\r\n        process, skills, authentication, upload, countries, platforms\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ProfileUpdate);\r\n","import React, {Component} from 'react';\r\nimport {Main} from '../../../layout';\r\nimport {Card, Row, Col, Accordion } from 'react-bootstrap';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavBar, ExperienceForm, ExperienceList, EducationForm, EducationList} from './partials';\r\nimport {userActions} from \"../../../../common/redux/actions\";\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { globalService as gs } from '../../../../common/services';\r\n\r\n\r\nclass ExperienceAndEducation extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemType: null,\r\n            editItem: null,\r\n            experienceItem: null,\r\n            educationItem: null,\r\n            showDeleteConfirmation: false,\r\n            deleteConfirmationProps: null,\r\n            toggleExperience: false,\r\n            toggleEducation: false,\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const {dispatch, experiences, educations} = this.props;\r\n        let userId = gs.parseItem('authentication');\r\n        Object.getOwnPropertyNames(experiences).length === 0 && dispatch(userActions.experience(\"GET\", null, {user_id: userId.user.id}));\r\n        Object.getOwnPropertyNames(educations).length === 0 && dispatch(userActions.education(\"GET\", null, {user_id: userId.user.id}));\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onSelectItem = (type, item, toggle) => {\r\n        if(type === 'experience') {\r\n            this.setState({itemType: type, experienceItem: item});\r\n            this.setState({ toggleExperience: toggle });\r\n        } else {\r\n            this.setState({itemType: type, educationItem: item});\r\n            this.setState({ toggleEducation: toggle });\r\n        }\r\n    };\r\n\r\n    onDeleteItem = (type, itemId) => {\r\n        const {dispatch} = this.props;\r\n        if (itemId !== '' || itemId !== null) {\r\n            type === 'experience' ?\r\n                dispatch(userActions.experience('DELETE', {},  {item_id: itemId})) :\r\n                dispatch(userActions.education('DELETE', {}, {item_id: itemId}));\r\n            type === 'experience' ?\r\n                dispatch(userActions.experience()) :\r\n                dispatch(userActions.education());\r\n        }\r\n    };\r\n\r\n    onSubmitData = (type) => {\r\n        type === 'experience_toggle' ? this.setState({ toggleExperience: false }) : this.setState({ toggleEducation: false })\r\n        //this.setState({ toggleExperience: type });\r\n    };\r\n\r\n    addNew = (type) => {\r\n        if(type === 'experience') {\r\n            this.setState({ toggleExperience: true, experienceItem:null});\r\n        } else {\r\n            this.setState({ toggleEducation: true, educationItem:null});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {experiences, educations} = this.props;\r\n        const experienceItems = experiences.data ? experiences.data : [];\r\n        const educationsItems = educations.data ? educations.data : [];\r\n        const {experienceItem, educationItem } = this.state;\r\n\r\n        return (<Main>\r\n            <DocumentTitle title={`Experience and Education`}/>\r\n            <div className=\"update-profile bg-body\">\r\n                <div className=\"container\">\r\n                    <Card className=\"mb-4 mb-lg-5\">\r\n                    <p className=\"card-titles ml-2 mt-4\"> My Profile</p>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"3\" xl=\"4\">\r\n                                    <NavBar instruction=\"experience\" />\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\" xl=\"8\">\r\n                                    <div className=\"py-3 w-100 float-left mb-3\">\r\n                                       <div className=\"row h-5\">\r\n                                        <span className=\"col-10 section-titles\">Experience</span>\r\n                                            <button onClick={this.addNew.bind(this, 'experience')} className=\"col-1.5 btn float-right btn-sm add-new-btn\">Add New</button>\r\n                                            </div>\r\n                                        <Accordion.Collapse in={this.state.toggleExperience} className=\"w-100\">\r\n                                            <ExperienceForm formField={experienceItem} hideToggle={this.onSubmitData}/>\r\n                                        </Accordion.Collapse>\r\n\r\n                                        {experienceItems &&\r\n                                        <ExperienceList items={experienceItems.items} onEdit={this.onSelectItem} onDelete={this.onDeleteItem}/>}\r\n                                    </div>\r\n\r\n                                    <div className=\"py-3 w-100 float-left\">\r\n                                    <div className=\"row h-5\">\r\n                                        <span className=\"col-10 section-titles\">Education</span>\r\n                                            <button onClick={this.addNew.bind(this, 'education')} className=\"col-1.5 btn float-right btn-sm add-new-btn\">Add New</button>\r\n                                            </div>\r\n\r\n                                        <Accordion.Collapse in={this.state.toggleEducation} className=\"w-100\">\r\n                                            <EducationForm formField={educationItem} hideToggle={this.onSubmitData} />\r\n                                        </Accordion.Collapse>\r\n                                        {educationsItems &&\r\n                                        <EducationList items={educationsItems.items} onEdit={this.onSelectItem} onDelete={this.onDeleteItem}/>}\r\n                                    </div>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst experiencesSelector = createSelector(\r\n    state => state.experiences,\r\n    experiences => experiences\r\n);\r\n\r\nconst educationsSelector = createSelector(\r\n    state => state.educations,\r\n    educations => educations\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    experiencesSelector,\r\n    educationsSelector,\r\n    (experiences, educations) => ({\r\n        experiences, educations\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ExperienceAndEducation);\r\n","import React, {Component} from 'react';\r\nimport {Main} from '../../../layout';\r\nimport {Card, Row, Col, Form} from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavBar} from './partials';\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\nimport {defaultActions, userActions} from '../../../../common/redux/actions';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport LaddaButton, {EXPAND_RIGHT} from 'react-ladda';\r\nimport { commonHelper as cf } from '../../../../helpers/common.helper';\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport {alertSelectors} from \"../../../../common/redux/selectors\";\r\n\r\nconst timeCommitment = [\r\n    {id: 1, value: '5 hours/week'},\r\n    {id: 2, value: '10 hours/week'},\r\n    {id: 3, value: '15 hours/week'},\r\n    {id: 4, value: '20 hours/week'},\r\n    {id: 5, value: '25 hours/week'},\r\n    {id: 6, value: '30 hours/week'},\r\n    {id: 7, value: '35 hours/week'},\r\n    {id: 8, value: '40 hours/week'},\r\n    {id: 9, value: '50 hours/week'},\r\n    {id: 10, value: '60 hours/week'},\r\n];\r\n\r\nclass CoFounder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                exp_title: \"\",\r\n                exp_description: \"\",\r\n                exp_years_experience: \"\",\r\n                exp_working_hour: \"\",\r\n                exp_startup_experience: \"\",\r\n                exp_status: \"\",\r\n                ideal_title: \"\",\r\n                skills: null,\r\n                ideal_description: \"\",\r\n                ideal_locations: null,\r\n                ideal_years_experience: \"\",\r\n                ideal_working_hour: \"\",\r\n                ideal_startup_experience: \"\",\r\n            },\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        const { dispatch, skills, countries, authentication} = this.props;\r\n        Object.getOwnPropertyNames(skills).length === 0 && dispatch(defaultActions.skills());\r\n        Object.getOwnPropertyNames(countries).length === 0 && dispatch(defaultActions.countries());\r\n        const { userCoFounderExperience, userCoFounderIdeal } = authentication.authentication.user;\r\n        const coFounderSkills = userCoFounderIdeal && userCoFounderIdeal.skills.map(item => ({value: item.id, label: item.title}));\r\n        const coFounderCountries = userCoFounderIdeal && userCoFounderIdeal.countries.map(item => ({value: item.id, label: item.name}));\r\n\r\n        (userCoFounderExperience && userCoFounderIdeal) && this.setState({\r\n            formField: {\r\n                exp_title: userCoFounderExperience.title || '',\r\n                exp_description: userCoFounderExperience.description || '',\r\n                exp_years_experience: userCoFounderExperience.years_experience || '',\r\n                exp_working_hour: userCoFounderExperience.working_hour || '',\r\n                exp_startup_experience: userCoFounderExperience.startup_experience || '',\r\n                exp_status: userCoFounderExperience.status || '',\r\n                ideal_title: userCoFounderIdeal.title || '',\r\n                skills: coFounderSkills,\r\n                ideal_locations: coFounderCountries,\r\n                ideal_description: userCoFounderIdeal.description || '',\r\n                ideal_years_experience: userCoFounderIdeal.years_experience || '',\r\n                ideal_working_hour: userCoFounderIdeal.working_hour || '',\r\n                ideal_startup_experience: userCoFounderIdeal.startup_experience || '',\r\n            },\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            {field: 'exp_title', method: 'isEmpty', validWhen: false, message: 'Relevant Industry is required.'},\r\n            {field: 'ideal_title', method: 'isEmpty', validWhen: false, message: 'Relevant Industry is required.'},\r\n        ]);\r\n    };\r\n\r\n    handleSelect = (item, {action, name}) => {\r\n        let formField = {...this.state.formField};\r\n        formField[name] = item;\r\n        this.setState({formField});\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = {...this.state.formField};\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({formField});\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {formField} = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({validation, submitted: true, loading: true});\r\n        let coFounderField = {};\r\n\r\n        if (validation.isValid) {\r\n            const {dispatch} = this.props;\r\n            coFounderField.userCoFounderExperience = {\r\n                title: formField.exp_title,\r\n                description: formField.exp_description,\r\n                years_experience: formField.exp_years_experience,\r\n                working_hour: formField.exp_working_hour,\r\n                startup_experience: formField.exp_startup_experience,\r\n                status: formField.exp_status,\r\n            };\r\n            coFounderField.userCoFounderIdeal = {\r\n                title: formField.ideal_title,\r\n                description: formField.ideal_description,\r\n                years_experience: formField.ideal_years_experience,\r\n                working_hour: formField.ideal_working_hour,\r\n                startup_experience: formField.ideal_startup_experience,\r\n                skills: formField.skills && formField.skills.map(item => item.value),\r\n                locations: formField.ideal_locations && formField.ideal_locations.map(item => item.value),\r\n            };\r\n            dispatch(userActions.profile(\"POST\", { userProfile: coFounderField }, 'co-founder'));\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({loading: false});\r\n        }, 800);\r\n    };\r\n\r\n    coFounderDeactivate = () => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            //title: `Confirm Request`,\r\n            message: 'Are you sure you want to deactivate the co-founder?',\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    //onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n                        dispatch(userActions.profile(\"POST\", { userProfile: {is_co_founder: 0} }, 'co-founder'))\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {skills, countries, authentication } = this.props;\r\n        const {formField, submitted, validation} = this.state;\r\n        let skillsList = skills.data ? skills.data : [];\r\n        let countriesList = countries.data ? countries.data : [];\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        const { userProfile } = authentication.authentication.user;\r\n\r\n        return (<Main>\r\n            <DocumentTitle title={`Co-Founder`}/>\r\n            <div className=\"update-profile bg-body\">\r\n                <div className=\"container\">\r\n                    <form name=\"co-founder\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                        <Card className=\"mb-4 mb-lg-5\">\r\n                        <p className=\"card-titles ml-2 mt-4\"> My Profile</p>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col xs=\"12\" md=\"3\" xl=\"4\">\r\n                                        <NavBar instruction=\"co-founder\" />\r\n                                    </Col>\r\n                                    \r\n                                    <Col xs=\"12\" md=\"9\" xl=\"8\">\r\n                                        <div className=\"py-3 w-100 float-left\">\r\n                                        <span className=\"section-titles\">Co-founder Experience</span>\r\n                                            <Row>\r\n                                                <Col xs={12}>\r\n                                                    <div className=\"form-group\">\r\n                                                        <textarea className=\"form-control\" rows=\"4\" name=\"exp_description\"\r\n                                                                  onChange={this.handleChange} value={formField.exp_description}\r\n                                                                  placeholder=\"About here\"></textarea>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                \r\n                                                <Col xs={12}>\r\n                                                <hr/>\r\n                                                <span className=\"section-titles\">Additional Information</span>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Years Of Experience</span>\r\n                                                        <select className=\"form-control\" name=\"exp_years_experience\"\r\n                                                                onChange={this.handleChange} value={formField.exp_years_experience}>\r\n                                                            <option>Select</option>\r\n                                                            {cf.range(1, 50).map(item => {\r\n                                                                return (<option value={item} key={item}>{item}</option>)\r\n                                                            })}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Relevant Industry</span>\r\n                                                        <Form.Control type=\"text\"\r\n                                                                      placeholder=\"Co-founder join my startup\"\r\n                                                                      name=\"exp_title\"\r\n                                                                      value={formField.exp_title}\r\n                                                                      onChange={this.handleChange}\r\n                                                                      className={'form-control ' + (submitted && isValid.exp_title.isInvalid ? 'is-invalid' : '')}/>\r\n                                                        {submitted && isValid.exp_title.isInvalid &&\r\n                                                        <div className=\"invalid-feedback\"> {isValid.exp_title.message} </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Time Commitment</span>\r\n                                                        <select className=\"form-control\" name=\"exp_working_hour\"\r\n                                                                value={formField.exp_working_hour}\r\n                                                                onChange={this.handleChange}>\r\n                                                            {/*<option>10 hrs per week</option>*/}\r\n                                                            {timeCommitment.map(item => {\r\n                                                                return (<option value={item.id} key={`time1-${item.id}`}>{item.value}</option>)\r\n                                                            })}\r\n                                                        </select>\r\n\r\n\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Previous Startup Experience</span>\r\n                                                        <div className=\"w-100\">\r\n                                                            <Form.Check custom inline label=\"Yes\" type=\"radio\"\r\n                                                                        name=\"exp_startup_experience\"\r\n                                                                        defaultChecked={(formField.exp_startup_experience === 1)}\r\n                                                                        id=\"custom-inline-1\" value={1}\r\n                                                                        onChange={this.handleChange}/>\r\n                                                            <Form.Check custom inline label=\"No\" type=\"radio\"\r\n                                                                        name=\"exp_startup_experience\"\r\n                                                                        defaultChecked={(formField.exp_startup_experience === 0)}\r\n                                                                        id=\"custom-inline-2\" value={0}\r\n                                                                        onChange={this.handleChange}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Business Stage</span>\r\n                                                        <div className=\"w-100 mt-2\">\r\n                                                            <Form.Check custom inline label=\"Concept\" type=\"radio\"\r\n                                                                        name=\"exp_status\"\r\n                                                                        value={1}\r\n                                                                        defaultChecked={(formField.exp_status === 1)}\r\n                                                                        id=\"business_1\"\r\n                                                                        onChange={this.handleChange}/>\r\n                                                            <Form.Check custom inline label=\"Design\" type=\"radio\"\r\n                                                            \r\n                                                                        name=\"exp_status\"\r\n                                                                        value={2}\r\n                                                                        defaultChecked={(formField.exp_status === 2)}\r\n                                                                        id=\"business_2\" onChange={this.handleChange}/>\r\n                                                            <Form.Check custom inline label=\"Development\" type=\"radio\"\r\n                                                                        name=\"exp_status\"\r\n                                                                        value={3}\r\n                                                                        defaultChecked={(formField.exp_status === 3)}\r\n                                                                        id=\"business_3\" onChange={this.handleChange}/>\r\n                                                            <Form.Check custom inline label=\"Launch\" type=\"radio\"\r\n                                                                        name=\"exp_status\"\r\n                                                                        value={4}\r\n                                                                        defaultChecked={(formField.exp_status === 4)}\r\n                                                                        id=\"business_4\" onChange={this.handleChange}/>\r\n                                                            <Form.Check custom inline label=\"Growth\" type=\"radio\"\r\n                                                                        name=\"exp_status\"\r\n                                                                        value={5}\r\n                                                                        defaultChecked={(formField.exp_status === 5)}\r\n                                                                        id=\"business_5\" onChange={this.handleChange}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <hr/>\r\n                                            <Row>\r\n                                                <Col xs={12}>\r\n                                                <span className=\"section-titles\">My Ideal Co-founder</span>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">What I am looking for</span>\r\n                                                        <textarea className=\"form-control\" rows=\"4\"\r\n                                                                  value={formField.ideal_description}\r\n                                                                  name=\"ideal_description\"\r\n                                                                  onChange={this.handleChange}\r\n                                                                  placeholder=\"About here\"></textarea>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <hr/>\r\n                                            <Row>\r\n                                                <Col xs={12}>\r\n                                                <span className=\"section-titles\">Skill</span>\r\n                                                    <div className=\"form-group\">\r\n                                                        <Select\r\n                                                            className=\"multiple-select mb-2\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isSearchable isMulti\r\n                                                            defaultValue={formField.skills}\r\n                                                            name=\"skills\"\r\n                                                            onChange={this.handleSelect}\r\n                                                            options={skillsList.map(item => ({value: item.id, label: item.name}))}/>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <hr/>\r\n                                            <Row>\r\n                                                <Col xs={12}>\r\n                                                <span className=\"section-titles\">My Wishlist</span>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Years of Experience</span>\r\n                                                        <select className=\"form-control\" name=\"ideal_years_experience\"\r\n                                                                value={formField.ideal_years_experience}\r\n                                                                onChange={this.handleChange}>\r\n                                                            <option>Select</option>\r\n                                                            {cf.range(1, 50).map(item => {\r\n                                                                return (<option value={item} key={item}>{item}</option>)\r\n                                                            })}\r\n                                                        </select>\r\n\r\n\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Preferred Location</span>\r\n                                                        <Select\r\n                                                            className=\"multiple-select mt-2\"\r\n                                                            classNamePrefix=\"multi\"\r\n                                                            isSearchable isMulti\r\n                                                            defaultValue={formField.ideal_locations}\r\n                                                            name=\"ideal_locations\"\r\n                                                            onChange={this.handleSelect}\r\n                                                            options={countriesList.map(item => ({value: item.id, label: item.name}))}/>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Time Commitment</span>\r\n                                                        <select className=\"form-control\"\r\n                                                                name=\"ideal_working_hour\"\r\n                                                                value={formField.ideal_working_hour}\r\n                                                                onChange={this.handleChange}>\r\n                                                            <option>Select</option>\r\n                                                            {timeCommitment.map(item => {\r\n                                                                return (<option value={item.id} key={`time1-${item.id}`}>{item.value}</option>)\r\n                                                            })}\r\n                                                        </select>\r\n\r\n\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Previous Startup experience</span>\r\n                                                        <div className=\"w-100 mt-2\">\r\n                                                            <Form.Check custom inline label=\"Yes\" type=\"radio\"\r\n                                                                        name=\"ideal_startup_experience\"\r\n                                                                        defaultChecked={(formField.ideal_startup_experience === 1)}\r\n                                                                        id=\"custom-experience-1\" value={1} onChange={this.handleChange}/>\r\n                                                            <Form.Check custom inline label=\"No\" type=\"radio\" name=\"ideal_startup_experience\"\r\n                                                                        id=\"custom-experience-2\" value={0}\r\n                                                                        defaultChecked={(formField.ideal_startup_experience === 0)}\r\n                                                                        onChange={this.handleChange}/>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={12} md={6}>\r\n                                                    <div className=\"form-group\">\r\n                                                    <span className=\"form-label\">Relevant Industry</span>\r\n                                                        <input type=\"text\"\r\n                                                               name=\"ideal_title\"\r\n                                                               placeholder=\"Enter\"\r\n                                                               onChange={this.handleChange}\r\n                                                               value={formField.ideal_title}\r\n                                                               className={'form-control ' + (submitted && isValid.ideal_title.isInvalid ? 'is-invalid' : '')}/>\r\n                                                        {submitted && isValid.ideal_title.isInvalid &&\r\n                                                        <div className=\"invalid-feedback\"> {isValid.ideal_title.message} </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"button bg-white\">\r\n                            <div className=\" d-flex align-items-center\">\r\n                                <div className=\"col pl-0\">Update all your latest changes by clicking on “Save Changes”</div>\r\n                                <div className=\"row center-align\">\r\n                                {(parseInt(userProfile.is_co_founder) === 1) && <button type=\"button\" className=\"btn btn-outline-primary mr-4\" onClick={this.coFounderDeactivate}>Deactivate Co-Founder</button>}\r\n                                <LaddaButton className=\"btn ladda-btn\" loading={this.state.loading} data-style={EXPAND_RIGHT}>Save Changes</LaddaButton>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\n\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\n\r\nconst countriesSelector = createSelector(\r\n    state => state.countries,\r\n    countries => countries\r\n);\r\n\r\nconst skillsSelector = createSelector(\r\n    state => state.skills,\r\n    skills => skills\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector,\r\n    processSelector,\r\n    skillsSelector,\r\n    countriesSelector,\r\n    (authentication, process, skills, countries) => ({\r\n        authentication, process, skills, countries\r\n    })\r\n);\r\n\r\n\r\nexport default connect(mapStateToProps)(CoFounder);\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../../layout';\r\n\r\nclass Membership extends Component {\r\n    render() {\r\n        return (<Main>\r\n            <div className=\"subscribe-page\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"text-center explore\"><span>Pricing Plans</span></h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-sm-6 col-12\">\r\n                            <div className=\"card plan-box\">\r\n                                <div className=\"card-body px-0\">\r\n                                    {/* <div className=\"icon d-flex justify-content-center\">\r\n                                        <div className=\"round d-flex justify-content-center align-items-center\"><i className=\"far fa-dot-circle\"></i></div>\r\n                                    </div> */}\r\n                                    <div className=\"caption\">\r\n                                        <h3 className=\"card-title\">Basic <br /><small>1 Month Plan</small></h3>\r\n                                        <h3 className=\"price\">$19.99 / <small>Month</small></h3>\r\n                                        <div className=\"text px-3\">\r\n                                            <p>$19.99 billed monthly, cancel anytime <br /> <span className=\"text-info font-weight-bold\">&nbsp;</span></p>\r\n                                            <p>Unlimited access to service exchange &amp; find co-founders</p>\r\n                                        </div>\r\n                                        <div className=\"button px-3\">\r\n                                            <button className=\"btn btn-block btn-info\">Purchase now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-sm-6 col-12\">\r\n                            <div className=\"card plan-box active\">\r\n                                <div className=\"card-body px-0\">\r\n                                    {/* <div className=\"icon d-flex justify-content-center\">\r\n                                        <div className=\"round d-flex justify-content-center align-items-center\"><i className=\"far fa-dot-circle\"></i></div>\r\n                                    </div> */}\r\n                                    <div className=\"caption\">\r\n                                        <h3 className=\"card-title\">Standard <br /> <small>6 Months Plan</small></h3>\r\n                                        <h3 className=\"price\">$14.99 / <small>Month</small></h3>\r\n                                        <div className=\"text px-3\">\r\n                                            <p>$89.94 billed semi-annually, cancel anytime <br /> <span className=\"text-info font-weight-bold\">Save $30</span></p>\r\n                                            <p>Unlimited access to service exchange &amp; find co-founders</p>\r\n                                        </div>\r\n                                        <div className=\"button px-3\">\r\n                                            <button className=\"btn btn-block btn-info\">Purchase now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-sm-6 col-12\">\r\n                            <div className=\"card plan-box\">\r\n                                <div className=\"card-body px-0\">\r\n                                    {/* <div className=\"icon d-flex justify-content-center\">\r\n                                        <div className=\"round d-flex justify-content-center align-items-center\"><i className=\"far fa-dot-circle\"></i></div>\r\n                                    </div> */}\r\n                                    <div className=\"caption\">\r\n                                        <h3 className=\"card-title\">Premium <br /> <small>12 Months Plan</small></h3>\r\n                                        <h3 className=\"price\">$8.99 / <small>Month</small></h3>\r\n                                        <div className=\"text px-3\">\r\n                                            <p>$107.88 billed annually, cancel anytime<br /> <span className=\"text-info font-weight-bold\">Save $132</span></p>\r\n                                            <p>Unlimited access to service exchange &amp; find co-founders</p>\r\n                                        </div>\r\n                                        <div className=\"button px-3\">\r\n                                            <button className=\"btn btn-block btn-info\">Purchase now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <p className=\"text-center memText\">We are waiving our membership plan for our first 1,000 users for the first 6 months as a token of our appreciation. Enjoy your unlimited access to all of our features. Thank you for being a valuable member of our trusted community.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default Membership;","import React, { Component } from 'react';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\nimport LaddaButton, {EXPAND_RIGHT} from 'react-ladda';\r\nimport { Main } from '../../../layout';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\nimport { itemService, globalService as gs } from '../../../../common/services';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\n\r\nclass Support extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                subject: '',\r\n                comment: '',\r\n            },\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n        this.initializeState = this.state;\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            {field: 'subject', method: 'isEmpty', validWhen: false, message: 'Subject is required.'},\r\n            {field: 'comment', method: 'isEmpty', validWhen: false, message: 'Comment is required.'},\r\n        ]);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = {...this.state.formField};\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({formField});\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validation = this.validator().validate(this.state.formField);\r\n        this.setState({validation, submitted: true});\r\n\r\n        if (validation.isValid) {\r\n            const { formField } = this.state;\r\n            const { dispatch } = this.props;\r\n            const formValue = {\r\n                userSupport:{ \r\n                    text: formField.comment,\r\n                    info: {\r\n                        subject: formField.subject,\r\n                        status: 'Open'\r\n                    },\r\n                }\r\n             };\r\n            itemService.support(\"POST\", formValue).then((data) => {\r\n                this.setState(this.initializeState);\r\n                dispatch(alertSelectors.success('Thank you for contacting us. We will respond to you as soon as possible.'));\r\n            }).catch(exception => {\r\n                gs.showErrors(dispatch, exception, alertSelectors);\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const {formField, submitted, validation} = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        const { process } = this.props;\r\n        \r\n        return (<Main>\r\n            <DocumentTitle title={`Profile Details`}/>\r\n\r\n            <div className=\"update-profile supportPage bg-body\" style={{minHeight: 'calc(100vh - 342px)'}}>\r\n                <div className=\"container\">\r\n                    <Card className=\"mb-4 mb-lg-5\">\r\n                        <Card.Header>\r\n                        <div className=\"on-icon\">\r\n                                       <p className=\"pay-title\">Support</p>\r\n                                       </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {/* <Card.Title>Coming Soon</Card.Title> */}\r\n\r\n                            <form name=\"service\" method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                                <Row>\r\n                                    {/* <Col xs md=\"6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Title</label>\r\n                                            <input type=\"text\" placeholder=\"Enter Title\"\r\n                                                name=\"title\" value={formField.title}\r\n                                                onChange={this.handleChange}\r\n                                                className={'form-control ' + (submitted && isValid.title.isInvalid ? 'is-invalid' : '')}/>\r\n                                            {submitted && isValid.title.isInvalid &&\r\n                                                <div className=\"invalid-feedback\"> {isValid.title.message} </div>\r\n                                            }\r\n                                        </div>\r\n                                    </Col> */}\r\n                                    <Col xs=\"12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Subject</label>\r\n                                            <input type=\"text\" placeholder=\"Enter Subject\"\r\n                                                name=\"subject\" value={formField.subject}\r\n                                                onChange={this.handleChange}\r\n                                                className={'form-control ' + (submitted && isValid.subject.isInvalid ? 'is-invalid' : '')}/>\r\n                                            {submitted && isValid.subject.isInvalid &&\r\n                                                <div className=\"invalid-feedback\"> {isValid.subject.message} </div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Comment</label>\r\n                                            <textarea placeholder=\"Enter Comment\" style={{minHeight: '120px'}}\r\n                                                name=\"comment\" value={formField.comment}\r\n                                                onChange={this.handleChange}\r\n                                                className={'form-control ' + (submitted && isValid.comment.isInvalid ? 'is-invalid' : '')} >\r\n                                            </textarea>\r\n                                            {submitted && isValid.comment.isInvalid &&\r\n                                                <div className=\"invalid-feedback\"> {isValid.comment.message} </div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <LaddaButton type=\"submit\" className=\"col-lg-2 btn btn-info btn-lg\" loading={process.loading ? true : false} data-style={EXPAND_RIGHT}>Submit</LaddaButton>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </form>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    authenticationSelector,\r\n    (process, authentication) => ({\r\n        process, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Support);","import React, { useState } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActions } from '../../../../../common/redux/actions';\r\nimport { defaultService } from '../../../../../common/services/default.service';\r\nimport { globalService as gs } from '../../../../../common/services';\r\nimport { FacebookShareButton, LinkedinShareButton, TwitterShareButton } from 'react-share';\r\n\r\nconst Sidebar = (props) => {\r\n    const { user, authentication } = props;\r\n    let auth = authentication ? authentication.authentication.user : {};\r\n    let item = user ? user.user.userProfile : {};\r\n    let language = user ? user.user.languages : [];\r\n    const lans = ( typeof language === 'string' )  ? [ language ] : language;\r\n    const languages = (lans === null) ? [] : lans;\r\n    const [value, setValue] = useState(false);\r\n    const handleUpload = (e) => {\r\n        const { dispatch } = props;\r\n        setValue(true);\r\n        defaultService.uploadAndProgress(e.target.files, dispatch).then((res) => {\r\n            let fileId = res.files[0].id;\r\n            dispatch(userActions.profile(\"POST\", {userProfile: {avatar_id: fileId}}, 'avatar'));\r\n            setValue(false);\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"card mb-4 card-profile\">\r\n            <div className=\"card-body px-0\">\r\n                {((item && item.is_verified === 2) && (item && item.userProfilePlatforms.length > 0)) && <div className=\"verified text-right px-3\"><i className=\"fas fa-shield-alt text-success\"></i> Verified</div>}\r\n                <figure className=\"text-center px-3 d-flex align-items-center justify-content-center\">\r\n                    <div className=\"pic rounded-circle\">\r\n                        <img className=\"img-fluid rounded-circle border\" alt=\"profile\" width=\"145\" height=\"145\" src={((user && user.user.id) === (auth && auth.id)) ? auth.avatar : user && user.user.avatar} />\r\n                        {((user && user.user.id) === (auth && auth.id)) &&\r\n                            <label className=\"btn btn-upload\">\r\n                                <i className=\"fas fa-camera-retro\"></i>\r\n                                <input type=\"file\" accept=\"image/*\" onChange={handleUpload} />\r\n                            </label>}\r\n                        {value && <div className=\"loader rounded-circle\"><span></span> <span></span></div>}\r\n                    </div>\r\n                </figure>\r\n                <div className=\"px-3\">\r\n                    <h3 className=\"profile-heading\">{item && item.name}</h3>\r\n                    <div className=\"designation\">{item && item.title} {/* UI/UX Designer, Social MediaDesigner */}</div>\r\n                    <div className=\"address\"><i className=\"fas fa-map-marker-alt icon-color\"></i> {item && item.countryCode && item.countryCode.name}\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"sharing px-3\">\r\n                    <h5 className=\"profile-heading\">Share my profile</h5>\r\n                    <ul className=\"social-login nav nav-pills justify-content-center px-3\">\r\n                        <li>\r\n                            <FacebookShareButton\r\n                                url={`${gs.rootUrl}/user/public/co-founder/${item && item.user_id}`}\r\n                                quote={item && item.name}\r\n                                className=\"share-button\">\r\n                                <i className=\"fab fab fa-facebook-f icon-color\"></i>\r\n                            </FacebookShareButton>\r\n                        </li>\r\n                        <li>\r\n                            <TwitterShareButton\r\n                                url={`${gs.rootUrl}/user/public/co-founder/${item && item.user_id}`}\r\n                                title={item && item.name}\r\n                                className=\"share-button\">\r\n                                <i className=\"fab fa-twitter icon-color\"></i>\r\n                            </TwitterShareButton>\r\n                        </li>\r\n                        <li>\r\n                            <LinkedinShareButton\r\n                                url={`${gs.rootUrl}/user/public/co-founder/${item && item.user_id}`}\r\n                                windowWidth={750}\r\n                                windowHeight={600}\r\n                                className=\"share-button\">\r\n                                <i className=\"fab fab fa-linkedin-in icon-color\"></i>\r\n                            </LinkedinShareButton>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"since text-center px-3\">Member since <big>{user && user.user.since}</big></div>\r\n                <hr className=\"mb-3\" />\r\n                <div className=\"languages sharing px-3\">\r\n                    <h5 className=\"profile-heading\">Languages</h5>\r\n                    {/*languages && languages.map((lang) => (<span className=\"mr-2\" key={lang}>{lang}</span>)) */}\r\n                    <span>{languages && languages.join(', ')}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst uploadSelector = createSelector(\r\n    state => state.upload,\r\n    upload => upload\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    userSelector,\r\n    uploadSelector,\r\n    authenticationSelector,\r\n    (process, user, upload, authentication) => ({\r\n        process, user, upload, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React from 'react';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst PublicNavbar = (props) => {\r\n    const {user} = props;\r\n    let item = user ? user.user.userProfile : {};\r\n\r\n\r\n    return (\r\n        <div className=\"public-navbar card mb-4\">\r\n            <div className=\"card-body\">\r\n                <nav className=\"nav\">\r\n                    <NavLink className=\"nav-link\" to={`/user/public/about/${item && item.user_id}`}>About Me</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/user/public/job/${item && item.user_id}`}>Jobs</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/user/public/service/${item && item.user_id}`}>Services</NavLink>\r\n                    {item.is_co_founder ? <NavLink className=\"nav-link\" to={`/user/public/co-founder/${item && item.user_id}`}>Co-founder</NavLink> : ''}\r\n                    <NavLink className=\"nav-link\" to={`/user/public/ratings/${item && item.user_id}`}>Rating & Review</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    userSelector,\r\n    (user) => ({\r\n        user\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PublicNavbar);\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../../layout';\r\nimport Sidebar from './partials/Sidebar';\r\nimport PublicNavbar from './partials/PublicNavbar';\r\n\r\nclass PublicLayout extends Component {\r\n\r\n    componentWillUnmount() {\r\n        //console.log('componentWillUnmount');\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return (<Main>\r\n            <div className=\"bg-body public-profile\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-4 col-12 left-side\">\r\n                            <Sidebar />\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-8 col-12 right-side\">\r\n                            <PublicNavbar />\r\n                            { children }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default PublicLayout;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport PublicLayout from './PublicLayout';\r\nimport { userActions } from '../../../../common/redux/actions';\r\nimport { ContetLIneLoader } from '../../../../common/loaders';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport moment from \"moment\";\r\n\r\nclass PublicAbout extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n        };\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const { dispatch, match } = this.props;\r\n        let id = match.params.id;\r\n        dispatch(userActions.publicProfile(\"GET\", null, {item_id: id}));\r\n        dispatch(userActions.experience(\"GET\", null, {user_id: id}));\r\n        dispatch(userActions.education(\"GET\", null, {user_id: id}));\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            const { dispatch } = this.props;\r\n            let id = this.props.match.params.id;\r\n            dispatch(userActions.publicProfile(\"GET\", null, {item_id: id}));\r\n            dispatch(userActions.experience(\"GET\", null, {user_id: id}));\r\n            dispatch(userActions.education(\"GET\", null, {user_id: id}));\r\n        }\r\n    }\r\n\r\n    getYear = (date) => {\r\n        let nedDate = [];\r\n        //return new Date(date).getFullYear();\r\n        nedDate.push(new Date(date).getMonth());\r\n        nedDate.push(new Date(date).getFullYear());\r\n        return nedDate.join(\"/ \")\r\n    };\r\n\r\n    render() {\r\n        const { user, process, experiences, educations } = this.props;\r\n        let about = user ? user.user.userProfile : {};\r\n        const experienceItems = experiences.data ? experiences.data.items : [];\r\n        const educationsItems = educations.data ? educations.data.items : [];\r\n\r\n        return (<PublicLayout>\r\n     \r\n                    <div class=\"card-box-profile-details\">\r\n\r\n<div className=\"description-profile\">\r\n\r\n <ul className=\"tr-list resume-info\">\t\t\t\r\n\r\n  <li>\r\n   <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> About</p>\r\n   </div>  \r\n   <div className=\"media-body\">\r\n   {process.loading ? <ContetLIneLoader primaryBg={'#ddd'} secondaryBg={'#eee'} width={900} /> : (about && about.about) ? <div dangerouslySetInnerHTML={{ __html: about && about.about }}></div> : 'No data yet'}\r\n   </div>\r\n   <hr/>\r\n  </li>\t\t\r\n\r\n  <li>\r\n   <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-cogs\" aria-hidden=\"true\"></i> Skills</p>\r\n   </div>  \r\n   <div className=\"media-body\">\r\n   {about.skills && about.skills.map((skill) => <span className=\"label label-success\" key={skill.id}>{skill.title }</span>)}\r\n   {about.skills && about.skills.length === 0 && 'No data yet'}\r\n   </div>\r\n   <hr/>\r\n  </li>\r\n\r\n  <li>\r\n  <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-briefcase\" aria-hidden=\"true\"></i> Experience</p>\r\n   </div>  \r\n                    {process.loading ? <ContetLIneLoader primaryBg={'#ddd'} secondaryBg={'#eee'} width={900} px={3} /> :\r\n                        <Fragment>\r\n                            <div className=\"education mb-lg-4 mb-3 px-3\">\r\n                                {(experienceItems && experienceItems.length > 0) &&\r\n                                <div className=\"d-flex mb-3 row\">\r\n                                    <div className=\"col-6\"><b className=\"table-head\">Company</b></div>\r\n                                    <div className=\"degree col\"><b className=\"table-head\">Title</b></div>\r\n                                    <div className=\"right col\" style={{paddingLeft: '20px'}}><b className=\"table-head\">Year</b></div>\r\n                                    </div>}\r\n                                {experienceItems && experienceItems.map((education) =>\r\n                                    <div className=\"d-flex mb-3 row\" key={education.id}>\r\n                                        <div className=\"col-6\">{education.industry_name}</div>\r\n                                        <div className=\"degree col\"><b>{education.title}</b></div>\r\n                                        <div className=\"right col\" style={{paddingLeft: '20px'}}><span>{moment(education.from).format('MM/YYYY')} - {education.is_present === 1 ? 'Present' : moment(education.to).format('MM/YYYY')}</span></div>\r\n                                    </div>\r\n                                )}\r\n                                 {experienceItems && experienceItems.length === 0 && 'No data yet'}\r\n                            </div>\r\n                        </Fragment>\r\n                    }\r\n                     <hr/>\r\n  </li>\r\n\r\n  <li>\r\n  <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-graduation-cap\" aria-hidden=\"true\"></i> Education</p>\r\n   </div>  \r\n                    <div className=\"education mb-lg-4 mb-3 px-3\">\r\n                        {(educationsItems && educationsItems.length > 0) ?\r\n                        <div className=\"d-flex mb-3 row\">\r\n                            <div className=\"col-6\"><b className=\"table-head\">School</b></div>\r\n                            <div className=\"degree col\"><b className=\"table-head\">Degree</b></div>\r\n                            <div className=\"right col\" style={{paddingLeft: '20px'}}><b className=\"table-head\">Year</b></div>\r\n                        </div>\r\n                        :'No data yet' \r\n                        }\r\n                        {educationsItems && educationsItems.map((experience) =>\r\n                            <div className=\"d-flex mb-3 row\" key={experience.id}>\r\n                                <div className=\"col-6\">{experience.institute}</div>\r\n                                <div className=\"degree col\"><b>{experience.title}</b></div>\r\n                                <div className=\"right col\" style={{paddingLeft: '20px'}}><span>{moment(experience.from).format('MM/YYYY')} - {experience.is_present === 1 ? 'Present' : moment(experience.to).format('MM/YYYY')}</span></div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n  </li>\r\n  \r\n </ul>\t\t\t\r\n  \r\n</div>\t\r\n     \r\n</div>\t\r\n\r\n\r\n\r\n\r\n           \r\n        </PublicLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst experienceSelector = createSelector(\r\n    state => state.experiences,\r\n    experiences => experiences\r\n);\r\n\r\nconst educationSelector = createSelector(\r\n    state => state.educations,\r\n    educations => educations\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    userSelector,\r\n    experienceSelector,\r\n    educationSelector,\r\n    (process, user, experiences, educations) => ({\r\n        process, user, experiences, educations\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PublicAbout);","import React, { Component, Fragment } from 'react';\r\nimport PublicLayout from './PublicLayout';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { userActions, jobActions } from '../../../../common/redux/actions';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\nimport {globalService as gs, itemService} from '../../../../common/services';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport ReadMoreReact from \"read-more-react\";\r\n\r\nclass PublicJob extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                page: 1,\r\n                user_id: null,\r\n                is_publish: 'publish',\r\n                is_closed: 0,\r\n            },\r\n            favorite: {},\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { dispatch, user } = this.props;\r\n        let id = this.props.match.params.id;\r\n        const formField = { ...this.state.formField };\r\n        formField.user_id = id;\r\n        this.setState({formField});\r\n        user === null && dispatch(userActions.publicProfile(\"GET\", null, {item_id: id}));\r\n        dispatch(jobActions.index(\"GET\", null, formField));\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        const { dispatch } = this.props;\r\n        const formField = { ...this.state.formField };\r\n        formField[\"page\"] = page;\r\n        dispatch(jobActions.index(\"GET\", null, formField));\r\n    };\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userFavorite\": {\r\n                favorite_id: item.id,\r\n                moduleId: \"UserItem\"\r\n            }\r\n        };\r\n        let method = (item.is_favorite) ? \"DELETE\" : \"POST\";\r\n        let param = (item.is_favorite) ? { item_id: item.is_favorite } : null;\r\n        let action = (item.is_favorite) ? \"remove\" : \"add\";\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to ${action}`,\r\n            message: `Are you sure to ${action} this favorite list`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(method, params, param)\r\n                            .then(response => {\r\n                                if (method === \"POST\") dispatch(alertSelectors.success(\"You have successfully selected a favorite.\"));\r\n                                if (method === \"DELETE\") dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                item.is_favorite = (method === \"POST\") ? response.model.id : false;\r\n                                this.setState({ favorite: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { jobs, process } = this.props;\r\n        let results = (jobs && jobs.publish) ? jobs.publish.items : [];\r\n        return (<PublicLayout>\r\n            <DocumentTitle title=\"Jobs\"/>\r\n            <div className=\"w-100\">\r\n                {process.loading ? <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={3} width={700} /> : <Fragment>\r\n                    {(results && results.length === 0) && <div className=\"card service-box\">\r\n                        <div className=\"card-body text-center\">\r\n                            <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                <div className=\"inner text-center\">\r\n                                    <figure>\r\n                                        <img src=\"/images/not-found/My-Services.png\" alt=\"Image\" width=\"100\" />\r\n                                    </figure>\r\n                                    <h5>No Jobs are listed yet</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n                    {results && results.map((item) =>\r\n                        <div className=\"jobBox card mb-4\" key={item.id}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"caption\">\r\n                                    <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                        {(item.is_favorite !== false) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                            <i className=\"far fa-heart\"></i>}\r\n                                    </IconButton>\r\n                                    <h3><NavLink className=\"section-titles\" to={`/user/public/job/view/${item.id}`}>{item.title}</NavLink></h3>\r\n                                </div>\r\n                                <div className=\"prices d-flex align-items-center\">\r\n                                    {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>}\r\n                                    <div className=\"fixed badge badge-secondary text-capitalize\">{(item.settlement === 'both') ? 'Cash & Exchange' : item.settlement}</div>\r\n                                    {item.settlement && item.settlement === 'cash' &&\r\n                                    <div className=\"cash badge badge-success text-capitalize\">{item.type}</div>}\r\n                                </div>\r\n                                <div className=\"priview d-flex flex-wrap pb-0\"></div>\r\n                                <ReadMoreReact className=\"text\" text={gs.html2text(item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Fragment>}\r\n                <div className=\"w-100\">\r\n                    <Pagination className=\"justify-content-end\"\r\n                        pageSize={20}\r\n                        totalCount={(jobs && jobs.data && jobs.data.pagination.totalCount) ? jobs.data.pagination.totalCount : 10}\r\n                        onChangePage={this.onChangePage} />\r\n                </div>\r\n            </div>\r\n        </PublicLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst jobsSelector = createSelector(\r\n    state => state.jobs,\r\n    jobs => jobs\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    userSelector,\r\n    jobsSelector,\r\n    (process, user, jobs) => ({\r\n        process, user, jobs\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PublicJob);","import React, { Component, Fragment } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { Link } from 'react-router-dom';\r\nimport { IconButton, Box } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PublicLayout from './PublicLayout';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActions, serviceActions } from '../../../../common/redux/actions';\r\nimport {PublicServiceLoader, SearchLoader} from '../../../../common/loaders';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport Pagination from \"../../../../helpers/Pagination\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { itemService } from '../../../../common/services';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nclass PublicService extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            services: null,\r\n            favorite: {},\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { dispatch, user, services, match } = this.props;\r\n        let id = match.params.id;\r\n        (( user === null ) || (user.user.id !== id)) && dispatch(userActions.publicProfile(\"GET\", null, {item_id: id}));\r\n        let service_user_id = this.findUserIdByServies(services);\r\n        ((Object.getOwnPropertyNames(services).length === 0 ) || (service_user_id !== id)) && dispatch(serviceActions.index(\"GET\", null, {user_id: id}));\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {match, dispatch} = this.props;\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            const id = match.params.id;\r\n            dispatch(userActions.publicProfile(\"GET\", null, {item_id: id}));\r\n            this.setState({id: id ? id : null});\r\n        }\r\n    }\r\n\r\n    findUserIdByServies = (services) => {\r\n        return (services && services.data) ? services.data.user_id : null;\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(serviceActions.clear());\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        if(page !== 1) {\r\n            const { dispatch, match } = this.props;\r\n            let id = match.params.id;\r\n            dispatch(serviceActions.index(\"GET\", null, {user_id: id, page: page}));\r\n        }\r\n    };\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userFavorite\": {\r\n                favorite_id: item.id,\r\n                moduleId: \"UserService\"\r\n            }\r\n        };\r\n\r\n        let method = (item.is_favorite) ? \"DELETE\" : \"POST\";\r\n        let param = (item.is_favorite) ? { item_id: item.is_favorite } : null;\r\n        let action = (item.is_favorite) ? \"remove\" : \"add\";\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to ${action}`,\r\n            message: `Are you sure you want to ${action} this service to your favorites list?`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(method, params, param)\r\n                            .then(response => {\r\n                                if (method === \"POST\") dispatch(alertSelectors.success(\"You have successfully selected a favorite.\"));\r\n                                if (method === \"DELETE\") dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                item.is_favorite = (method === \"POST\") ? response.model.id : false;\r\n                                this.setState({ favorite: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const {services, process} = this.props;\r\n        let serviceArr = services.data ? services.data.items : [];\r\n\r\n        return (<PublicLayout>\r\n            <DocumentTitle title=\"Services\"/>\r\n            <div className=\"services w-100\">\r\n                <div className=\"row\">\r\n                    {process.loading ? <Fragment>\r\n                            {[1,2,3].map((numbe) =>\r\n                                <div className=\"col-lg-4 col-sm-6 col-12\" key={Math.random() * (+1 - +1) + numbe}>\r\n                                    <div className=\"p-3 bg-white\">\r\n                                        <ContentLoader\r\n                                            height={450}\r\n                                            width={500}\r\n                                            speed={10}\r\n                                            primaryColor={'#ddd'}\r\n                                            secondaryColor={'#ddd'}\r\n                                        >\r\n                                            <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width={500} height=\"280\" />\r\n                                            <rect x=\"25\" y=\"300\" rx=\"3\" ry=\"3\" width={ 450} height=\"20\" />\r\n                                            <rect x=\"25\" y=\"350\" rx=\"3\" ry=\"3\" width={ 450} height=\"20\" />\r\n                                            <rect x=\"25\" y=\"400\" rx=\"3\" ry=\"3\" width={450} height=\"20\" />\r\n                                        </ContentLoader>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Fragment> :\r\n                        <Fragment>\r\n                            {serviceArr && serviceArr.length === 0 && <div className=\"col-12\">\r\n                                <div className=\"card service-box\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                            <div className=\"inner text-center\">\r\n                                                <figure>\r\n                                                    <img src=\"/images/not-found/My-Services.png\" alt=\"My Services\" width=\"100\" />\r\n                                                </figure>\r\n                                                <h5>No Services are listed yet</h5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                            {serviceArr && serviceArr.map((item) =>\r\n                                <div className=\"col-lg-4 col-sm-6 col-12\" key={item.id}>\r\n                                    <div className=\"svcsLBox mb-4\">\r\n                                        <div className=\"image\">\r\n                                            <LazyLoadImage alt=\"image\" className=\"img-fluid w-100\" src={item.cover && item.cover} effect=\"blur\" />\r\n                                            <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                                {(item.is_favorite !== false) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                                    <i className=\"far fa-heart\"></i>}\r\n                                            </IconButton>\r\n                                        </div>\r\n                                        <div className=\"caption\">\r\n                                            <h3><Link to={`/user/public/service/view/${item.id}`}>{item.title}</Link></h3>\r\n                                            <div className=\"service\">{item.proposal_count ? item.proposal_count : 'Not'} Service Sold</div>\r\n                                            <div className=\"ratings d-flex align-items-center\">\r\n                                                <small>({item.avg_rating})</small>\r\n                                                <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                    <Rating value={parseFloat(item.avg_rating)} readOnly />\r\n                                                </Box>\r\n                                                <small className=\"count\">{item.proposal_count}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Fragment>\r\n                    }\r\n\r\n                    <div className=\"col-12\">\r\n                        <Pagination className=\"justify-content-center\" pageSize={20}\r\n                            totalCount={(services && services.data && services.data.pagination.totalCount) ? services.data.pagination.totalCount : 10}\r\n                            onChangePage={this.onChangePage}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PublicLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst serviceSelector = createSelector(\r\n    state => state.services,\r\n    services => services\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    userSelector,\r\n    serviceSelector,\r\n    (process, user, services) => ({\r\n        process, user, services\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PublicService);\r\n","import React, { Component } from 'react';\r\nimport { Tab, Nav } from 'react-bootstrap';\r\nimport PublicLayout from './PublicLayout';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActions } from '../../../../common/redux/actions';\r\nimport { ContetLIneLoader } from '../../../../common/loaders';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { itemService } from '../../../../common/services';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\n\r\nconst timeCommitment = [\r\n    { id: 1, value: '5 hours/week' },\r\n    { id: 2, value: '10 hours/week' },\r\n    { id: 3, value: '15 hours/week' },\r\n    { id: 4, value: '20 hours/week' },\r\n    { id: 5, value: '25 hours/week' },\r\n    { id: 6, value: '30 hours/week' },\r\n    { id: 7, value: '35 hours/week' },\r\n    { id: 8, value: '40 hours/week' },\r\n    { id: 9, value: '50 hours/week' },\r\n    { id: 10, value: '60 hours/week' },\r\n];\r\n\r\nclass PublicCoFounder extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            about: {},\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const { dispatch, user, match } = this.props;\r\n        let id = match.params.id;\r\n        dispatch(userActions.publicProfile(\"GET\", null, {item_id: id}));\r\n    }\r\n\r\n    addConnection = (item) => {\r\n        const { dispatch, authentication } = this.props;\r\n        let user_id = authentication.authentication.user.id;\r\n        let connection_id = item.id;\r\n        const params = {\r\n            \"userConnection\": {\r\n                user_id: user_id,\r\n                connection_id: connection_id,\r\n                status: 0\r\n            }\r\n        };\r\n        confirmAlert({\r\n            title: `Please confirm to add`,\r\n            message: `Are you sure you want to add this co-founder to your connection?`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.connection(\"POST\", params)\r\n                            .then(response => {\r\n                                dispatch(alertSelectors.success(\"You have successfully sent a connection request.\"));\r\n                                item.is_connection = 0 ;\r\n                                this.setState({ about: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    connected = (about) => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                  <div className='custom-ui'>\r\n                    <div style={{height: '90px'}}> {about.name} already connected.</div>\r\n                    <button className=\"btn btn-info\" onClick={onClose}>Close</button>\r\n                  </div>\r\n                );\r\n            },\r\n            closeOnEscape: false,\r\n            closeOnClickOutside: false,\r\n        });\r\n    };\r\n    getTimeCommitment = (item) => {\r\n        let data = timeCommitment.find(o => (o.id === item));\r\n        return data && data.value;\r\n    }\r\n\r\n    render() {\r\n        const { user, process } = this.props;\r\n        let about = user ? user.user : {};\r\n        const {userCoFounderIdeal, userCoFounderExperience} = about;\r\n\r\nconsole.log(userCoFounderExperience)\r\n        return (<PublicLayout>\r\n         \r\n\r\n                    <div class=\"card-box-profile-details\">\r\n                   \r\n\r\n<div className=\"description-profile\">\r\n    \r\n\r\n <ul className=\"tr-list resume-info\">\t\r\n \t\t\r\n\r\n  <li>\r\n      <div className=\"row\">\r\n   <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-briefcase\" aria-hidden=\"true\"></i> Cofounder Experience</p>\r\n   </div>  \r\n   <div className=\"connection d-flex flex-nowrap align-items-center row\" style={{marginLeft:\"auto\"}}>\r\n                            {((about && about.is_connection === false) || (about && about.is_connection === 2)) && <button onClick={() => this.addConnection(about)} className=\"btn btn-info connection-btn\"><i className=\"fas fa-plus\"></i> Connection</button> }\r\n                            {(about && about.is_connection === 0) && <button className=\"btn btn-primary\" style={{pointerEvents: 'none'}}>Request Pending</button> }\r\n\r\n                            {(about && about.is_connection === 1) && <button className=\"btn btn-success\" onClick={() => this.connected(about)}><i className=\"fas fa-check\"></i> Connected</button> }\r\n\r\n                            <span className=\"count pl-3 btn btn-link\">{about && about.num_of_connections} Connections</span>\r\n                        </div>\r\n                        </div>\r\n\r\n\r\n   <div className=\"media-body\">\r\n   {process.loading ? <ContetLIneLoader primaryBg={'#ddd'} secondaryBg={'#eee'} width={900} /> : <div>\r\n    {(about && about.userCoFounderExperience === null) ? 'No data yet' : userCoFounderExperience && userCoFounderExperience.description}\r\n    </div>}\r\n   </div>\r\n   <hr/>\r\n  </li>\t\r\n\r\n    <li>\r\n   <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-info\" aria-hidden=\"true\"></i>Additional Information</p>\r\n   </div>  \r\n   <div className=\"media-body\">\r\n   {process.loading ? <ContetLIneLoader primaryBg={'#ddd'} secondaryBg={'#eee'} width={900} />:<div>    \r\n   {userCoFounderExperience ? <div className=\"px-3 mb-3\">\r\n                        <div className=\"d-flex mb-2\">\r\n                            <div className=\"w-50\"><b>Year of Experience</b></div>\r\n                            <div className=\"w-50\">{userCoFounderExperience.years_experience} years</div>\r\n                        </div>\r\n                        <div className=\"d-flex mb-2\">\r\n                            <div className=\"w-50\"><b>Relevant Industry</b></div>\r\n                            <div className=\"w-50\">{userCoFounderExperience.title}</div>\r\n                        </div>\r\n                        <div className=\"d-flex mb-2\">\r\n                            <div className=\"w-50\"><b>Time Commitment</b></div>\r\n                            <div className=\"w-50\">{this.getTimeCommitment(userCoFounderExperience.working_hour)}</div>\r\n                        </div>\r\n                        <div className=\"d-flex mb-2\">\r\n                            <div className=\"w-50\"><b>Previous Startup Experience</b></div>\r\n                            <div className=\"w-50\">{(userCoFounderExperience.startup_experience === 1) ? 'Yes' : 'No'}</div>\r\n                        </div>\r\n                    </div> : <div className=\"px-3\">No data yet</div>}\r\n                    </div>}\r\n   </div>\r\n   <hr/>\r\n  </li>\t\r\n\r\n    <li>\r\n   <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-bars\" aria-hidden=\"true\"></i> Business Stage</p>\r\n   </div>  \r\n   <div className=\"media-body\">\r\n   {process.loading ? <div className=\"px-3\"><ContetLIneLoader primaryBg={'#ddd'} secondaryBg={'#eee'} width={900} /></div> : <div>\r\n                        <Tab.Container id=\"left-tabs-example\" defaultActiveKey={`business_${(userCoFounderExperience && userCoFounderExperience.status !== null) ? userCoFounderExperience.status : 0}`}>\r\n                            <div className=\"wizard px-3 mb-3\">\r\n                                <div className=\"wizard-inner\">\r\n                                    <Nav as=\"ul\" variant=\"tab\" className=\"nav-tabs d-flex justify-content-around\">\r\n                                        <Nav.Item as=\"li\" style={{width: '20%'}}>\r\n                                            <Nav.Link disabled eventKey={`business_1`}>\r\n                                                <span className=\"round-tab\">1</span>\r\n                                                <span className=\"text\">Concept</span>\r\n                                            </Nav.Link>\r\n                                        </Nav.Item>\r\n                                        <Nav.Item as=\"li\" style={{width: '20%'}}>\r\n                                            <Nav.Link disabled eventKey={`business_2`}>\r\n                                                <span className=\"round-tab\">2</span>\r\n                                                <span className=\"text\" style={{color:\"black\"}}>Design</span>\r\n                                            </Nav.Link>\r\n                                        </Nav.Item>\r\n                                        <Nav.Item as=\"li\" style={{width: '20%'}}>\r\n                                            <Nav.Link disabled eventKey={`business_3`}>\r\n                                                <span className=\"round-tab\">3</span>\r\n                                                <span className=\"text\">Development</span>\r\n                                            </Nav.Link>\r\n                                        </Nav.Item>\r\n                                        <Nav.Item as=\"li\" style={{width: '20%'}}>\r\n                                            <Nav.Link disabled eventKey={`business_4`}>\r\n                                                <span className=\"round-tab\">4</span>\r\n                                                <span className=\"text\">Launch</span>\r\n                                            </Nav.Link>\r\n                                        </Nav.Item>\r\n                                        <Nav.Item as=\"li\" style={{width: '20%'}}>\r\n                                            <Nav.Link disabled eventKey={`business_5`}>\r\n                                                <span className=\"round-tab\">5</span>\r\n                                                <span className=\"text\">Growth</span>\r\n                                            </Nav.Link>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Container>\r\n                    </div>}\r\n   </div>\r\n   <hr/>\r\n  </li>\t\r\n\r\n  <li>\r\n   <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-lightbulb-o\" aria-hidden=\"true\"></i> My Ideal Cofounder</p>\r\n   </div>  \r\n   <div className=\"media-body\">\r\n   {process.loading ? <ContetLIneLoader primaryBg={'#ddd'} secondaryBg={'#eee'} width={900} /> : <div>\r\n  \r\n                                  {(userCoFounderIdeal && userCoFounderIdeal.description) ?      <div>\r\n                                <h5><b className=\"icon-color\">{userCoFounderIdeal && userCoFounderIdeal.title}</b></h5>\r\n                                <div className=\"about-text\">\r\n                                    {userCoFounderIdeal && userCoFounderIdeal.description}\r\n                                </div>\r\n                                </div> : 'No data yet'}\r\n                            </div>}\r\n   </div>\r\n   <hr/>\r\n  </li>\t\r\n\r\n  <li>\r\n   <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-cogs\" aria-hidden=\"true\"></i> Skills</p>\r\n   </div>  \r\n   <div className=\"media-body\">\r\n   {about.userProfile && about.userProfile.skills.map((skill) => <span className=\"label label-success\" key={skill.id}>{skill.title }</span>)}\r\n   {about.userProfile && about.userProfile.skills.length === 0 && 'No data yet'}\r\n\r\n   </div>\r\n   <hr/>\r\n  </li>\r\n\r\n  <li>\r\n   <div className=\"icon\">\r\n    <p className=\"tr-title\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i> My Wishlist</p>\r\n   </div>  \r\n   <div className=\"media-body\">\r\n   { userCoFounderIdeal ? <div className=\"about-text px-3 mb-0\">\r\n                            <div className=\"d-flex mb-2\">\r\n                                <div className=\"w-50\"><b>Year of Experience</b></div>\r\n                                <div className=\"w-50\">{userCoFounderIdeal.years_experience} years</div>\r\n                            </div>\r\n                            <div className=\"d-flex mb-2\">\r\n                                <div className=\"w-50\"><b>Relevant Industry</b></div>\r\n                                <div className=\"w-50\">{userCoFounderIdeal.title }</div>\r\n                            </div>\r\n                            <div className=\"d-flex mb-2\">\r\n                                <div className=\"w-50\"><b>Time Commitment</b></div>\r\n                                <div className=\"w-50\">{this.getTimeCommitment(userCoFounderIdeal.working_hour)}</div>\r\n                            </div>\r\n                            <div className=\"d-flex mb-2\">\r\n                                <div className=\"w-50\"><b>Previous Startup Experience</b></div>\r\n                                <div className=\"w-50\">{(userCoFounderIdeal.startup_experience === 1) ? 'Yes' : 'No'}</div>\r\n                            </div>\r\n                            <div className=\"d-flex mb-2\">\r\n                                <div className=\"w-50\"><b>Preferred Location</b></div>\r\n                                <div className=\"w-50\">{userCoFounderIdeal && userCoFounderIdeal.countries.map(count => count.name).join(', ')}</div>\r\n                            </div>\r\n                        </div> : <div className=\"px-3\">No data yet</div> }\r\n   </div>\r\n   <hr/>\r\n  </li>\t\r\n\r\n\r\n  \r\n\r\n  \r\n  </ul>\r\n  </div>\r\n  </div>\r\n\r\n        </PublicLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    userSelector,\r\n    authenticationSelector,\r\n    (process, user, authentication) => ({\r\n        process, user, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PublicCoFounder);\r\n","import React, { Component, Fragment } from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Element } from 'react-scroll';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box } from '@material-ui/core';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport { itemService } from '../../../../common/services';\r\nimport Select from 'react-select';\r\n\r\n\r\nclass RatingReview extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reviews: null,\r\n            item: null,\r\n            settlement: null,\r\n            moduleId: null,\r\n            isShowDropdown: true,\r\n            isShowAvgRating: true,\r\n            proposal: null,\r\n            selectedReviews: null\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { item, moduleId, isShowDropdown, isShowAvgRating, proposal } = this.props;\r\n        this.setState({\r\n            item,\r\n            moduleId,\r\n            isShowDropdown,\r\n            isShowAvgRating,\r\n            proposal\r\n        });\r\n        this.ratings(moduleId);\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        const { item, moduleId, isShowDropdown, isShowAvgRating, proposal } = this.props;\r\n        this.setState({\r\n            item,\r\n            moduleId,\r\n            isShowDropdown,\r\n            isShowAvgRating,\r\n            proposal\r\n        });\r\n        this.ratings(moduleId);\r\n    }\r\n\r\n    ratings = (moduleId, settlement = null) => {\r\n        const { item, proposal } = this.props;\r\n        let user_id = item && item.user && item.user.id;\r\n        let item_id = item && item.id;\r\n        let proposal_id = proposal && proposal.id ? proposal.id : null;\r\n        itemService.review(\"GET\", null, { item_id, moduleId, settlement, user_id, proposal_id })\r\n            .then(res => {\r\n                res && res.items && this.setState({ reviews: res.items });\r\n            });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { moduleId } = this.state;\r\n        this.ratings(moduleId, e.target.value);\r\n        let formField = { ...this.state.formField };\r\n        if (e.target.value) {\r\n            formField['selectedReviews'] = e.target.value;\r\n            this.setState(formField);\r\n        } else {\r\n            formField['selectedReviews'] = null;\r\n            this.setState(formField);\r\n        }\r\n\r\n    };\r\n\r\n    changable=(e)=>{\r\n        this.setState({\r\n            settlement: e\r\n        },()=>{\r\n            console.log(this.state.settlement)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { item, reviews, isShowDropdown, isShowAvgRating, selectedReviews } = this.state;\r\n        let profile = item && item.user && item.user.userProfile;\r\n        const options = [\r\n            { value: '', label: 'All Reviews' },\r\n            { value: 'cash', label: 'Cash Reviews' },\r\n            { value: 'exchange', label: 'Exchange Reviews' }\r\n        ]\r\n        return (<Element className=\"public-rating card col-lg-12 col-md-12 col-sm-12 col-12\" name=\"rating_review\">\r\n            {reviews ? <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center w-100 mb-4\">\r\n\r\n                    <p className=\"col pl-0 mb-0 rating-heading\"><i className=\"fa fa-star rating-icon\" aria-hidden=\"true\"></i>  Rating & Review</p>\r\n                    {isShowDropdown &&\r\n                        <Select\r\n                            name=\"settlement\"\r\n                            className=\"selecttt\"\r\n                            onChange={(e)=>this.changable(e)}\r\n                            options={options}\r\n                            value={this.state.settlement}\r\n                        />\r\n                        // <select className=\"custom-select\" name=\"settlement\" onChange={this.handleChange} style={{ width: '230px' }}>\r\n                        //     <option value=\"\">All Reviews</option>\r\n                        //     <option value=\"cash\">Cash Reviews</option>\r\n                        //     <option value=\"exchange\">Exchange Reviews</option>\r\n                        // </select>\r\n                    }\r\n                </div>\r\n\r\n                <hr />\r\n                {profile && (isShowAvgRating === true) && <div className=\"w-100 px-3\">\r\n                    <div className=\"row rating-all align-items-center\">\r\n                        {profile.avg_rating && <div className=\"col-md-4 col-12 mb-3\">\r\n                            <div className=\"overall\">\r\n                                <big>{parseFloat(profile.avg_rating)}</big>\r\n                                <Box component=\"div\" className=\"d-flex justify-content-center w-100 float-left\"\r\n                                    borderColor=\"transparent\">\r\n                                    <Rating value={parseFloat(profile.avg_rating)} size=\"large\" readOnly />\r\n                                </Box>\r\n                                <small className=\"w-100 float-left\">Service Rating</small>\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"col-md-7 col-12 mb-3\">\r\n                            <div className=\"overall-list\">\r\n                                {profile.avg_rating_communication && <div className=\"list d-flex align-items-center\">\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar\" style={{ width: (parseFloat(profile.avg_rating_communication) * 100 / 5) + '%' }}></div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <Box component=\"div\" mx={1} borderColor=\"transparent\" title=\"Communication\">\r\n                                            <Rating value={parseFloat(profile.avg_rating_communication)} readOnly />\r\n                                        </Box>\r\n                                        <small>{(parseFloat(profile.avg_rating_communication) * 100 / 5)}%</small>\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {profile.avg_rating_competence && <div className=\"list d-flex align-items-center\">\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar\" style={{ width: (parseFloat(profile.avg_rating_competence) * 100 / 5) + '%' }}></div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <Box component=\"div\" mx={1} borderColor=\"transparent\" title=\"Professionalism\">\r\n                                            <Rating value={parseFloat(profile.avg_rating_competence)} readOnly />\r\n                                        </Box>\r\n                                        <small>{(parseFloat(profile.avg_rating_competence) * 100 / 5)}%</small>\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {profile.avg_rating_quality && <div className=\"list d-flex align-items-center\">\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar\" style={{ width: (parseFloat(profile.avg_rating_quality) * 100 / 5) + '%' }}></div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <Box component=\"div\" mx={1} borderColor=\"transparent\" title=\"Quality\">\r\n                                            <Rating value={parseFloat(profile.avg_rating_quality)} readOnly />\r\n                                        </Box>\r\n                                        <small>{(parseFloat(profile.avg_rating_quality) * 100 / 5)}%</small>\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {profile.avg_rating_deadline && <div className=\"list d-flex align-items-center\">\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar\" style={{ width: (parseFloat(profile.avg_rating_deadline) * 100 / 5) + '%' }}></div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <Box component=\"div\" mx={1} borderColor=\"transparent\" title=\"Timely\">\r\n                                            <Rating value={parseFloat(profile.avg_rating_deadline)} readOnly />\r\n                                        </Box>\r\n                                        <small>{(parseFloat(profile.avg_rating_deadline) * 100 / 5)}%</small>\r\n                                    </div>\r\n                                </div>}\r\n                                {profile.avg_rating_recommend && <div className=\"list d-flex align-items-center\">\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar\" style={{ width: (parseFloat(profile.avg_rating_recommend) * 100 / 5) + '%' }}></div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <Box component=\"div\" mx={1} borderColor=\"transparent\" title=\"Recommend\">\r\n                                            <Rating value={parseFloat(profile.avg_rating_recommend)} readOnly />\r\n                                        </Box>\r\n                                        <small>{(parseFloat(profile.avg_rating_recommend) * 100 / 5)}%</small>\r\n                                    </div>\r\n                                </div>}\r\n                                {/* {item.avg_rating_quality && <div className=\"list d-flex align-items-center\">\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar\" style={{ width: (parseFloat(item.avg_rating_quality) * 100 / 5) + '%' }}></div>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <Box component=\"div\" mx={1} borderColor=\"transparent\">\r\n                                            <Rating value={parseFloat(item.avg_rating_quality)} readOnly />\r\n                                        </Box>\r\n                                        <small>{(parseFloat(item.avg_rating_quality) * 100 / 5)}%</small>\r\n                                    </div>\r\n                                </div>} */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n                {reviews && reviews.length > 0 &&\r\n                    <Fragment><div className=\"review-heading px-3\">\r\n                        {(selectedReviews === null) && 'All Reviews'}\r\n                        {(selectedReviews === 'cash') && 'Cash Reviews'}\r\n                        {(selectedReviews === 'exchange') && 'Exchange Reviews'}\r\n                    </div>\r\n                        <hr /></Fragment>\r\n                }\r\n                {reviews && reviews.length === 0 &&\r\n                    <div className=\"review-text px-3\" style={{ marginTop: '-8px' }}>\r\n                        <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                            <div className=\"inner text-center\">\r\n                                <figure>\r\n                                    <img src=\"/images/not-found/REVIEW-1-01.png\" alt=\"Review not found\" width=\"100\" />\r\n                                </figure>\r\n                                <h5>No Rating & Review has been given yet</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {reviews && reviews.map((item) =>\r\n                    <div className=\"review-list d-flex flex-wrap px-3\" key={item.id}>\r\n                        <div className=\"image\">\r\n                            <img src={item.actionBy.avatar} alt=\"profile\" className=\"img-fluid rounded-circle\" />\r\n                        </div>\r\n                        <div className=\"caption\">\r\n                            <Box component=\"div\" className=\"rating\" borderColor=\"transparent\">\r\n                                <Rating value={parseFloat(item.rating_avg)} readOnly />\r\n                            </Box>\r\n                            <h4><Link to={`/user/public/about/${item.actionBy && item.actionBy.id}`}>{item.actionBy && item.actionBy.name}</Link></h4>\r\n                            <div className=\"date\">\r\n                                {(new Date(item && item.created_at * 1000)).toLocaleDateString('en-US', {\r\n                                    year: 'numeric',\r\n                                    month: 'long',\r\n                                    day: '2-digit'\r\n                                })}\r\n                            </div>\r\n                            <div className=\"text\">{item.review}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div> : <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                    <div className=\"inner text-center\">\r\n                        <figure>\r\n                            <img src=\"/images/not-found/REVIEW-1-01.png\" alt=\"Review not found\" width=\"100\" />\r\n                        </figure>\r\n                        <h5>No Rating & Review has been given yet</h5>\r\n                    </div>\r\n                </div>}\r\n        </Element>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process, ) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(RatingReview);\r\n","import React, { Component } from 'react';\r\nimport PublicLayout from './PublicLayout';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActions } from '../../../../common/redux/actions';\r\nimport RatingReview from \"../../Service/partials/RatingReview\";\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { ModuleHelper } from '../../../../helpers/module.helper';\r\n\r\nclass PublicRating extends Component {\r\n\r\n    componentWillMount() {\r\n        const { dispatch, user } = this.props;\r\n        let id = this.props.match.params.id;\r\n        user === null && dispatch(userActions.publicProfile(\"GET\", null, { item_id: id }));\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        return (<PublicLayout userId={this.props.match.params}>\r\n            <DocumentTitle title=\"Rating & Review\" />\r\n            {user && <RatingReview item={user} isShowDropdown={true} isShowAvgRating={true}/>}\r\n        </PublicLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    userSelector,\r\n    (process, user) => ({\r\n        process, user\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PublicRating);\r\n","import React, { Fragment } from 'react';\r\nimport { IconButton, Box } from '@material-ui/core';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { commonHelper } from '../../../../../helpers/common.helper';\r\n\r\nconst OtherServices = (props) => {\r\n\r\n    const { services, item, service_id } = props;\r\n    let items = services.data ? services.data.items : [];\r\n    items = items.filter(item => (parseInt(item.id) !== parseInt(service_id)));\r\n\r\n    return (\r\n        <div className=\"col-12 same-person\">\r\n            <h4>Other Services {item ? `by ${item.user.name}` : ''}</h4>\r\n            {items && items.length < 1 ? 'Other Services not found' : ''}\r\n            <div className=\"row\">\r\n                {items && <Fragment>\r\n                    {items && items.slice(0, 4).map((item) =>\r\n                        // <Fragment key={item.id}>\r\n                        //     <div className={`col-xl-3 col-md-6 col-sm-6 col-12 d-block`}>\r\n                        //         <div className=\"svcsLBox w-100 float-left\">\r\n                        //             <div className=\"image\">\r\n                        //                 <Link to={`/user/public/service/view/${item.id}`} className=\"bg-image\">\r\n                        //                     <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.cover ? item.cover : \"/images/service-list-1.jpg\"} effect=\"blur\" />\r\n                        //                 </Link>\r\n                        //                 <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                        //                     {(item && item.is_favorite !== false) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                        //                         <i className=\"far fa-heart\"></i>}\r\n                        //                 </IconButton>\r\n                        //             </div>\r\n                        //             <div className=\"caption w-100 float-left\">\r\n                        //                 <h3 className=\"text-truncate\" title={item.title}><NavLink to={`/user/public/service/view/${item.id}`}>{item.title}</NavLink></h3>\r\n                        //                 <div className=\"service\">{item.proposal_count} Service Sold</div>\r\n                        //                 <div className=\"ratings d-flex align-items-center\">\r\n                        //                     <small>({Math.round(parseFloat(item.avg_rating))})</small>\r\n                        //                     <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                        //                         <Rating value={Math.round(parseFloat(item.avg_rating))} readOnly />\r\n                        //                     </Box>\r\n                        //                     <small className=\"count\">{item.proposal_count}</small>\r\n                        //                 </div>\r\n                        //                 <div className=\"profile d-flex align-items-center\">\r\n                        //                     <div className=\"img pr-2\">\r\n                        //                         <NavLink to={`/user/public/about/${item.user_id}`}>\r\n                        //                             <img src={item.user.avatar} className=\"rounded-circle w-auto\" width=\"60\"\r\n                        //                                 height=\"60\" alt=\"\" /></NavLink>\r\n                        //                     </div>\r\n                        //                     <div className=\"caption\">\r\n                        //                         <h6 className=\"mb-0\">\r\n                        //                             <NavLink to={`/user/public/about/${item.user_id}`}>{item.user.name}</NavLink>\r\n                        //                         </h6>\r\n                        //                         <p className=\"mb-0\"><small>{item.user && item.user.countryCode && item.user.countryCode.name}</small></p>\r\n                        //                     </div>\r\n                        //                 </div>\r\n                        //             </div>\r\n                        //         </div>\r\n                        //     </div>\r\n                        // </Fragment>\r\n\r\n                        <div className=\"col-md-3\" key={item.id}>\r\n                            <div className=\"svcsLBox w-100 float-left\">\r\n                                <div className=\"image\">\r\n                                    <Link to={`/user/public/service/view/${item.id}`} className=\"bg-image\">\r\n                                        <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.cover} effect=\"blur\" />\r\n                                    </Link>\r\n                                    <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                        {(item.is_favorite) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                            <i className=\"far fa-heart\"></i>}\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div className=\"caption w-100 float-left\">\r\n                                    <h3 className=\"text-truncate\" title={item.title}><Link to={`/user/public/service/view/${item.id}`}>{item.title}</Link></h3>\r\n                                    {item.sold_count ? <div className=\"service\">{item.sold_count} Service Sold</div> : ''}\r\n                                    <div className=\"ratings d-flex align-items-center\">\r\n                                        <small>({item.avg_rating})</small>\r\n                                        <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                            <Rating value={Math.floor(item.avg_rating)} readOnly />\r\n                                        </Box>\r\n                                        {(item && item.count_rating !== 0) && <small className=\"count\">{item.count_rating}</small>}\r\n                                    </div>\r\n                                    {/* <div className=\"profile d-flex align-items-center\">\r\n                                        <div className=\"img pr-2\">\r\n                                            <NavLink to={`/user/public/about/${item.user.id}`}><img src={item.user.avatar} className=\"img-fluid rounded-circle\" width=\"32\" height=\"32\" alt=\"\" /></NavLink>\r\n                                        </div>\r\n                                        <div className=\"caption\">\r\n                                            <h6 className=\"mb-0\"> <NavLink to={`/user/public/about/${item.user.id}`}>{item.user.name}</NavLink></h6>\r\n                                            <p className=\"mb-0\"><small>\r\n                                                {item.user && item.user.countryCode && item.user.countryCode.name}\r\n                                            </small></p>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                    <div class=\"col-lg-12 abc\">\r\n                                        <div class=\"pull-left\">\r\n                                            <NavLink to=\"#\">\r\n                                                {item.user.avatar ?\r\n                                                    <img class=\"img-responsive\" src={item.user.avatar} alt=\"Image\" />\r\n                                                    : \"\"}\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <h5> {item.user.name} </h5>\r\n                                        <p><i className=\"fas fa-map-marker-alt icon-color\"></i> {item.user.countryCode && item.user.countryCode.name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Fragment>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst serviceSelector = createSelector(\r\n    state => state.services,\r\n    services => services\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    serviceSelector,\r\n    (process, services) => ({\r\n        process,\r\n        services\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(OtherServices);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Link, Element } from 'react-scroll';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport { Main } from \"../../../layout\";\r\nimport { DocumentTitle } from \"../../../../helpers/DocumentTitle\";\r\nimport RatingReview from \"../../Service/partials/RatingReview\";\r\nimport { serviceActions } from \"../../../../common/redux/actions\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { PlaceOffer, ProposalReceived } from '../../Contract/partials/index';\r\nimport { ModuleHelper } from '../../../../helpers/module.helper';\r\nimport { globalService as gs, itemService } from '../../../../common/services';\r\nimport OtherServices from './partials/OtherServices';\r\nimport ReadMoreReact from \"read-more-react\";\r\nimport ReactImageGallery from 'react-image-gallery';\r\n\r\nconst cashSettlement = ['cash', 'both'];\r\nconst images = [\r\n    {\r\n        original: 'https://picsum.photos/id/1018/1000/600/',\r\n        thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n    },\r\n    {\r\n        original: 'https://picsum.photos/id/1015/1000/600/',\r\n        thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n    },\r\n    {\r\n        original: 'https://picsum.photos/id/1019/1000/600/',\r\n        thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n    },\r\n];\r\nclass PublicServiceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n            items: [],\r\n            id: null,\r\n            user_id: null,\r\n            servicesList: null,\r\n            setOffer: false,\r\n            favorite: {},\r\n            images: [\r\n\r\n            ],\r\n            renderFullscreenButton: (isFullscreen) => {\r\n                return (\r\n                    <button\r\n                        type='button'\r\n                        style={{ position: \"absolute\" }}\r\n                        className={\r\n                            `image-gallery-fullscreen-button${isFullscreen ? ' active' : ''}`}\r\n                        onClick={() => {\r\n                            let images = document.getElementsByClassName(\"image-gallery-image\")\r\n                            console.log(images)\r\n                            for (let i = 0; i < images.length; i++) {\r\n                                images[i].classList.toggle(\"Fulll\")\r\n                                // images[0].styles.height = \"auto\"\r\n                            }\r\n                            isFullscreen()\r\n                        }}\r\n                    >abc</button>\r\n                )\r\n            }\r\n        };\r\n        this.initilizeState = this.state;\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { match } = this.props;\r\n        const id = match.params.id;\r\n        this.setState({ id: id ? id : null });\r\n        this.service(id);\r\n        // console.log(this.props)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { match } = this.props;\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            const id = match.params.id;\r\n            this.setState({ id: id ? id : null });\r\n            if (id !== prevProps.match.params.id) {\r\n                this.service(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState(this.initilizeState);\r\n\r\n    }\r\n\r\n    service = (id) => {\r\n        const { dispatch, authentication } = this.props;\r\n        id && itemService.service(\"GET\", null, { item_id: id }).then(res => {\r\n            if (res.model) {\r\n                let item = res.model;\r\n                this.setState({ item: item }, () => {\r\n                    this.makingImagesArray(this.state.item)\r\n                });\r\n                if (this.state.user_id !== item.user_id) {\r\n                    dispatch(serviceActions.index(\"GET\", null, { user_id: item.user_id }));\r\n                    this.setState({ user_id: item.user_id });\r\n                }\r\n                const loginUser = authentication.authentication.user;\r\n                itemService.service(\"GET\", null, { user_id: loginUser.id }).then(responce => {\r\n                    let servicesList = responce.items;\r\n                    this.setState({ servicesList })\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    // toggleClass=(id)=>{\r\n    //     for(let i = 0; i < 4; i++){\r\n    //         if(id !== i){\r\n    //             document.getElementById(`button${i}`).className = \"a\"\r\n    //         }else{\r\n    //             console.log(document.getElementById(`button${i}`))\r\n    //             document.getElementById(`button${i}`).className = \"active\"\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    makingImagesArray = (item) => {\r\n        let images = []\r\n        if (item) {\r\n            let images2 = item.media.image\r\n            if (images2) {\r\n                for (let i = 0; i < images2.length; i++) {\r\n                    let obj = {\r\n                        original: images2[i].path,\r\n                        thumbnail: images2[i].thumb,\r\n                    }\r\n                    images.push(obj)\r\n                }\r\n                console.log(images2)\r\n                this.setState({\r\n                    images\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderCustomControls() {\r\n        console.log(\"a\")\r\n        // return <a href='' className='image-gallery-custom-action' onClick={()=>console.log(\"a\")}/>\r\n    }\r\n\r\n    offerOpen = () => {\r\n        this.setState({\r\n            setOffer: true\r\n        })\r\n    };\r\n\r\n\r\n    offerClose = () => {\r\n        this.setState({\r\n            setOffer: false\r\n        })\r\n    };\r\n\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userFavorite\": {\r\n                favorite_id: item.id,\r\n                moduleId: \"UserService\"\r\n            }\r\n        };\r\n\r\n        let method = (item.is_favorite) ? \"DELETE\" : \"POST\";\r\n        let param = (item.is_favorite) ? { item_id: item.is_favorite } : null;\r\n        let action = (item.is_favorite) ? \"remove\" : \"add\";\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to ${action}`,\r\n            message: `Are you sure you want to ${action} this service to your favorites list?`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(method, params, param)\r\n                            .then(response => {\r\n                                if (method === \"POST\") dispatch(alertSelectors.success(\"You have successfully selected a favorite.\"));\r\n                                if (method === \"DELETE\") dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                item.is_favorite = (method === \"POST\") ? response.model.id : false;\r\n                                this.setState({ favorite: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { item, setOffer, servicesList } = this.state;\r\n        console.log(this.props)\r\n        const { history } = this.props;\r\n        const showSendOfferButton = item && !gs.isOwner(item.user_id) && (\r\n            ((item.settlement === 'exchange') && (servicesList && servicesList.length > 0)) || cashSettlement.includes(item.settlement));\r\n\r\n        return (item && <Main history={history}>\r\n            <div className=\"individual-service bg-body\">\r\n                <DocumentTitle title={item && item.title} />\r\n                <div className=\"bottom-shadow w-100 float-left\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"head\">{item && item.title}\r\n                                    {this.props.private && item.received_offers && <div className=\"auction d-flex align-items-center\">\r\n                                        <div className=\"offer\">\r\n                                            <Link className=\"btn btn-sm btn-outline-primary\" to=\"offers_received\" smooth={true} duration={1000}>Offers Received ({item.received_offers})</Link>\r\n                                        </div>\r\n                                    </div>}\r\n                                </h1>\r\n                                <div className=\"d-flex align-items-center flex-wrap mb-3 row mb-lg-4 headings\">\r\n                                    <div className=\"col d-flex align-items-center flex-wrap\">\r\n                                        {item && !gs.isOwner(item.user_id) &&\r\n                                            <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                                {(item && item.is_favorite !== false) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                                    <i className=\"far fa-heart\"></i>}\r\n                                            </IconButton>\r\n                                        }\r\n\r\n                                        <div className=\"sold pr-1\">\r\n                                            <i className=\"far fa-chart-bar\"></i> {item && item.proposal_count} times Booked\r\n                                        </div>\r\n                                        <div className=\"sold\">\r\n                                            <i className=\"fas fa-cubes\"></i> {`${item && item.category.title}`}\r\n                                        </div>\r\n                                        <div className=\"price\">{(item && item.budget === null) ? <small>Not Set</small> : `$${item && item.budget}`}</div>\r\n                                    </div>\r\n                                    {showSendOfferButton &&\r\n                                        <div className=\"send-offer\">\r\n                                            {<button onClick={this.offerOpen} className=\"btn btn-info\">Send Offer</button>}\r\n                                        </div>\r\n                                    }\r\n                                    {item && setOffer && <PlaceOffer open={setOffer} item={item} item_id={item.id} moduleId={ModuleHelper.UserService} servicesList={servicesList} offerClose={this.offerClose} title={`Send Offer`} buttonTitle={`Send Offer`} isService={true} />}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div class=\"col-lg-8 col-md-7 col-sm-6 col-xs-12\">\r\n                                {/* {(item && item.media.image) &&\r\n                                    <Fragment>\r\n                                        <AliceCarousel className=\"mb-3\"\r\n                                            dotsDisabled={true}\r\n                                            buttonsDisabled={true}\r\n                                            slideToIndex={1}\r\n                                            fadeOutAnimation={true}\r\n                                            items={item && item.media.image.map((img) => (<div key={img.id} className=\"item\"><img src={img.path} alt=\"Gallery\" className=\"img-fluid\" /></div>))}\r\n                                            ref={(el) => (this.Carousel = el)}\r\n                                        />\r\n                                        <nav className=\"d-flex galleryThumb mb-3\">{item && item.media.image.map((thumb, i) => (<div className=\"thumb\" key={`drr${i}`} onClick={() => this.Carousel.slideTo(i)}><img src={thumb.thumb} alt=\"Gallery\" className=\"img-fluid\" /></div>))}</nav>\r\n                                    </Fragment>\r\n                                }\r\n                                {(item && !item.media.image) && <img src=\"/images/no-image.jpg\" alt=\"Not Found\" className=\"img-fluid\" />} */}\r\n                                {this.state.images.length ?\r\n                                    <ReactImageGallery\r\n                                        // useBrowserFullscreen={false} disableKeyDown={true} \r\n                                        // renderFullscreenButton={(ev)=>this.state.renderFullscreenButton(ev)} \r\n                                        slideOnThumbnailOver={true} lazyLoad={true}\r\n                                        items={this.state.images}\r\n                                        showPlayButton={false}\r\n                                        thumbnailPosition=\"left\"\r\n                                    />\r\n                                    :\r\n                                    <img src=\"/images/no-image.jpg\" alt=\"Not Found\" className=\"img-fluid\" />\r\n                                }\r\n                            </div>\r\n                            {item &&\r\n                                // <div className=\"col-md-4 col-12\">\r\n                                //     <div className=\"border profile px-0\">\r\n                                //         <figure className=\"text-center px-3\">\r\n                                //             <div className=\"pic\">\r\n                                //                 <LazyLoadImage alt=\"image\" className=\"w-auto rounded-circle\" width=\"130\" height=\"130\"\r\n                                //                     src={item.user.avatar} effect=\"blur\" />\r\n                                //                 {/* <img src={'/images/badge.png'} alt=\"Badge\" className=\"badge\" /> */}\r\n                                //             </div>\r\n                                //             <figcaption>\r\n                                //                 {<h4><NavLink to={`/user/public/about/${item.user_id}`}>{item.user.name}</NavLink></h4>}\r\n                                //                 <h5>\r\n                                //                     {item.user && item.user.countryCode && item.user.countryCode.name}\r\n                                //                 </h5>\r\n                                //                 <p>Since {item && item.user.since}</p>\r\n                                //             </figcaption>\r\n                                //         </figure>\r\n                                //         <hr />\r\n                                //         <ul className=\"social-login nav nav-pills nav-justified mb-3 px-3\">\r\n                                //             <li className=\"nav-item verified\"><small>Verified : {item.user.isVerified ? \"Yes\" : \"No\"}</small></li>\r\n                                //             {item.user.userProfilePlatforms && item.user.userProfilePlatforms.map((platform) =>\r\n                                //                 (<li className=\"nav-item\" key={platform.slug}><NavLink to={platform.link}><i className={`fab ${platform.icon}`}></i></NavLink></li>))}\r\n                                //         </ul>\r\n                                //         <hr />\r\n                                //         <div className=\"text px-3\">\r\n                                //             {item.user.title}\r\n                                //         </div>\r\n                                //         <div className=\"info d-flex px-3\">\r\n                                //             <i className=\"far fa-question-circle mr-2\"></i>\r\n                                //             <ReadMoreReact className=\"custom-description\" text={item.user.about && item.user.about} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n                                //         </div>\r\n                                //     </div>\r\n                                // </div>\r\n                                <div class=\"col-lg-4 col-md-5 col-sm-8 col-xs-12\">\r\n                                    <div class=\"card-box text-center\">\r\n                                        <div class=\"clearfix\"></div>\r\n                                        <div class=\"member-card\">\r\n                                            <h3>{this.props.private ? \"My\" : \"Client's\"} profile</h3>\r\n                                            <div class=\"thumb-xl member-thumb m-b-10 center-block\">\r\n                                                <LazyLoadImage alt=\"image\" class=\"img-circle img-thumbnail\" src={item && item.user.avatar} effect=\"blur\" />\r\n                                                {/* <img src={item && item.user.avatar} class=\"img-circle img-thumbnail\" alt=\"profile-image\" /> */}\r\n                                                {/* <i class=\"fa fa-star member-star text-success\" title=\"verified user\"></i> */}\r\n                                            </div>\r\n                                            <h5><NavLink to={`/user/public/about/${item && item.user.id}`}>{item && item.user.name}</NavLink></h5>\r\n                                            <h4>\r\n                                                {item.user && item.user.countryCode && item.user.countryCode.name}\r\n                                            </h4>\r\n                                            <p>Since {item && item.user.since}</p>\r\n                                            <div className=\"text\">\r\n                                                {item.user.title}\r\n                                            </div>\r\n                                            <div className=\"info\">\r\n                                                <ReadMoreReact className=\"custom-description\" text={item.user.about && item.user.about} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-100 float-left pt-lg-4 pt-3 BottomView\">\r\n                    <div className=\"container\">\r\n                        {/* <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <nav className=\"nav nav-list\">\r\n                                    <Link className=\"nav-link\" to=\"description\" smooth={true} duration={1000}><button id=\"button0\" >Description</button></Link>\r\n                                    <Link className=\"nav-link\" to=\"portfolio\" smooth={true} duration={1000}><button id=\"button1\" >Portfolio</button></Link>\r\n                                    <Link className=\"nav-link\" to=\"skills\" smooth={true} duration={1000}><button id=\"button2\" >Skills</button></Link>\r\n                                    <Link className=\"nav-link\" to=\"rating_review\" smooth={true} duration={1000}><button id=\"button3\" >Rating & Review</button></Link>\r\n                                </nav>\r\n                            </div>\r\n                        </div> */}\r\n                        <div className=\"row bottomViewInside\">\r\n                            {/* <div className=\"col-12 bottomViewInside\"> */}\r\n\r\n                            <Element className=\"description col-lg-7 col-md-7 col-sm-6 col-xs-12\" name=\"description\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"card-text\">\r\n                                        <h5 className=\"card-title\">Description</h5>\r\n                                        <div className=\"custom-description\" dangerouslySetInnerHTML={{ __html: item && item.description }}></div>\r\n                                    </div>\r\n                                    <div className=\"SkillsDiv\">\r\n                                        <h5 className=\"card-title\">Skills</h5>\r\n                                        <div className=\"card-text\">\r\n                                            {item && item.skills.map((skill) =>\r\n                                                <div className=\"badge badge-pill badge-secondary\" key={skill.id}>{skill.title}</div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Element>\r\n\r\n                            <Element className=\"portfolio col-lg-5 col-md-5 col-sm-8 col-xs-12\" name=\"portfolio\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Portfolio</h5>\r\n                                    <div className=\"card-text pt-4\">\r\n                                        <div className=\"row\">\r\n                                            {console.log(item)}\r\n                                            {(item && item.media.docs && item.media.docs) ? '' : <div className=\"col-12\">No data yet</div>}\r\n                                            {item && item.media.docs && item.media.docs.map((doc) =>\r\n                                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-12\" key={doc.id}>\r\n                                                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${doc.path}`} download>\r\n                                                        <div className=\"docs text-center mb-4\">\r\n                                                            {(doc.mimetype === 'application/pdf') ? <i className=\"far fa-file-pdf fa-5x\"></i>\r\n                                                                : (doc.mimetype === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') ?\r\n                                                                    <i className=\"far fa-file-word fa-5x col-lg-2 col-md-2 col-sm-12 col-xs-12\"></i>\r\n                                                                    // : (doc.mimetype === 'txt') ? <i className=\"far fa-file-alt fa-5x\"></i>\r\n                                                                    // : (doc.mimetype === 'powerpoint') ? <i className=\"far fa-file-powerpoint fa-5x\"></i>\r\n                                                                    // : (doc.mimetype === 'exel') ? <i className=\"far fa-file-excel fa-5x\"></i>\r\n                                                                    // : (doc.mimetype === 'archive') ? <i className=\"far fa-file-archive fa-5x\"></i>\r\n                                                                    : <i className=\"far fa-file fa-5x\"></i>}\r\n                                                            <h6 className=\"text-truncate1 col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${doc.path}`} download>{doc.filename}</a>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </a>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Element>\r\n\r\n                            {/* <Element className=\"card skills col-lg-12 col-md-12 col-sm-12 col-xs-12\" name=\"skills\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Skills</h5>\r\n                                        <hr />\r\n                                        <div className=\"card-text\">\r\n                                            {item && item.skills.map((skill) =>\r\n                                                <div className=\"badge badge-pill badge-secondary\" key={skill.id}>{skill.title}</div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </Element> */}\r\n                            {!this.props.private &&\r\n                                <RatingReview item={item} moduleId={ModuleHelper.UserService} isShowDropdown={true} isShowAvgRating={true} />\r\n                            }\r\n                            {!this.props.private &&\r\n                                <OtherServices item={item} service_id={this.state.id} service={this.service} />\r\n                            }\r\n                            {this.props.private &&\r\n                                item && item.userItemProposals && <div name=\"offers_received\" className=\"card-body px-0\">\r\n                                    <h5 className=\"card-title px-3\">Offers Received ({item.received_offers})</h5>\r\n                                    <hr />\r\n                                    {<ProposalReceived results={item.userItemProposals} module={ModuleHelper.UserService} />}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst serviceSelector = createSelector(\r\n    state => state.services,\r\n    services => services\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector,\r\n    processSelector,\r\n    serviceSelector,\r\n    (authentication, process, services) => ({\r\n        authentication,\r\n        process,\r\n        services\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PublicServiceView);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Main } from '../../../layout';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { itemService, globalService as gs } from '../../../../common/services';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { PlaceOffer } from '../../Contract/partials';\r\nimport { ModuleHelper, commonHelper } from '../../../../helpers';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { FacebookShareButton, LinkedinShareButton, TwitterShareButton } from \"react-share\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n// import '../../../../assets/css/font-awesome.min.css';\r\n\r\n\r\n\r\nconst deadlineList = [\r\n    { id: 1, value: 'Up to 3 days' },\r\n    { id: 2, value: 'Up to 1 week' },\r\n    { id: 3, value: 'Up to 1 month' },\r\n    { id: 4, value: 'Up to 3 months' },\r\n    { id: 5, value: 'Up to 6 months' },\r\n    { id: 6, value: 'Up to 1 year' },\r\n];\r\nconst status_declined = 2;\r\nconst status_completed = 7;\r\n\r\nclass PublicJobView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n            id: null,\r\n            loading: null,\r\n            servicesList: null,\r\n            favorite: {},\r\n            setOffer: false,\r\n            proposalStatus: false,\r\n            proposal: null\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { match, dispatch, authentication } = this.props;\r\n        const id = match.params.id;\r\n        const user = authentication.authentication.user;\r\n        this.setState({ id: id ? id : null });\r\n        //dispatch(jobActions.index(\"GET\", null, { item_id: id }));\r\n        this.job(id);\r\n        itemService.proposal(\"GET\", null, { item_id: id, user_id: user.id, moduleId: 'UserItem' }).then(response => {\r\n            this.setState({ proposal: response.items[0] });\r\n        });\r\n        itemService.service(\"GET\", null, { user_id: user.id }).then(response => {\r\n            this.setState({ servicesList: response.items });\r\n        });\r\n    }\r\n\r\n    job = (id) => {\r\n        itemService.job(\"GET\", null, { item_id: id }).then(res => {\r\n            this.setState({ item: res.model, proposalStatus: res.model.proposalStatus });\r\n        });\r\n    };\r\n\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userFavorite\": {\r\n                favorite_id: item.id,\r\n                moduleId: \"UserItem\"\r\n            }\r\n        };\r\n\r\n        let method = (item.is_favorite) ? \"DELETE\" : \"POST\";\r\n        let param = (item.is_favorite) ? { item_id: item.is_favorite } : null;\r\n        let action = (item.is_favorite) ? \"remove\" : \"add\";\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to ${action}`,\r\n            message: `Are you sure to ${action} this favorite list`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(method, params, param)\r\n                            .then(response => {\r\n                                if (method === \"POST\") dispatch(alertSelectors.success(\"You have successfully selected a favorite.\"));\r\n                                if (method === \"DELETE\") dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                item.is_favorite = (method === \"POST\") ? response.model.id : false;\r\n                                this.setState({ favorite: item });\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    offerOpen = () => {\r\n        this.setState({\r\n            setOffer: true\r\n        })\r\n    };\r\n\r\n    offerClose = (event, type) => {\r\n        this.setState({\r\n            setOffer: false\r\n        });\r\n        this.setState(type);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { item, setOffer, proposalStatus, servicesList, proposal } = this.state;\r\n\r\n        console.log('proposal', proposal);\r\n        return (<Main>\r\n            <DocumentTitle title={item && item.title} />\r\n            {item && <PlaceOffer open={setOffer} item={item} item_id={item.id} servicesList={servicesList} moduleId={ModuleHelper.UserItem} offerClose={this.offerClose} title={`Place A Bid`} buttonTitle={`Submit proposal`} isJob={true} />}\r\n            {/* <div className=\"job-individual bg-body\">\r\n                <div className=\"container\">\r\n                    {(item && item.length === 0) ? <Redirect to={{ pathname: '/not-found' }} /> :\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-9 col-md-8 col-12\">\r\n                                <div className=\"card views mb-4\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"heading border-bottom mb-3\">\r\n                                            <h1>{item && item.title}</h1>\r\n                                            <h6 className=\"mb-3\">{item && item.category.parent ? item.category.parent.title + ',' : null} {item && item.category.title}</h6>\r\n                                            <div className=\"prices d-flex align-items-center\">\r\n                                                {item && item.settlement === 'cash' && <div className=\"price\">${item && item.budget}</div>} */}\r\n            {/*<div className=\"fixed badge badge-success text-capitalize\">{item && item.settlement}</div>*/}\r\n            {/* <div className=\"fixed badge badge-secondary text-capitalize\">{(item && item.settlement === 'both') ? 'Cash & Exchange' : item && item.settlement}</div>\r\n                                                {item && item.settlement === 'cash' &&\r\n                                                    <div className=\"cash badge badge-success text-capitalize\">{item && item.type}</div>}\r\n                                                {item && item.is_nda === 1 && <div className=\"cash badge badge-primary ml-1\">With NDA</div>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-start proposals mb-3\">\r\n                                            <div className=\"deadline w-20\">\r\n                                                <h6>Deadline</h6>\r\n                                                {item && item.deadline && deadlineList.map((el) => <Fragment key={`deadline${el.id}`}>\r\n                                                    {(parseInt(el.id) === parseInt(item.deadline)) ? el.value : ''}\r\n                                                </Fragment>)}\r\n                                            </div>\r\n                                            <div className=\"deadline w-20\">\r\n                                                <h6>Visiblity</h6> {gs.capitalize(item && item.visibility)}\r\n                                            </div>\r\n                                            <div className=\"deadline w-20\">\r\n                                                <h6>Published</h6> {(new Date(item && item.created_at * 1000)).toLocaleDateString('en-GB', {\r\n                                                    year: 'numeric',\r\n                                                    month: 'short',\r\n                                                    day: '2-digit'\r\n                                                })}\r\n                                            </div> */}\r\n            {/*<div className=\"deadline w-20\">*/}\r\n            {/*<h6>Proposals</h6> {item && item.proposal_count}*/}\r\n            {/*</div>*/}\r\n            {/* </div>\r\n                                        <div className=\"text\" dangerouslySetInnerHTML={{ __html: item && item.description }}></div>\r\n\r\n                                        <div className=\"chips mb-3\">\r\n                                            <h6 className=\"h6\">Skills</h6>\r\n                                            {(item && item.skills.length === 0) && 'Skills not found'}\r\n                                            {item && item.skills.map((skill) =>\r\n                                                <div className=\"badge badge-secondary\" key={skill.id}>{skill.title}</div>\r\n                                            )}\r\n                                        </div>\r\n                                        {(item && item.userItemLocations.length > 0) &&\r\n                                        <div className=\"chips mb-3\">\r\n                                            <h6 className=\"h6\">Freelancer Location Peferences</h6>\r\n                                            {item && item.userItemLocations && item.userItemLocations.map((location) =>\r\n                                                <div className=\"badge badge-secondary\" key={`location-${location.country_id}`}>{location.name}</div>\r\n                                            )}\r\n                                        </div>}\r\n\r\n                                        <div className=\"document\">\r\n                                            <h6 className=\"h6\">Portfolio</h6>\r\n                                            <div className=\"row padding-5\">\r\n                                                {item && item.media.docs && item.media.docs.map((doc) =>\r\n                                                    <div className=\"col-lg-2 col-md-3 col-sm-4 col-6\" key={doc.id}>\r\n                                                        <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                            <div className=\"d-flex align-items-center justify-content-center\" style={{height: '110px'}}>\r\n                                                                {(doc.mimetype === 'application/pdf') ?\r\n                                                                    <i className=\"far fa-file-pdf fa-3x text-info\"></i>\r\n                                                                    : (doc.mimetype === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') ?\r\n                                                                        <i className=\"far fa-file-word fa-3x text-info\"></i>\r\n                                                                        : <i className=\"far fa-file fa-3x text-info\"></i>}\r\n                                                            </div>\r\n                                                            <h6 className=\"text-truncate px-1\">\r\n                                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${doc.path}`} title={doc.filename} download><small>{doc.filename}</small></a>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                                {item && item.media.image && item.media.image.map((imag) =>\r\n                                                    <div className=\"col-lg-2 col-md-3 col-sm-4 col-6\" key={imag.id}>\r\n                                                        <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                            <img src={imag.thumb} alt={imag.filename} className=\"img-fluid w-100\" style={{ maxHeight: '108px', maxWidth: \"100%\" }} />\r\n                                                            <h6 className=\"text-truncate px-1\">\r\n                                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${imag.path}`} title={imag.filename} download><small>{imag.filename}</small></a>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {item && item.media.video && item.media.video.map((video) =>\r\n                                                    <div className=\"col-lg-2 col-md-3 col-sm-4 col-6\" key={video.id}>\r\n                                                        <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                            <video style={{ maxHeight: '170px', width: \"100%\" }} controls>\r\n                                                                <source src={video.path} type={video.type} />\r\n                                                                Your browser does not support the video tag.\r\n                                                            </video>\r\n                                                            <h6 className=\"text-truncate px-1\">\r\n                                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${video.path}`} title={video.filename} download><small>{video.filename}</small></a>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {(item && item.media.length === 0) && <div className=\"col-12\">Portfolio not found</div>}\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"card mb-4 questinList\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5>Service that I can exchange</h5>\r\n                                        <div className=\"row\">\r\n                                            {item && item.services.map((service) =>\r\n                                            <div className=\"col-lg-4 col-sm-6 col-12\" key={service.id}>\r\n                                                <div className=\"jobBox\">\r\n                                                    <div className=\"priview d-flex flex-wrap pb-0 border-bottom-0\">\r\n                                                        {(service.cover) && <div className=\"image\">\r\n                                                            <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={service.cover.thumb} effect=\"blur\" />\r\n                                                        </div>}\r\n                                                        <div className=\"caption\">\r\n                                                            <h4>\r\n                                                                {service.title}\r\n                                                            </h4>\r\n                                                            <div className=\"ratings d-flex align-items-center\">\r\n                                                                <small>({service.avg_rating})</small>\r\n                                                                <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                                    <Rating value={Math.floor(service.avg_rating)} readOnly />\r\n                                                                </Box>\r\n                                                            </div>\r\n                                                            <div className=\"price\">\r\n                                                                <span className=\"\">{service.budget}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"card mb-4 questinList\">\r\n                                    <div className=\"card-body\">\r\n                                        {(item && item.userItemQuestions.length === 0) && 'Questions not found'}\r\n                                        {item && item.userItemQuestions.map((question, index) =>\r\n                                            <div className=\"border-bottom\" key={question.id}>\r\n                                                <h5>Question {index + 1}</h5>\r\n                                                <p>{question.question}</p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-lg-3 col-md-4 col-12\">\r\n                                <div className=\"card mb-4 postBid\">\r\n                                    <div className=\"card-body\">\r\n                                        <h3>Submit Proposal</h3>\r\n                                        <div className=\"card-text mb-2\">Please ensure you fill out your profile before sending a proposal</div>\r\n\r\n                                        {(item && !gs.isOwner(item.user_id) && (proposalStatus === false) && (item.is_closed === 0) && !(proposal && proposal.status === status_declined)) &&\r\n                                            <div className=\"action mt-3\">\r\n                                                {<button className=\"btn btn-info btn-block\" onClick={this.offerOpen}>Send Proposal</button>}\r\n                                            </div>\r\n                                        }\r\n                                        {((item && proposalStatus === true) && !(proposal && parseInt(proposal.status) === parseInt(status_completed)) && !(proposal && parseInt(proposal.status) === parseInt(status_declined))) && <button className=\"btn btn-info btn-block mt-3\" >Proposal in Process</button>}\r\n                                        {((item && proposalStatus === true) && (proposal && parseInt(proposal.status) === parseInt(status_completed))) && <button className=\"btn btn-info btn-block mt-3\" >Contract Completed</button>}\r\n                                        {((item && !gs.isOwner(item.user_id)) && (proposal && parseInt(proposal.status) === parseInt(status_declined))) && <button className=\"btn btn-info btn-block mt-3\" >Proposal Declined</button>}\r\n                                        <ul className=\"social-login nav justify-content-center\">\r\n                                            <li className=\"nav-item verified\">\r\n                                                <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item && item)}>\r\n                                                    {(item && item.is_favorite) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                                                        <i className=\"far fa-heart\"></i>}\r\n                                                </IconButton>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <FacebookShareButton\r\n                                                    url={`${gs.rootUrl}/user/public/job/view/${item && item.id}`}\r\n                                                    quote={item && item.title}\r\n                                                    className=\"share-button\">\r\n                                                    <IconButton className=\"favorite\" title=\"Facebook\">\r\n                                                        <i className=\"fab fab fa-facebook-f\"></i>\r\n                                                    </IconButton>\r\n                                                </FacebookShareButton>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <TwitterShareButton\r\n                                                    url={`${gs.rootUrl}/user/public/job/view/${item && item.id}`}\r\n                                                    title={item && item.title}\r\n                                                    className=\"share-button\">\r\n                                                    <IconButton className=\"favorite\" title=\"Twitter\">\r\n                                                        <i className=\"fab fa-twitter\"></i>\r\n                                                    </IconButton>\r\n                                                </TwitterShareButton>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <LinkedinShareButton\r\n                                                    url={`${gs.rootUrl}/user/public/job/view/${item && item.id}`}\r\n                                                    windowWidth={750}\r\n                                                    windowHeight={600}\r\n                                                    className=\"share-button\">\r\n                                                    <IconButton className=\"favorite\" title=\"Linkedin\">\r\n                                                        <i className=\"fab fab fa-linkedin-in\"></i>\r\n                                                    </IconButton>\r\n                                                </LinkedinShareButton>\r\n                                            </li> */}\r\n            {/*{item && item.user.userProfilePlatforms && item.user.userProfilePlatforms.length > 0 &&\r\n                                                item.user.userProfilePlatforms.map((platform) => (<li className=\"nav-item\" key={`platform-${platform.id}`}>\r\n                                                    <IconButton className=\"favorite\" title={platform.title}>\r\n                                                        <i className={`fab ${platform.icon}`}></i>\r\n                                                    </IconButton>\r\n                                                </li>))}*/}\r\n            {/* </ul>\r\n                                    </div>\r\n                                </div>\r\n                                {item && <div className=\"card mb-4 buyerInfo\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h5 className=\"card-title text-black pb-2\">Client's Profile</h5>\r\n                                        <div className=\"image\">\r\n                                            {gs.isOwner(item.user.id) && <NavLink to={`/user/public/about/${item.user.id}`}>\r\n                                                <img className=\"rounded-circle\" src={item && item.user.avatar} alt=\"Images\" width=\"100\" height=\"100\" /></NavLink>}\r\n                                        </div>\r\n                                        <div className=\"text mb-0\">\r\n                                            {gs.isOwner(item.user.id) && <h4 style={{fontSize: '16px'}}><NavLink to={`/user/public/about/${item.user.id}`}>{item.user.name}</NavLink></h4>}\r\n                                            <div className=\"rating d-flex align-items-center justify-content-center\">\r\n                                                {item.user.avg_rating > 0 && <small>({parseFloat(item.user.avg_rating)})</small>}\r\n                                                <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                    <Rating value={parseFloat(item.user.avg_rating)} readOnly size=\"small\" />\r\n                                                </Box>\r\n                                                <small className=\"count\">({item.proposal_count})</small>\r\n                                            </div>\r\n                                            <h6>{item.user.title} <br />\r\n                                                {item.user && commonHelper.address(item.user)}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div> */}\r\n\r\n            <section class=\"jobpost\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"card-box-profile\">\r\n                            <div class=\"col-lg-12 col-md-12 col-sm-6 col-xs-12\">\r\n\r\n                                <div class=\"row bottom-sec\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <h3>{item && item.title}</h3>\r\n                                        <h4>{item && item.category.parent && item.category.parent.title} - {item && item.category.title}</h4>\r\n\r\n                                        <div class=\"col-lg-12\">\r\n                                            <hr class=\"small-hr\" />\r\n                                        </div>\r\n\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Posted </h5>\r\n                                            <p>{(new Date(item && item.created_at * 1000)).toLocaleDateString('en-GB', {\r\n                                                year: 'numeric',\r\n                                                month: 'short',\r\n                                                day: '2-digit'\r\n                                            })}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Location </h5>\r\n                                            <p><i class=\"fas fa-map-marker-alt\"></i>{item && item.user.countryCode && item.user.countryCode.name}</p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Budget </h5>\r\n                                            <p>{item && item.budget}</p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Duration </h5>\r\n                                            <p>{item && item.deadline && deadlineList.map((el) => <Fragment key={`deadline${el.id}`}>\r\n                                                {(parseInt(el.id) === parseInt(item.deadline)) ? el.value : ''}\r\n                                            </Fragment>)}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <h5> Proposals </h5>\r\n                                            <p>{item && item.proposal_count}</p>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2 buttton\">\r\n                                            {(item && !gs.isOwner(item.user_id) && (proposalStatus === false) && (item.is_closed === 0) && !(proposal && proposal.status === status_declined)) &&\r\n                                                <a href=\"#\" onClick={this.offerOpen} class=\"kafe-btn kafe-btn-mint-small\"><i class=\"fa fa-align-left\"></i> Send Proposal</a>\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section class=\"profile-details\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-lg-7 col-md-7 col-sm-6 col-xs-12\">\r\n                            <div class=\"card-box-profile-details\">\r\n\r\n                                <div class=\"description-profile\">\r\n\r\n                                    <ul class=\"tr-list resume-info\">\r\n\r\n                                        <li>\r\n                                            <div class=\"icon\">\r\n                                                <p class=\"tr-title\"> Job Description</p>\r\n                                            </div>\r\n                                            <div className=\"media-body\" dangerouslySetInnerHTML={{ __html: item && item.description }}></div>\r\n                                            <div className=\"chips mb-3\">\r\n                                                <h6 className=\"h6\">Skills</h6>\r\n                                                {(item && item.skills.length === 0) && 'Skills not found'}\r\n                                                {item && item.skills.map((skill) =>\r\n                                                    <div className=\"badge badge-secondary\" key={skill.id}>{skill.title}</div>\r\n                                                )}\r\n                                            </div>\r\n                                            {(item && item.userItemLocations.length > 0) &&\r\n                                                <div className=\"chips mb-3\">\r\n                                                    <h6 className=\"h6\">Freelancer Location Peferences</h6>\r\n                                                    {item && item.userItemLocations && item.userItemLocations.map((location) =>\r\n                                                        <div className=\"badge badge-secondary\" key={`location-${location.country_id}`}>{location.name}</div>\r\n                                                    )}\r\n                                                </div>}\r\n                                        </li>\r\n\r\n\r\n                                    </ul>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            {item && item.userItemQuestions &&\r\n                                <div class=\"work\">\r\n\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"icon\">\r\n                                            <p class=\"tr-title\">Questions</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"questionDiv\">\r\n                                        {(item && item.userItemQuestions.length === 0) && 'Questions not found'}\r\n                                        {item && item.userItemQuestions.map((question, index) =>\r\n                                            <div className=\"border-bottom\" key={question.id}>\r\n                                                <h5>Question {index + 1}</h5>\r\n                                                <p>{question.question}</p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-5 col-md-5 col-sm-8 col-xs-12\">\r\n\r\n                            <div class=\"stats\">\r\n                                <div class=\"row\">\r\n                                    <h5>Service that I can exchange </h5>\r\n                                    <div style={{ width: \"100%\" }} className=\"row\">\r\n                                        {item && item.services.map((service) =>\r\n                                            <div className=\"col-lg-12\" key={service.id}>\r\n                                                <div className=\"jobBox\">\r\n                                                    <div className=\"priview d-flex flex-wrap pb-0 border-bottom-0\">\r\n                                                        {(service.cover) && <div className=\"image\">\r\n                                                            <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={service.cover.thumb} effect=\"blur\" />\r\n                                                        </div>}\r\n                                                        <div className=\"caption\">\r\n                                                            <h4>\r\n                                                                {service.title}\r\n                                                            </h4>\r\n                                                            <div className=\"ratings d-flex align-items-center\">\r\n                                                                <small>({service.avg_rating})</small>\r\n                                                                <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                                    <Rating value={Math.floor(service.avg_rating)} readOnly />\r\n                                                                </Box>\r\n                                                            </div>\r\n                                                            <div className=\"price\">\r\n                                                                <span className=\"\">{service.budget}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* <div class=\"stats\">\r\n                                <div class=\"row\">\r\n                                    <h5>Activity</h5>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>3</h6>\r\n                                        <p class=\"bottom\">Proposals</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>0</h6>\r\n                                        <p class=\"bottom\">Interviewing</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>0</h6>\r\n                                        <p class=\"bottom\">Hired</p>\r\n                                    </div>\r\n                                    <p class=\"bottom\"> Last viewed by client: <b> 3 days ago </b></p>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div class=\"card-box text-center\">\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"member-card\">\r\n                                    <h3>Client's profile</h3>\r\n                                    <div class=\"thumb-xl member-thumb m-b-10 center-block\">\r\n                                        <LazyLoadImage alt=\"image\" class=\"img-circle img-thumbnail\" src={item && item.user.avatar} effect=\"blur\" />\r\n                                        {/* <img src={item && item.user.avatar} class=\"img-circle img-thumbnail\" alt=\"profile-image\" /> */}\r\n                                        {/* <i class=\"fa fa-star member-star text-success\" title=\"verified user\"></i> */}\r\n                                    </div>\r\n                                    <h5><NavLink to={`/user/public/about/${item && item.user.id}`}>{item && item.user.name}</NavLink></h5>\r\n\r\n                                    {/* <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <h4 class=\"top\">1</h4>\r\n                                            <p class=\"bottom\">Jobs Posted</p>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <h4 class=\"top\">$0.00</h4>\r\n                                            <p class=\"bottom\">Spent</p>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </Main>);\r\n    }\r\n}\r\nconst jobSelector = createSelector(\r\n    state => state.jobs,\r\n    jobs => jobs\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    jobSelector,\r\n    authenticationSelector,\r\n    (jobs, authentication) => ({\r\n        jobs, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(PublicJobView);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst FavoriteNavbar = () => {\r\n    return (\r\n        <div className=\"public-navbar card mb-4\">\r\n            <div className=\"card-body\">\r\n                <nav className=\"nav\">\r\n                    <NavLink className=\"nav-link\" to={`/user/favorite/services`}>Services</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/user/favorite/jobs`}>Jobs</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/user/favorite/freelancers`}>Freelancers</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/user/favorite/co-founders`}>Co-founders</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FavoriteNavbar;","import React, { Component } from 'react';\r\nimport { Main } from '../../../layout';\r\nimport FavoriteNavbar from './partials/FavoriteNavbar';\r\n\r\nclass FavoriteLayout extends Component {\r\n    render() {\r\n        const { children } = this.props;\r\n        return (<Main>\r\n            <div className=\"bg-body my-favorites\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"pb-2 heading\">My Favorites</h1>\r\n                            <FavoriteNavbar />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            { children }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default FavoriteLayout;","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport FavoriteLayout from './FavoriteLayout';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { favoriteActions } from '../../../../common/redux/actions';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\nimport { globalService as gs, itemService } from '../../../../common/services';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport ReadMoreReact from \"read-more-react\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nclass FavoriteJobs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                moduleId: \"UserItem\",\r\n                page: 1,\r\n            },\r\n            favorite: null,\r\n        };\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const { dispatch } = this.props;\r\n        //favorite.jobs === null && dispatch(favoriteActions.favorites(\"GET\", null, this.state.formField, 'jobs'));\r\n        dispatch(favoriteActions.favorites(\"GET\", null, this.state.formField, 'jobs'));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //const { dispatch } = this.props;\r\n        //dispatch(favoriteActions.clear());\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        if (page !== 1) {\r\n            const { dispatch } = this.props;\r\n            const formField = { ...this.state.formField };\r\n            formField[\"page\"] = page;\r\n            dispatch(favoriteActions.favorites(\"GET\", null, formField, 'jobs'));\r\n        }\r\n    };\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            title: 'Please confirm to remove',\r\n            message: 'Are you sure to remove this favorite list',\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(\"DELETE\", null, { item_id: item.id })\r\n                            .then(response => {\r\n                                dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                dispatch(favoriteActions.remove(item.id, 'jobs'));\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { favorite, process } = this.props;\r\n        let results = (favorite && favorite.jobs) ? favorite.jobs.items : null;\r\n        return (<FavoriteLayout>\r\n            <DocumentTitle title=\"My Favorites Jobs\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    {process.loading ? <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={2} width={700} /> : <Fragment>\r\n\r\n                        {(results && results.length === 0) && <div className=\"card service-box\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                    <div className=\"inner\">\r\n                                        <figure>\r\n                                            <img src=\"/images/not-found/My-Services.png\" alt=\"Not found\" width=\"100\" />\r\n                                        </figure>\r\n                                        <h5>You don’t have any favorite jobs</h5>\r\n                                        <p className=\"title\">This is where you’ll see all your favorite jobs</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        {/* {results && results.map((item) =>\r\n                            <div className=\"jobBox card mb-4\" key={Math.random() * (+30 - +4)}>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"caption\">\r\n                                        <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                            <i className=\"fas fa-heart text-info\"></i>\r\n                                        </IconButton>\r\n                                        <h3><NavLink to={`/user/public/job/view/${item.item && item.item.id}`}>{item.item && item.item.title}</NavLink>  */}\r\n                        {/* <small>{item.item && item.item.category.title}</small> */}\r\n                        {/* </h3>\r\n                                    </div>\r\n                                    <div className=\"prices d-flex align-items-center\">\r\n                                        {item.item && item.item.settlement === 'cash' && <div className=\"price\">${item.item && item.item.budget}</div>} */}\r\n                        {/*<div className=\"fixed badge badge-secondary text-capitalize\">{item.item && item.item.settlement}</div>*/}\r\n                        {/* <div className=\"fixed badge badge-secondary text-capitalize\">{(item.item && item.item.settlement === 'both') ? 'Cash & Exchange' : item.item && item.item.settlement}</div>\r\n                                        {item.item && item.item.settlement === 'cash' &&\r\n                                        <div className=\"cash badge badge-success text-capitalize\">{item.item && item.item.type}</div>} */}\r\n\r\n                        {/* <div className=\"price\">{item.item && item.item.budget}</div>\r\n                                        <div className=\"fixed badge badge-secondary text-capitalize\">{item.item && item.item.type}</div>\r\n                                        <div className=\"cash badge badge-success text-capitalize\">{item.item && item.item.settlement}</div> */}\r\n                        {/* </div>\r\n                                    <div className=\"priview d-flex flex-wrap pb-0\"></div> */}\r\n                        {/*<div className=\"d-flex align-items-center proposals mb-3\">*/}\r\n                        {/*<div className=\"deadline\">*/}\r\n                        {/*<h6>Project Deadline</h6> {`${item.item && item.item.duration - 4} - ${item.item && item.item.duration}`} Weeks*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"deadline\">*/}\r\n                        {/*<h6>Visiblity</h6> {item.item && item.item.visibility}*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"deadline\">*/}\r\n                        {/*<h6>Published on</h6> {(new Date(item.item && item.item.created_at*1000)).toLocaleDateString('en-GB', {*/}\r\n                        {/*year: 'numeric',*/}\r\n                        {/*month: 'short',*/}\r\n                        {/*day: '2-digit'*/}\r\n                        {/*})}*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"deadline\">*/}\r\n                        {/*<h6>Proposals</h6> {item.item && item.item.proposal_count}*/}\r\n                        {/*</div>*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"text\" dangerouslySetInnerHTML={{ __html: gs.truncateString(item && item.item && item.item.description, 400) }}></div>*/}\r\n                        {/* <ReadMoreReact className=\"text\" text={gs.html2text(item && item.item && item.item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n                                    <div className=\"chips\">\r\n                                        {item.item && item.item.skills.map((skill) =>\r\n                                            <div className=\"badge badge-secondary\" key={skill.id}>{skill.title}</div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )} */}\r\n                        {results && results.map((item) =>\r\n                            <div class=\"job\">\r\n\r\n                                <div class=\"row top-sec\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div className=\"topLabel\">\r\n                                            {/* {item.settlement && item.settlement === 'cash' && <div className=\"price\">${item.budget}</div>} */}\r\n                                            <div className=\"cashAndExchange\">{(item.item.settlement === 'both') ? 'Cash & Exchange' : item.item.settlement}</div>\r\n                                            {/* {item.item.settlement && item.item.settlement === 'cash' && <div className=\"label label-primary\">{item.item.type}</div>} */}\r\n                                        </div>\r\n                                        <div class=\"col-lg-12 col-xs-12\">\r\n                                            <h4><a href=\"jobpost.html\"><NavLink to={`/user/public/job/view/${item.item.id}`}>{item.item.title}</NavLink></a>\r\n                                            </h4>\r\n                                            {item.item.category.parent ?\r\n                                                <h5>{item.item.category && item.item.category.parent && item.item.category.parent.title} <small>- {item.item.category.title}</small></h5>\r\n                                                :\r\n                                                <h5>{item.item.category.title}<small></small></h5>\r\n                                            }\r\n\r\n                                            {item.item.settlement === 'both' || item.item.settlement === 'cash' ?\r\n                                                <div className=\"prices d-flex align-items-center\">\r\n                                                    {/* {item.item.settlement && item.item.settlement === 'cash' && <div className=\"price\">${item.item.budget}</div>} */}\r\n                                                    <div className=\"\">Cash</div>\r\n                                                    {/* {item.item.settlement && item.item.settlement === 'cash' && <div className=\"\">{item.item.type}</div>} */}\r\n                                                </div>\r\n                                                : null}\r\n\r\n                                            {item.item.type === \"hourly\" ?\r\n                                                <h6>{item.item.budget} {item.item.budget ? \"$$ per hour\" : \"\"}</h6>\r\n                                                :\r\n                                                <h6>{item.item.budget} $$ fixed</h6>\r\n                                            }\r\n                                            {/* <p><small>Posted 14 Hours ago</small></p> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row mid-sec\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"col-lg-12\">\r\n                                            {/* <hr class=\"small-hr\" /> */}\r\n                                            {/* <p>Description of every page/module: I have a PSD ebay store and listing design in photoshop that needs to be sliced and coded for eBay to be mobile responsive. Description of requirements/features: Mobile Responsive Ebay store and listing design...</p> */}\r\n                                            <ReadMoreReact className=\"text\" text={gs.html2text(item && item.item.description)} min={120} ideal={150} max={200} readMoreText={'Read More'} />\r\n\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n                                                {item.item.skills.length &&\r\n                                                    item.item.skills.map((a, index) =>\r\n                                                        <span key={index} class=\"label label-success\">{a.title}</span>\r\n                                                    )\r\n                                                }\r\n                                                {/* <span class=\"label label-success\">HTML 5</span>\r\n                                    <span class=\"label label-success\">CSS3</span>\r\n                                    <span class=\"label label-success\">PHP 5.4</span>\r\n                                    <span class=\"label label-success\">Mysql</span>\r\n                                    <span class=\"label label-success\">Bootstrap</span> */}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {item.item.settlement === 'both' || item.item.settlement === 'exchange' ?\r\n                                    <div class=\"row mid-sec\">\r\n                                        <div class=\"col-lg-12\">\r\n                                            <div class=\"col-lg-12\">\r\n                                                <hr class=\"small-hr\" />\r\n                                                <div className=\"prices d-flex align-items-center\">\r\n                                                    {/* {item.item.settlement && item.item.settlement === 'cash' && <div className=\"price\">${item.item.budget}</div>} */}\r\n                                                    <div className=\"\">{(item.item.settlement === 'both') ? 'Exchange' : item.item.settlement}</div>\r\n                                                    {/* {item.item.settlement && item.item.settlement === 'cash' && <div className=\"\">{item.item.type}</div>} */}\r\n                                                </div>\r\n                                                \r\n                                                {item.item.services ?\r\n                                                    (item.item.services.length > 0) &&\r\n                                                    <div className=\"priview d-flex flex-wrap\">\r\n                                                        {(item.item.services[0].cover) &&\r\n                                                            <div className=\"image\">\r\n                                                                {item.item.services[0].cover.thumb &&\r\n                                                                    <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.item.services[0].cover.thumb} effect=\"blur\" />\r\n                                                                }\r\n                                                            </div>\r\n                                                        }\r\n                                                        <div className=\"caption\">\r\n                                                            <h5>\r\n                                                                {item.item.services[0].title}\r\n                                                                {(item.item.services.length > 1) && <NavLink to={`/user/public/job/view/${item.item.id}`} className=\"ml-3 text-info\">+{item.item.services.length - 1} more </NavLink>}\r\n                                                            </h5>\r\n                                                            <div className=\"ratings d-flex align-items-center\">\r\n                                                                <p class=\"p-star\">\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                </p>\r\n                                                            </div>\r\n                                                            <p>\r\n                                                                {item.item.services[0].budget}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null}\r\n\r\n                                <div class=\"row bottom-sec\">\r\n                                    <div class=\"col-lg-12\">\r\n\r\n                                        <div class=\"col-lg-12\">\r\n                                            <hr class=\"small-hr\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-12 prices\">\r\n                                            <div className=\"\">posted by:</div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-6\">\r\n                                            <div class=\"pull-left\">\r\n                                                <NavLink to=\"#\">\r\n                                                    {item.item.user.avatar ?\r\n                                                        <img class=\"img-responsive\" src={item.item.user.avatar} alt=\"Image\" />\r\n                                                        : \"\"}\r\n                                                </NavLink>\r\n                                            </div>\r\n                                            <h5> {item.item.user.name} </h5>\r\n                                            <p><i class=\"fas fa-map-marker-alt icon-color\" style={{ marginRight: 2 }}></i>{item.item.user.countryCode && item.item.user.countryCode.name}</p>\r\n                                            <p class=\"p-star\">\r\n                                                {item.item.user.avg_job_rating === \"5.00\" ?\r\n                                                    <>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                    </>\r\n                                                    :\r\n                                                    item.item.user.avg_job_rating === \"4.00\" ?\r\n                                                        <>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                        </>\r\n                                                        :\r\n                                                        item.item.user.avg_job_rating === \"3.00\" ?\r\n                                                            <>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                            </>\r\n                                                            :\r\n                                                            item.item.user.avg_job_rating === \"2.00\" ?\r\n                                                                <>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                </>\r\n                                                                :\r\n                                                                item.item.user.avg_job_rating === \"1.00\" ?\r\n                                                                    <>\r\n                                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    item.item.user.avg_job_rating === \"0.00\" ?\r\n                                                                        <>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                        </>\r\n                                                                        : null\r\n                                                }\r\n                                            </p>\r\n                                        </div>\r\n                                        {/* <div class=\"col-lg-6\">\r\n                                    <div class=\"pull-right\">\r\n                                        <h4> 5 </h4>\r\n                                        <p> Applicants</p>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Fragment>}\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                    <Pagination className=\"justify-content-end\"\r\n                        pageSize={20}\r\n                        totalCount={(favorite && favorite.data && favorite.data.pagination.totalCount) ? favorite.data.pagination.totalCount : 10}\r\n                        onChangePage={this.onChangePage} />\r\n                </div>\r\n            </div>\r\n        </FavoriteLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst favoriteSelector = createSelector(\r\n    state => state.favorite,\r\n    favorite => favorite\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    favoriteSelector,\r\n    (process, favorite) => ({\r\n        process, favorite\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(FavoriteJobs);\r\n","import React, { Component, Fragment } from 'react';\r\nimport FavoriteLayout from './FavoriteLayout';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { favoriteActions } from '../../../../common/redux/actions';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\nimport { itemService } from '../../../../common/services';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\n\r\nclass FavoriteFreelancer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                moduleId: \"UserProfile\",\r\n                page: 1,\r\n                user_id: this.props.authentication.authentication.user.id\r\n            },\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        //const { dispatch } = this.props;\r\n        //dispatch(favoriteActions.favorites(\"GET\", null, this.state.formField, 'freelancer'));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //const { dispatch } = this.props;\r\n        //dispatch(favoriteActions.clear());\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        const { dispatch } = this.props;\r\n        const formField = { ...this.state.formField };\r\n        formField[\"page\"] = page;\r\n        dispatch(favoriteActions.favorites(\"GET\", null, formField, 'freelancer'));\r\n    };\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            title: 'Please confirm to remove',\r\n            message: 'Are you sure you want to remove this freelancer from your favorites list?',\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => console.log('Click No')\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite('DELETE', null, { item_id: item.id })\r\n                            .then(response => {\r\n                                dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                dispatch(favoriteActions.remove(item.id, 'freelancer'));\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { favorite, process } = this.props;\r\n        let results = (favorite && favorite.freelancers) ? favorite.freelancers.items : null;\r\n        console.log(results)\r\n        return (<FavoriteLayout>\r\n            <DocumentTitle title=\"My Favorites Freelancer\" />\r\n            <div className=\"row\">\r\n                {/* <div className=\"col-12\"> */}\r\n                {process.loading ? <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={2} width={700} /> : <Fragment>\r\n                    {results && results.map((freelancer) =>\r\n                        // <div className=\"freLncrBox card mb-4\" key={`item-${freelancer.id}`}>\r\n                        //     <div className=\"card-body d-flex flex-wrap\">\r\n                        //         <div className=\"profile\">\r\n                        //             <img alt=\"images\" className=\"img-fluid rounded-circle\" width=\"145\" height=\"145\" src={(freelancer.item && freelancer.item.avatar && freelancer.item.avatar !== null) ? freelancer.item.avatar : '/images/freelancer-list-pic.jpg'} />\r\n                        //         </div>\r\n                        //         <div className=\"caption\">\r\n                        //             <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(freelancer)}>\r\n                        //                 <i className=\"fas fa-heart text-info\"></i>\r\n                        //             </IconButton>\r\n                        //             <h3><NavLink to={`/user/public/about/${freelancer.item && freelancer.item.id}`}>{freelancer.item && freelancer.item.name}</NavLink></h3>\r\n                        //             <div className=\"position\">\r\n                        //                 <span>{freelancer.item.userProfile && freelancer.item.userProfile.title}</span>\r\n                        //             </div>\r\n                        //             <div className=\"address d-flex align-items-center\">\r\n                        //                 {/* <div className=\"col pl-0\">\r\n                        //                     <i className=\"fas fa-map-marker-alt\"></i>\r\n                        //                     {freelancer.item.userProfile && commonHelper.address(freelancer.item.userProfile)}\r\n                        //                 </div> */}\r\n                        //                 <div className=\"ratings d-flex align-items-center\">\r\n                        //                     <small>({freelancer.item.userProfile.avg_service_rating ?freelancer.item.userProfile.avg_service_rating:0})</small>\r\n                        //                     <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                        //                         <Rating value={freelancer.item.userProfile.avg_service_rating ?freelancer.item.userProfile.avg_service_rating:0} readOnly size=\"small\" />\r\n                        //                     </Box>\r\n                        //                     <small className=\"count\">{freelancer.item.userProfile.countServiceRating ? freelancer.item.userProfile.countServiceRating : 0}</small>\r\n                        //                 </div>\r\n                        //             </div>\r\n                        //             <div className=\"text\">{freelancer.item.userProfile && freelancer.item.userProfile.about}</div>\r\n                        //         </div>\r\n                        //     </div>\r\n                        // </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"card-box text-center\">\r\n                                <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(freelancer)}>\r\n                                    <i className=\"fas fa-heart text-info\"></i>\r\n                                </IconButton>\r\n                                {freelancer.item.feautured &&\r\n                                    <div class=\"most-popular\">\r\n                                        <span>Feautured</span>\r\n                                    </div>\r\n                                }\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"member-card\">\r\n                                    <div class=\"member-thumb\">\r\n                                        <NavLink to={`/user/public/about/${freelancer.item.id}`}><img src={freelancer.item.avatar} class=\"img-circle img-thumbnail\" alt=\"profile-image\" /></NavLink>\r\n                                        {freelancer.item.feautured && <i class=\"fa fa-star member-star text-success\" title=\"verified user\"></i>}\r\n                                    </div>\r\n\r\n                                    <div class=\"small-line-height\">\r\n                                        <NavLink to={`/user/public/about/${freelancer.item.id}`}><h4><a href=\"company.html\">{freelancer.item.name}</a></h4></NavLink>\r\n                                        <p class=\"text-muted p-location\"><i class=\"fas fa-map-marker-alt icon-color\"></i> {freelancer.item && freelancer.item.countryCode && freelancer.item.countryCode.name}</p>\r\n                                        <p class=\"p-star\">\r\n                                            {freelancer.item.avg_job_rating === \"5.00\" ?\r\n                                                <>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                </>\r\n                                                :\r\n                                                freelancer.item.avg_job_rating === \"4.00\" ?\r\n                                                    <>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"far fa-star\"></i>\r\n                                                    </>\r\n                                                    :\r\n                                                    freelancer.item.avg_job_rating === \"3.00\" ?\r\n                                                        <>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                        </>\r\n                                                        :\r\n                                                        freelancer.item.avg_job_rating === \"2.00\" ?\r\n                                                            <>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                            </>\r\n                                                            :\r\n                                                            freelancer.item.avg_job_rating === \"1.00\" ?\r\n                                                                <>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                </>\r\n                                                                :\r\n                                                                freelancer.item.avg_job_rating === \"0.00\" ?\r\n                                                                    <>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                    </>\r\n                                                                    : null\r\n                                            }\r\n                                            {/* 99% (222) */}\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <h5 style={!freelancer.item.userProfile.skills.length ? { opacity: 0 } : { opacity: 1 }} >{freelancer.item.userProfile.skills.length ? freelancer.item.userProfile.skills.map((a) => `${a.title}, `) : \"aaaaaaaaaa aaaaaaaaaaaa aaaaaaaa aaaaa\"}</h5>\r\n                                    <div className=\"text\">{freelancer.item.about && freelancer.item.about.substr(0, 180)}{freelancer.item.about && freelancer.item.about.length > 180 ? \"...\" : null}</div>\r\n                                    {/* <h6>{is_co_founder ? \"Co-founder\" : \"Individual\"}</h6> */}\r\n                                    {/* <p class=\"text-muted font-16\">\r\n                                        {item.about}\r\n\t\t   </p> */}\r\n\r\n                                </div>\r\n                                {/* <div class=\"row\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>1</h6>\r\n                                        <p class=\"bottom\">Jobs Done</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>4,345</h6>\r\n                                        <p class=\"bottom\">Hours Worked</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>$15.00/hr</h6>\r\n                                        <p class=\"bottom\">Hourly Rate</p>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n\r\n                    )}\r\n                    {(results && results.length === 0) &&\r\n                        <div className=\"card service-box\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                    <div className=\"inner\">\r\n                                        <figure>\r\n                                            <img src=\"/images/not-found/freelancer-favorite.png\" alt=\"Not found\" width=\"100\" />\r\n                                        </figure>\r\n                                        <h5>You don’t have any favorite freelancers</h5>\r\n                                        <p className=\"title\">This is where you’ll see all your favorite freelancers</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </Fragment>}\r\n            </div>\r\n\r\n            <div className=\"col-12\">\r\n                <Pagination className=\"justify-content-end\"\r\n                    pageSize={20}\r\n                    totalCount={(favorite && favorite.data && favorite.data.pagination.totalCount) ? favorite.data.pagination.totalCount : 10}\r\n                    onChangePage={this.onChangePage} />\r\n            </div>\r\n            {/* </div> */}\r\n        </FavoriteLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst favoriteSelector = createSelector(\r\n    state => state.favorite,\r\n    favorite => favorite\r\n);\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    favoriteSelector,\r\n    authSelector,\r\n    (process, favorite, authentication) => ({\r\n        process, favorite, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(FavoriteFreelancer);\r\n","import React, { Component, Fragment } from 'react';\r\nimport FavoriteLayout from './FavoriteLayout';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { favoriteActions } from '../../../../common/redux/actions';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\nimport { itemService } from '../../../../common/services';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\n\r\nclass FavoriteCoFounder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                moduleId: \"UserProfile\",\r\n                is_co_founder: 1,\r\n                page: 1,\r\n                user_id: this.props.authentication.authentication.user.id\r\n            },\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        //const { dispatch } = this.props;\r\n        //dispatch(favoriteActions.favorites(\"GET\", null, this.state.formField, 'co-founder'));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //const { dispatch } = this.props;\r\n        //dispatch(favoriteActions.clear());\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        const { dispatch } = this.props;\r\n        const formField = { ...this.state.formField };\r\n        formField[\"page\"] = page;\r\n        dispatch(favoriteActions.favorites(\"GET\", null, formField, 'co-founder'));\r\n    };\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            title: 'Please confirm to remove',\r\n            message: 'Are you sure you want to remove this co-founder from your favorites list?',\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => console.log('Click No')\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite('DELETE', null, { item_id: item.id })\r\n                            .then(response => {\r\n                                dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                dispatch(favoriteActions.remove(item.id, 'co-founder'));\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { favorite, process } = this.props;\r\n        let results = (favorite && favorite.freelancers) ? favorite.freelancers.items : null;\r\n        return (<FavoriteLayout>\r\n            <DocumentTitle title=\"My Favorites Freelancer\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    {process.loading ? <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={2} width={700} /> : <Fragment>\r\n                        {results && results.map((freelancer) =>\r\n                            // <div className=\"freLncrBox card mb-4\" key={`item-${freelancer.id}`}>\r\n                            //     <div className=\"card-body d-flex flex-wrap\">\r\n                            //         <div className=\"profile\">\r\n                            //             <img alt=\"images\" className=\"img-fluid rounded-circle\" width=\"145\" height=\"145\" src={(freelancer.item && freelancer.item.avatar && freelancer.item.avatar !== null) ? freelancer.item.avatar : '/images/freelancer-list-pic.jpg'} />\r\n                            //         </div>\r\n                            //         <div className=\"caption\">\r\n                            //             <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(freelancer)}>\r\n                            //                 <i className=\"fas fa-heart text-info\"></i>\r\n                            //             </IconButton>\r\n                            //             <h3><NavLink to={`/user/public/co-founder/${freelancer.item && freelancer.item.id}`}>{freelancer.item && freelancer.item.name}</NavLink></h3>\r\n                            //             <div className=\"position\">\r\n                            //                 <span>{freelancer.item.userProfile && freelancer.item.userProfile.title}</span>\r\n                            //             </div>\r\n                            //             <div className=\"address d-flex align-items-center\">\r\n                            //                 {/* <div className=\"col pl-0\">\r\n                            //                     <i className=\"fas fa-map-marker-alt\"></i>\r\n                            //                     {freelancer.item.userProfile && commonHelper.address(freelancer.item.userProfile)}\r\n                            //                 </div> */}\r\n                            //                 <div className=\"ratings d-flex align-items-center\">\r\n                            //                     <small>({freelancer.item.userProfile.avg_service_rating ?freelancer.item.userProfile.avg_service_rating:0})</small>\r\n                            //                     <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                            //                         <Rating value={freelancer.item.userProfile.avg_service_rating ?freelancer.item.userProfile.avg_service_rating:0} readOnly size=\"small\" />\r\n                            //                     </Box>\r\n                            //                     <small className=\"count\">{freelancer.item.userProfile.countServiceRating ? freelancer.item.userProfile.countServiceRating : 0}</small>\r\n                            //                 </div>\r\n                            //             </div>\r\n                            //             <div className=\"text\">{freelancer.item.userProfile && freelancer.item.userProfile.about}</div>\r\n                            //         </div>\r\n                            //     </div>\r\n                            // </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"card-box text-center\">\r\n                                    <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(freelancer)}>\r\n                                        <i className=\"fas fa-heart text-info\"></i>\r\n                                    </IconButton>\r\n                                    {freelancer.item.feautured &&\r\n                                        <div class=\"most-popular\">\r\n                                            <span>Feautured</span>\r\n                                        </div>\r\n                                    }\r\n                                    <div class=\"clearfix\"></div>\r\n                                    <div class=\"member-card\">\r\n                                        <div class=\"member-thumb\">\r\n                                            <NavLink to={`/user/public/co-founder/${freelancer.item.id}`}><img src={freelancer.item.avatar} class=\"img-circle img-thumbnail\" alt=\"profile-image\" /></NavLink>\r\n                                            {freelancer.item.feautured && <i class=\"fa fa-star member-star text-success\" title=\"verified user\"></i>}\r\n                                        </div>\r\n\r\n                                        <div class=\"small-line-height\">\r\n                                            <NavLink to={`/user/public/co-founder/${freelancer.item.id}`}><h4><a href=\"company.html\">{freelancer.item.name}</a></h4></NavLink>\r\n                                            <p class=\"text-muted p-location\"><i class=\"fas fa-map-marker-alt icon-color\"></i> {freelancer.item && freelancer.item.countryCode && freelancer.item.countryCode.name}</p>\r\n                                            <p class=\"p-star\">\r\n                                                {freelancer.item.avg_job_rating === \"5.00\" ?\r\n                                                    <>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                    </>\r\n                                                    :\r\n                                                    freelancer.item.avg_job_rating === \"4.00\" ?\r\n                                                        <>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"fa fa-star rating-star\"></i>\r\n                                                            <i class=\"far fa-star\"></i>\r\n                                                        </>\r\n                                                        :\r\n                                                        freelancer.item.avg_job_rating === \"3.00\" ?\r\n                                                            <>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"fa fa-star rating-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                                <i class=\"far fa-star\"></i>\r\n                                                            </>\r\n                                                            :\r\n                                                            freelancer.item.avg_job_rating === \"2.00\" ?\r\n                                                                <>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"fa fa-star rating-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                    <i class=\"far fa-star\"></i>\r\n                                                                </>\r\n                                                                :\r\n                                                                freelancer.item.avg_job_rating === \"1.00\" ?\r\n                                                                    <>\r\n                                                                        <i class=\"fa fa-star rating-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                        <i class=\"far fa-star\"></i>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    freelancer.item.avg_job_rating === \"0.00\" ?\r\n                                                                        <>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                            <i class=\"far fa-star\"></i>\r\n                                                                        </>\r\n                                                                        : null\r\n                                                }\r\n                                                {/* 99% (222) */}\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <h5 style={!freelancer.item.userProfile.skills.length ? { opacity: 0 } : { opacity: 1 }} >{freelancer.item.userProfile.skills.length ? freelancer.item.userProfile.skills.map((a) => `${a.title}, `) : \"aaaaaaaaaa aaaaaaaaaaaa aaaaaaaa aaaaa\"}</h5>\r\n                                        <div className=\"text\">{freelancer.item.about && freelancer.item.about.substr(0, 180)}{freelancer.item.about && freelancer.item.about.length > 180 ? \"...\" : null}</div>\r\n                                        {/* <h6>{is_co_founder ? \"Co-founder\" : \"Individual\"}</h6> */}\r\n                                        {/* <p class=\"text-muted font-16\">\r\n                                        {item.about}\r\n\t\t   </p> */}\r\n\r\n                                    </div>\r\n                                    {/* <div class=\"row\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>1</h6>\r\n                                        <p class=\"bottom\">Jobs Done</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>4,345</h6>\r\n                                        <p class=\"bottom\">Hours Worked</p>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <h6>$15.00/hr</h6>\r\n                                        <p class=\"bottom\">Hourly Rate</p>\r\n                                    </div>\r\n                                </div> */}\r\n                                </div>\r\n                            </div>\r\n\r\n                        )}\r\n                        {(results && results.length === 0) &&\r\n                            <div className=\"card service-box\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                        <div className=\"inner\">\r\n                                            <figure>\r\n                                                <img src=\"/images/not-found/Co-founder.png\" alt=\"Not found\" width=\"100\" />\r\n                                            </figure>\r\n                                            <h5>You don’t have any favorite co-founders</h5>\r\n                                            <p className=\"title\">This is where you’ll see all your favorite co-founders</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </Fragment>}\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                    <Pagination className=\"justify-content-end\"\r\n                        pageSize={20}\r\n                        totalCount={(favorite && favorite.data && favorite.data.pagination.totalCount) ? favorite.data.pagination.totalCount : 10}\r\n                        onChangePage={this.onChangePage} />\r\n                </div>\r\n            </div>\r\n        </FavoriteLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst favoriteSelector = createSelector(\r\n    state => state.favorite,\r\n    favorite => favorite\r\n);\r\n\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    favoriteSelector,\r\n    authSelector,\r\n    (process, favorite, authentication) => ({\r\n        process, favorite, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(FavoriteCoFounder);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { IconButton, Box } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport FavoriteLayout from './FavoriteLayout';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport { favoriteActions } from '../../../../common/redux/actions';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport { PublicServiceLoader } from '../../../../common/loaders';\r\nimport { itemService } from '../../../../common/services';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nclass FavoriteService extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                moduleId: \"UserService\",\r\n                page: 1,\r\n                user_id: this.props.authentication.authentication.user.id\r\n            },\r\n            favorite: null,\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        //const { dispatch } = this.props;\r\n        //dispatch(favoriteActions.favorites(\"GET\", null, this.state.formField, 'services'));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        const { dispatch } = this.props;\r\n        const formField = { ...this.state.formField };\r\n        formField[\"page\"] = page;\r\n        dispatch(favoriteActions.favorites(\"GET\", null, formField, 'services'));\r\n    };\r\n\r\n    markAsFavorite = (item) => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            title: 'Please confirm to remove',\r\n            message: `Are you sure you want to remove this service from your favorites list?`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.favorite(\"DELETE\", null, { item_id: item.id })\r\n                            .then(response => {\r\n                                dispatch(alertSelectors.success(\"You have successfully removed a favorite.\"));\r\n                                dispatch(favoriteActions.remove(item.id, 'services'));\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { favorite, process } = this.props;\r\n        let results = (favorite && favorite.services) ? favorite.services.items : null;\r\n        return (<FavoriteLayout>\r\n            <DocumentTitle title=\"My Favorites Services\" />\r\n            <div className=\"row\">\r\n                {process.loading ? <Fragment>\r\n                    {[1, 2, 3, 4].map((item) =>\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12\" key={Math.random() * (+30 - +1)}>\r\n                            <div className=\"p-2 bg-white\">\r\n                                <ContentLoader\r\n                                    height={500}\r\n                                    width={500}\r\n                                    speed={10}\r\n                                    primaryColor={'#ddd'}\r\n                                    secondaryColor={'#ddd'}\r\n                                >\r\n                                    <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width={500} height=\"280\" />\r\n                                    <rect x=\"25\" y=\"300\" rx=\"3\" ry=\"3\" width={450} height=\"20\" />\r\n                                    <rect x=\"25\" y=\"350\" rx=\"3\" ry=\"3\" width={450} height=\"20\" />\r\n                                    <rect x=\"25\" y=\"400\" rx=\"3\" ry=\"3\" width={450} height=\"20\" />\r\n                                </ContentLoader>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Fragment> : <Fragment>\r\n                        {results && results.map((item) =>\r\n                            // <div className=\"col-lg-3 col-md-4 col-sm-6 col-12\" key={Math.floor(Math.random() * (+30 - +1)) + +1}>\r\n                            //     <div className=\"svcsLBox mb-4\">\r\n                            //         <div className=\"image max-height\">\r\n                            //             <LazyLoadImage alt=\"image\" className=\"img-fluid w-100\" src={item.item && item.item.cover} effect=\"blur\" />\r\n                            //             <IconButton className=\"favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                            //                 {(item.is_favorite !== false) ? <i className=\"fas fa-heart text-info\"></i> :\r\n                            //                     <i className=\"far fa-heart\"></i>}\r\n                            //             </IconButton>\r\n                            //         </div>\r\n                            //         <div className=\"caption\">\r\n                            //             <h3><Link to={`/user/public/service/view/${item.item.id}`}>{item.item.title}</Link></h3>\r\n                            //             <div className=\"service\">{item.item.proposal_count ? item.item.proposal_count : 'Not'} Service Sold</div>\r\n                            //             <div className=\"ratings d-flex align-items-center\">\r\n                            //                 <small>({item.item.avg_rating})</small>\r\n                            //                 <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                            //                     <Rating value={parseFloat(item.item.avg_rating)} readOnly />\r\n                            //                 </Box>\r\n                            //                 <small className=\"count\">{item.item.proposal_count}</small>\r\n                            //             </div>\r\n                            //         </div>\r\n                            //     </div>\r\n                            // </div>\r\n\r\n                            <div className=\"col-md-3\" key={item.item.id}>\r\n                                <div className=\"svcsLBox w-100 float-left\">\r\n                                    <div className=\"image\">\r\n                                        <Link to={`/user/public/service/view/${item.item.id}`} className=\"bg-image\">\r\n                                            <LazyLoadImage alt=\"image\" className=\"img-fluid\" src={item.item.cover} effect=\"blur\" />\r\n                                        </Link>\r\n                                        <IconButton className=\"favorite\" aria-label=\"Favorite\" onClick={() => this.markAsFavorite(item)}>\r\n                                            <i className=\"fas fa-heart text-info\"></i>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    <div className=\"caption w-100 float-left\">\r\n                                        <h3 className=\"text-truncate\" title={item.item.title}><Link to={`/user/public/service/view/${item.item.id}`}>{item.item.title}</Link></h3>\r\n                                        {item.item.sold_count ? <div className=\"service\">{item.item.sold_count} Service Sold</div> : ''}\r\n                                        <div className=\"ratings d-flex align-items-center\">\r\n                                            <small>({item.item.avg_rating})</small>\r\n                                            <Box component=\"fieldset\" mx={1} borderColor=\"transparent\">\r\n                                                <Rating value={Math.floor(item.item.avg_rating)} readOnly />\r\n                                            </Box>\r\n                                            {(item && item.item.count_rating !== 0) && <small className=\"count\">{item.item.count_rating}</small>}\r\n                                        </div>\r\n                                        {/* <div className=\"profile d-flex align-items-center\">\r\n                                        <div className=\"img pr-2\">\r\n                                            <NavLink to={`/user/public/about/${item.item.user.id}`}><img src={item.item.user.avatar} className=\"img-fluid rounded-circle\" width=\"32\" height=\"32\" alt=\"\" /></NavLink>\r\n                                        </div>\r\n                                        <div className=\"caption\">\r\n                                            <h6 className=\"mb-0\"> <NavLink to={`/user/public/about/${item.item.user.id}`}>{item.item.user.name}</NavLink></h6>\r\n                                            <p className=\"mb-0\"><small>\r\n                                                {item.item.user && item.item.user.countryCode && item.item.user.countryCode.name}\r\n                                            </small></p>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                        <div class=\"col-lg-12 abc\">\r\n                                            <div class=\"pull-left\">\r\n                                                <NavLink to=\"#\">\r\n                                                    {item.item.user.avatar ?\r\n                                                        <img class=\"img-responsive\" src={item.item.user.avatar} alt=\"Image\" />\r\n                                                        : \"\"}\r\n                                                </NavLink>\r\n                                            </div>\r\n                                            <h5> {item.item.user.name} </h5>\r\n                                            <p><i className=\"fas fa-map-marker-alt icon-color\"></i> {item.item.user.countryCode && item.item.user.countryCode.name}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )}\r\n                        {(results && results.length === 0) && <div className=\"col-12\">\r\n                            <div className=\"card service-box\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                        <div className=\"inner\">\r\n                                            <figure>\r\n                                                <img src=\"/images/not-found/My-Services.png\" alt=\"Not found\" width=\"100\" />\r\n                                            </figure>\r\n                                            <h5>You don’t have any favorite services</h5>\r\n                                            <p className=\"title\">This is where you’ll see all your favorite services</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                    </Fragment>}\r\n                <div className=\"col-12\">\r\n                    <Pagination className=\"justify-content-end\"\r\n                        pageSize={20}\r\n                        totalCount={(favorite && favorite.services && favorite.services.pagination.totalCount) ? favorite.services.pagination.totalCount : 10}\r\n                        onChangePage={this.onChangePage} />\r\n                </div>\r\n            </div>\r\n        </FavoriteLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst favoriteSelector = createSelector(\r\n    state => state.favorite,\r\n    favorite => favorite\r\n);\r\nconst authSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    favoriteSelector,\r\n    authSelector,\r\n    (process, favorite, authentication) => ({\r\n        process, favorite, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(FavoriteService);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst CoFounderNavbar = () => {\r\n    return (\r\n        <div className=\"public-navbar card mb-4\">\r\n            <div className=\"card-body\">\r\n                <nav className=\"nav\">\r\n                    <NavLink className=\"nav-link\" to={`/user/connection/my-cofounder`}>My Co-founder</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/user/connection/received-request`}>Received Request</NavLink>\r\n                    <NavLink className=\"nav-link\" to={`/user/connection/sent-request`}>Sent Request</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CoFounderNavbar;","import React, { Component, Fragment } from 'react';\r\nimport { Main } from '../../../layout';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { favoriteActions, messageActions } from '../../../../common/redux/actions';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\nimport { globalService as gs, itemService } from '../../../../common/services';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { alertSelectors } from '../../../../common/redux/selectors';\r\nimport CoFounderNavbar from './partials/CoFounderNavbar';\r\nimport { ModuleHelper as mh } from '../../../../helpers';\r\n\r\n\r\nclass ConnectionsMy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                page: 1,\r\n                connection_id: null,\r\n                status: 1,\r\n                key: 'my-connections'\r\n            },\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { dispatch } = this.props;\r\n        const formField = { ...this.state.formField };\r\n        formField[\"connection_id\"] = gs.getUser().id;\r\n        dispatch(favoriteActions.connections(\"GET\", null, { key: 'my-connections', status: 1 }));\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        if (page !== 1) {\r\n            const { dispatch } = this.props;\r\n            const formField = { ...this.state.formField };\r\n            formField[\"page\"] = page;\r\n            dispatch(favoriteActions.connections(\"GET\", null, formField));\r\n        }\r\n    };\r\n\r\n    accept = (item, index) => {\r\n        this.request(item, index, 1, 'accept');\r\n    };\r\n\r\n    decline = (item, index) => {\r\n        this.request(item, index, 2, 'decline');\r\n    };\r\n\r\n    messageOpen = (item) => {\r\n        item.message_id ?\r\n            this.props.history.push(`/messages/?key=${item.message_id}`) :\r\n            this.message(item);\r\n    };\r\n\r\n    message = (item) => {\r\n        const { dispatch } = this.props;\r\n        if (item.message_id === null) {\r\n            const params = {};\r\n            const messageKey = item.message_id;\r\n            const recipients = [];\r\n            recipients[item.user_id] = {\r\n                id: item.user.id,\r\n                avatar: item.user.avatar,\r\n                hometown: item.user.hometown,\r\n                name: item.user.name\r\n            };\r\n            recipients[item.connection_id] = {\r\n                id: item.connection_id,\r\n                avatar: item.connection.avatar,\r\n                hometown: item.connection.hometown,\r\n                name: item.connection.name\r\n            };\r\n            params.user_id = gs.identity.user.id;\r\n            params.recipients = recipients;\r\n            params.text = 'Hi';\r\n            params.group = null;\r\n            params.attachment = null;\r\n            params.item = { module: mh.UserConnection, moduleType: mh.UserConnection };\r\n            dispatch(messageActions.sendMessageToFirebase(params, messageKey));\r\n            this.props.history.push(`/messages/?key=${messageKey}`)\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    request = (item, index, status, action) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userConnection\": {\r\n                user_id: item.user_id,\r\n                connection_id: item.connection_id,\r\n                status: status\r\n            }\r\n        };\r\n        confirmAlert({\r\n            title: `Please confirm to ${action} `,\r\n            message: `Are you sure to ${action} this connection list`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.connection(\"POST\", params)\r\n                            .then(response => {\r\n                                dispatch(alertSelectors.success(`You have successfully ${action} connection request`));\r\n                                dispatch(favoriteActions.connections(\"GET\", null));\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    remove = (item, index) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userConnection\": {\r\n                user_id: item.user_id,\r\n                connection_id: item.connection_id,\r\n                status: 2\r\n            }\r\n        };\r\n        confirmAlert({\r\n            title: `Please confirm to remove `,\r\n            message: `Are you sure to remove this connection list`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.connection(\"POST\", params)\r\n                            .then(response => {\r\n                                dispatch(alertSelectors.success(`You have successfully removed a connection request.`));\r\n                                dispatch(favoriteActions.remove(index, 'connections'));\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { favorite, process } = this.props;\r\n        let results = (favorite && favorite.connections) ? favorite.connections.items : null;\r\n        // if (results) {\r\n        //     for (let i = 0; i < 10; i++) {\r\n        //         results.push(results[0])\r\n        //     }\r\n        // }\r\n        return (<Main>\r\n            <DocumentTitle title=\"Cofounder Connection\" />\r\n\r\n            <div className=\"bg-body my-favorites\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"pb-2 d-flex align-items-center flex-wrap heading\">Co-founder</h1>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <CoFounderNavbar />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"row\">\r\n                                {process.loading ? <Fragment>\r\n                                    {[1, 2, 3, 4].map((item) =>\r\n                                        <div className=\"col-md-6 col-12\" key={`loa${item}`}>\r\n                                            <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={0} width={300} />\r\n                                        </div>\r\n                                    )}\r\n                                </Fragment> : <Fragment>\r\n                                        {results && results.map((item, index) =>\r\n                                            <div className=\"col-md-6 col-12\" key={Math.floor(Math.random() * (+40 - +1)) + +1}>\r\n                                                <div className=\"freLncrBox no-hover card mb-4\">\r\n                                                    <div className=\"card-body d-flex flex-wrap\">\r\n                                                        <div className=\"profile\">\r\n                                                            <img alt=\"images\" className=\"img-fluid rounded-circle\" width=\"145\" height=\"145\" src={item.connection && item.connection.avatar} />\r\n                                                        </div>\r\n                                                        <div className=\"caption\">\r\n                                                            <h3><NavLink to={`/user/public/about/${item.connection && item.connection.id}`}>{item.connection && item.connection.name}</NavLink></h3>\r\n                                                            <div className=\"position\">\r\n                                                                <span>{item.connection && item.connection.title}</span>\r\n                                                            </div>\r\n                                                            <div className=\"address d-flex align-items-center flex-wrap\">\r\n                                                                <div className=\"w-100 mb-1 text-truncate\">\r\n                                                                    <i className=\"fas fa-map-marker-alt mr-2\"></i>\r\n                                                                    {item.connection && item.connection.countryCode && item.connection.countryCode.name}\r\n                                                                </div>\r\n                                                                <div className=\"w-100 mb-2\">\r\n                                                                    {item.connection.connections} Connections\r\n                                                            </div>\r\n                                                            </div>\r\n                                                            <div className=\"action d-flex align-items-center\">\r\n                                                                <button className=\"btn btn-primary px-4\" onClick={() => this.messageOpen(item)}>Message</button>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {(results && results.length === 0) && <div className=\"col-12\">\r\n                                            <div className=\"card service-box\">\r\n                                                <div className=\"card-body text-center\">\r\n                                                    <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                                        <div className=\"inner\">\r\n                                                            <figure>\r\n                                                                <img src=\"/images/not-found/Co-founder.png\" alt=\"Not found\" width=\"100\" />\r\n                                                            </figure>\r\n                                                            <h5>You have not connected with any co-founder yet</h5>\r\n                                                            <p className=\"title\">This is where you'll see all the co-founders you are connected with</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                    </Fragment>}\r\n                                <div className=\"col-12\">\r\n                                    <Pagination className=\"justify-content-end\"\r\n                                        pageSize={20}\r\n                                        totalCount={(favorite && favorite.connections && favorite.connections.pagination.totalCount) ? favorite.connections.pagination.totalCount : 10}\r\n                                        onChangePage={this.onChangePage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst favoriteSelector = createSelector(\r\n    state => state.favorite,\r\n    favorite => favorite\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    favoriteSelector,\r\n    authenticationSelector,\r\n    (process, favorite, authentication) => ({\r\n        process, favorite, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ConnectionsMy);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { itemService } from '../../../../common/services';\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {alertSelectors, processSelectors} from '../../../../common/redux/selectors';\r\nimport { Main } from '../../../layout';\r\nimport CoFounderNavbar from './partials/CoFounderNavbar';\r\n\r\nclass ConnectionsRequest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n            totalCount: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.connection(1);\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        if(page !== 1) {\r\n            this.connection(page);\r\n        }\r\n    };\r\n\r\n    connection = (page) => {\r\n        const { dispatch } = this.props;\r\n        dispatch(processSelectors.start());\r\n        let param2 = {\r\n            key: 'connection-requests',\r\n            page: page\r\n        };\r\n        itemService.connection(\"GET\", null, param2)\r\n            .then(res => {\r\n                this.setState({ items: res.items, totalCount: res.pagination.totalCount });\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n\r\n    accept = (item, index) => {\r\n        this.request(item, index, 1, 'accept');\r\n    };\r\n\r\n    decline = (item, index) => {\r\n        this.request(item, index, 2, 'decline');\r\n    };\r\n\r\n    request = (item, index, status, action) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            \"userConnection\": {\r\n                user_id: item.user_id,\r\n                connection_id: item.connection_id,\r\n                status: status\r\n            }\r\n        };\r\n        confirmAlert({\r\n            title: `Please confirm to ${action} `,\r\n            message: (action === 'accept') ? 'Are you sure you want to add this co-founder to your connection?' :  `You have successfully ${action} connection request`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.connection(\"POST\", params)\r\n                            .then(response => {\r\n                                if(response.success === true) {\r\n                                    dispatch(alertSelectors.success(`You have successfully ${action} connection request`));\r\n                                    const items = this.state.items;\r\n                                    items.splice(index, 1);\r\n                                    this.setState({items: items});\r\n                                } else {\r\n                                    dispatch(alertSelectors.error('Error'));\r\n                                }\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { process } = this.props;\r\n        const { items, totalCount } = this.state;\r\n\r\n        return (<Main>\r\n            <DocumentTitle title=\"Received Request\" />\r\n            <div className=\"bg-body my-favorites\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"pb-2 d-flex align-items-center flex-wrap heading\">Received Request</h1>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <CoFounderNavbar />\r\n                        </div>\r\n                        {process.loading ? <Fragment>\r\n                            {[1,2,3].map((item) =>\r\n                                <div className=\"col-12\" key={`loa${item}`}>\r\n                                    <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={0} width={900} />\r\n                                </div>\r\n                            )}\r\n                        </Fragment> : <Fragment>\r\n                            {items && items.map((item, index) =>\r\n                                <div className=\"col-12\" key={Math.floor(Math.random() * (+30 - +1)) + +1}>\r\n                                    <div className=\"freAcpBox no-hover card mb-4\">\r\n                                        <div className=\"card-body d-flex\">\r\n                                            <div className=\"profile\">\r\n                                                <img alt=\"images\" className=\"img-fluid rounded-circle\" width=\"60\" height=\"60\" src={item.user.avatar} />\r\n                                            </div>\r\n                                            <div className=\"caption col\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <h3><NavLink to={`/user/public/about/${item.user.id}`}>{item.user.name} </NavLink></h3>\r\n                                                        {/* <div className=\"address d-flex align-items-center flex-wrap\">\r\n                                                            <div className=\"w-100 mb-1\">\r\n                                                                <i className=\"fas fa-map-marker-alt\"></i> {item.user && commonHelper.address(item.user)}\r\n                                                            </div>\r\n                                                        </div> */}\r\n                                                    </div>\r\n                                                    <div className=\"col\">\r\n                                                        {item.user.title}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"action d-flex align-items-center\">\r\n                                                <button className=\"btn btn-primary mr-2\" onClick={() => this.accept(item, index)}><i className=\"fas fa-check text-white\"></i> Accept</button>\r\n                                                <button className=\"btn btn-accept\" onClick={() => this.decline(item, index)}><i className=\"fas fa-times text-white\"></i> Decline</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {(items && items.length === 0) && <div className=\"col-12\">\r\n                                <div className=\"card service-box\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                            <div className=\"inner\">\r\n                                                <figure>\r\n                                                    <img src=\"/images/not-found/Co-founder.png\" alt=\"Not found\" width=\"100\" />\r\n                                                </figure>\r\n                                                <h5>You have not received any co-founder request yet</h5>\r\n                                                <p className=\"title\">This is where you’ll see all the connection requests you received from co-founders</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                        </Fragment>}\r\n                        <div className=\"col-12\">\r\n                            <Pagination className=\"justify-content-end\"\r\n                                pageSize={20}\r\n                                totalCount={(totalCount && totalCount) ? totalCount : 10}\r\n                                onChangePage={this.onChangePage} />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ConnectionsRequest);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport { itemService } from '../../../../common/services';\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport { SearchLoader } from '../../../../common/loaders';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {alertSelectors, processSelectors} from '../../../../common/redux/selectors';\r\nimport { Main } from '../../../layout';\r\nimport CoFounderNavbar from './partials/CoFounderNavbar';\r\n\r\nclass ConnectionsSent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n            totalCount: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.connection(1);\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        if(page !== 1) {\r\n            this.connection(page);\r\n        }\r\n    };\r\n\r\n    connection = (page) => {\r\n        const { dispatch } = this.props;\r\n        dispatch(processSelectors.start());\r\n        let param2 = {\r\n            key: 'my-connections',\r\n            status: 0,\r\n            page: page\r\n        };\r\n        itemService.connection(\"GET\", null, param2)\r\n            .then(res => {\r\n                this.setState({ items: res.items, totalCount: res.pagination.totalCount });\r\n                dispatch(processSelectors.stop());\r\n            })\r\n            .catch(exception => {\r\n                console.log(exception);\r\n                dispatch(processSelectors.stop());\r\n            });\r\n    };\r\n\r\n    accept = (item, index) => {\r\n        this.request(item, index, 1, 'accept');\r\n    };\r\n\r\n    decline = (item, index) => {\r\n        this.request(item, index, 2, 'delete');\r\n    };\r\n\r\n    request = (item, index, status, action) => {\r\n        const { dispatch } = this.props;\r\n        const params = {\r\n            item_id: item.connection_id\r\n        };\r\n        confirmAlert({\r\n            title: `Please confirm to ${action} `,\r\n            message: `Are you sure to ${action} this connection list`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        itemService.connection(\"DELETE\", null, params)\r\n                            .then(response => {\r\n                                if(response.success === true) {\r\n                                    dispatch(alertSelectors.success(`You have successfully ${action} connection request`));\r\n                                    const items = this.state.items;\r\n                                    items.splice(index, 1);\r\n                                    this.setState({items: items});\r\n                                } else {\r\n                                    dispatch(alertSelectors.error('Error'));\r\n                                }\r\n                            })\r\n                            .catch(exception => {\r\n                                console.log(exception);\r\n                            })\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { process } = this.props;\r\n        const { items, totalCount } = this.state;\r\n\r\n        return (<Main>\r\n            <DocumentTitle title=\"Received Request\" />\r\n            <div className=\"bg-body my-favorites\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"pb-2 d-flex align-items-center flex-wrap heading\">Sent Request</h1>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <CoFounderNavbar />\r\n                        </div>\r\n                        {process.loading ? <Fragment>\r\n                            {[1,2,3].map((item) =>\r\n                                <div className=\"col-12\" key={`loa${item}`}>\r\n                                    <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={0} width={900} />\r\n                                </div>\r\n                            )}\r\n                        </Fragment> : <Fragment>\r\n                            {items && items.map((item, index) =>\r\n                                <div className=\"col-12\" key={Math.floor(Math.random() * (+30 - +1)) + +1}>\r\n                                    <div className=\"freAcpBox no-hover card mb-4\">\r\n                                        <div className=\"card-body d-flex\">\r\n                                            <div className=\"profile\">\r\n                                                <img alt=\"images\" className=\"img-fluid rounded-circle\" width=\"60\" height=\"60\" src={item.connection.avatar} />\r\n                                            </div>\r\n                                            <div className=\"caption col\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <h3><NavLink to={`/user/public/about/${item.connection.id}`}>{item.connection.name} </NavLink></h3>\r\n                                                        {/* <div className=\"address d-flex align-items-center flex-wrap\">\r\n                                                            <div className=\"w-100 mb-1\">\r\n                                                                <i className=\"fas fa-map-marker-alt\"></i> {item.user && commonHelper.address(item.user)}\r\n                                                            </div>\r\n                                                        </div> */}\r\n                                                    </div>\r\n                                                    <div className=\"col\">\r\n                                                        {item.connection.title}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"action d-flex align-items-center\">\r\n                                                {/* <button className=\"btn btn-primary mr-2\" onClick={() => this.accept(item, index)}><i className=\"fas fa-check text-white\"></i> Accept</button> */}\r\n                                                <button className=\"btn btn-accept\" onClick={() => this.decline(item, index)}><i className=\"fas fa-times text-white\"></i> Remove</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {(items && items.length === 0) && <div className=\"col-12\">\r\n                                <div className=\"card service-box\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                            <div className=\"inner\">\r\n                                                <figure>\r\n                                                    <img src=\"/images/not-found/Co-founder.png\" alt=\"Not found\" width=\"100\" />\r\n                                                </figure>\r\n                                                <h5>You have not sent any co-founder request yet</h5>\r\n                                                <p className=\"title\">This is where you’ll see all the connection requests you sent to co-founders</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                        </Fragment>}\r\n                        <div className=\"col-12\">\r\n                            <Pagination className=\"justify-content-end\"\r\n                                pageSize={20}\r\n                                totalCount={(totalCount && totalCount) ? totalCount : 10}\r\n                                onChangePage={this.onChangePage} />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ConnectionsSent);\r\n","import React, {Fragment} from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\n\r\nconst NavBar = (prop) => {\r\n    return (<Fragment>\r\n        <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/setting/account-info\">My Account</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/setting/change-password\">Change Password</NavLink>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/setting/manage-membership\">Manage Membership</NavLink>\r\n            </li> */}\r\n            <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/setting/stripe-connect\">Payment</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/setting/transactions\">Transactions</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/setting/notifications\">Notifications</NavLink>\r\n            </li>\r\n        </ul>\r\n    </Fragment>);\r\n};\r\n\r\nexport default NavBar;\r\n","import React, {Component} from 'react';\r\nimport {Main} from '../../../layout';\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\nimport FormValidator from \"../../../../helpers/FormValidator\";\r\nimport {userActions} from \"../../../../common/redux/actions\";\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport LaddaButton, {EXPAND_RIGHT} from 'react-ladda';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport NavBar from './partials/NavBar';\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                oldPassword: '',\r\n                newPassword: '',\r\n                confirmNewPassword: '',\r\n            },\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    validator = () => {\r\n        return new FormValidator([\r\n            {field: 'oldPassword', method: 'isEmpty', validWhen: false, message: 'Old Password is required.'},\r\n            {field: 'newPassword', method: 'isEmpty', validWhen: false, message: 'New Password is required.'},\r\n            {field: 'confirmNewPassword', method: 'isEmpty', validWhen: false, message: 'Confirm Password is required.'},\r\n            {field: 'confirmNewPassword', method: this.handleConfirmPassword, validWhen: true, message: 'Confirm Password is not match.'},\r\n        ]);\r\n    };\r\n\r\n    handleConfirmPassword = (newPassword) => {\r\n        return (newPassword === this.state.formField.confirmNewPassword);\r\n    };\r\n\r\n    handleChange(e) {\r\n        let formField = {...this.state.formField};\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({formField});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validation = this.validator().validate(this.state.formField);\r\n        this.setState({validation, submitted: true});\r\n\r\n        if (validation.isValid) {\r\n            const {dispatch} = this.props;\r\n            dispatch(userActions.changePassword(this.state.formField));\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const {formField, submitted, validation} = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        const { process } = this.props;\r\n        return (<Main>\r\n            <DocumentTitle title={`Change Password`}/>\r\n\r\n            <div className=\"update-profile bg-body\">\r\n                <div className=\"container\">\r\n                    <Card className=\"mb-4 mb-lg-5\">\r\n                        <Card.Header>Change Password</Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"3\" xl=\"4\">\r\n                                    <NavBar />\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\" xl=\"8\" className=\"add-stripe-account\">\r\n                                    <form name=\"service\" method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n                                        <Row>\r\n                                            <Col xs md=\"6\" className=\"mx-auto1\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Current Password</label>\r\n                                                    <input type=\"password\" placeholder=\"Old password\"\r\n                                                        name=\"oldPassword\" value={formField.oldPassword}\r\n                                                        onChange={this.handleChange} autoComplete=\"off\"\r\n                                                        className={'form-control ' + (submitted && isValid.oldPassword.isInvalid ? 'is-invalid' : '')}/>\r\n                                                    {submitted && isValid.oldPassword.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.oldPassword.message} </div>\r\n                                                    }\r\n\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>New Password</label>\r\n                                                    <input type=\"password\" placeholder=\"New password\"\r\n                                                        name=\"newPassword\" value={formField.newPassword}\r\n                                                        onChange={this.handleChange} autoComplete=\"off\"\r\n                                                        className={'form-control ' + (submitted && isValid.newPassword.isInvalid ? 'is-invalid' : '')}/>\r\n                                                    {submitted && isValid.newPassword.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.newPassword.message} </div>\r\n                                                    }\r\n\r\n\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Confirm Password</label>\r\n                                                    <input type=\"password\" placeholder=\"Confirm new password\"\r\n                                                        name=\"confirmNewPassword\" value={formField.confirmNewPassword}\r\n                                                        onChange={this.handleChange} autoComplete=\"off\"\r\n                                                        className={'form-control ' + (submitted && isValid.confirmNewPassword.isInvalid ? 'is-invalid' : '')}/>\r\n                                                    {submitted && isValid.confirmNewPassword.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.confirmNewPassword.message} </div>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <LaddaButton type=\"submit\" className=\"btn btn-info btn-lg ladda-btn\" loading={process.loading ? true : false} data-style={EXPAND_RIGHT}>Save</LaddaButton>\r\n\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </form>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        </Main>);\r\n    }\r\n}\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ChangePassword);\r\n\r\n","import React, { Component } from 'react';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\nimport { Main } from '../../../layout';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport NavBar from './partials/NavBar';\r\n\r\nclass ManageMembership extends Component {\r\n    render() {\r\n        return (<Main>\r\n            <DocumentTitle title={`Manage Membership`}/>\r\n\r\n            <div className=\"update-profile bg-body\">\r\n                <div className=\"container\">\r\n                    <Card className=\"mb-4 mb-lg-5\">\r\n                        <Card.Header>Manage Membership</Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"3\" xl=\"4\">\r\n                                    <NavBar />\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\" xl=\"8\" className=\"add-stripe-account\">\r\n                                    Coming Soon\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ManageMembership);","import React, {Component} from 'react';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\nimport { Main } from '../../../layout';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport NavBar from './partials/NavBar';\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport moment from \"moment\";\r\nimport {defaultService} from \"../../../../common/services\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { notificationActions } from \"../../../../common/redux/actions\";\r\nimport {alertSelectors} from \"../../../../common/redux/selectors\";\r\nimport {urlHelper} from \"../../../../helpers\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\n\r\nclass Notifications extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 1,\r\n            pagesize: 20,\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        //const { dispatch, notifications } = this.props;\r\n        //Object.getOwnPropertyNames(notifications).length === 0 && dispatch(notificationActions.list(null));\r\n        //Object.getOwnPropertyNames(notifications).length === 0 && dispatch(notificationActions.actions(null));\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        //console.log(await this.props);\r\n    };\r\n\r\n    read = (item) => {\r\n        const { dispatch } = this.props;\r\n        if(item.seen === false) {\r\n            defaultService.notificationRead({\"selection\":item.message_id}).then(data => {\r\n                dispatch(alertSelectors.success(data.message));\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    };\r\n\r\n    delete = (item) => {\r\n        const { dispatch } = this.props;\r\n\r\n        confirmAlert({\r\n            title: `Please confirm to delete `,\r\n            message: `Are you sure you want to delete this notification?`,\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () =>\r\n                        defaultService.notificationDelete({\"selection\":item.message_id}).then(data => {\r\n                            dispatch(alertSelectors.success(data.message));\r\n                            dispatch(notificationActions.list({page: 1}));\r\n                        }).catch(error => {\r\n                            console.log(error);\r\n                        })\r\n                }\r\n            ]\r\n        });\r\n\r\n    };\r\n\r\n    onChangePage = (page) => {\r\n        const { dispatch } = this.props;\r\n        dispatch(notificationActions.list({page: page}));\r\n    };\r\n\r\n    render() {\r\n        const { notifications } = this.props;\r\n        let notification = (notifications && notifications.list && notifications.list.items) ? notifications.list.items : [];\r\n        return (<Main>\r\n            <DocumentTitle title={`Notifications`}/>\r\n\r\n            <div className=\"update-profile bg-body\">\r\n                <div className=\"container\">\r\n                    <Card className=\"mb-4 mb-lg-5\">\r\n                        <Card.Header>Notifications</Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"3\" xl=\"3\">\r\n                                    <NavBar />\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\" xl=\"9\" className=\"add-stripe-account\">\r\n                                <div className=\"on-icon\">\r\n                                       <p className=\"pay-title\">Notifications</p>\r\n                                       </div>\r\n                                    {(notification && notification === 0) && <div className={'common-not-found p-3 text-center'} style={{minHeight: '240px'}}>\r\n                                        <div className=\"inner\">\r\n                                            <figure>\r\n                                                <img src=\"/images/not-found/No-notification.png\" alt=\"Not found\" width=\"100\" />\r\n                                            </figure>\r\n                                            <h5>NO NOTIFICATIONS YET</h5>\r\n                                            <p className=\"title\">This is where you’ll see all your notifications</p>\r\n                                        </div>\r\n                                    </div>}\r\n                                    <div className=\"notification-list list-group mb-4\">\r\n                                        {notification && notification.map(item => <div className={`list-group-item list-group-item-action d-flex align-items-center ${(item && item.status === 'Read') ? 'bg-white' : 'bg-light'}`} key={item && item.message_id}>\r\n                                            <span className={'w-100'} onClick={() => this.read(item)}><Link to={urlHelper.notifyUrl(item)}>{item && item.notification}</Link></span>\r\n                                            <small className=\"float-right text-muted ml-2 text-nowrap\">{moment(item && item.created_at * 1000).format('LL')}</small>\r\n                                            <button className={'btn btn-outline-info btn-sm float-right ml-2 trash-btn'} onClick={() => this.delete(item)}><i className={'fa fa-trash'}></i></button>\r\n                                        </div>)}\r\n                                    </div>\r\n                                    <Pagination className=\"justify-content-end\"\r\n                                    pageSize={this.state.pagesize}\r\n                                    totalPages={3}\r\n                                    totalCount={(notifications && notifications.list && notifications.list.pagination && notifications.list.pagination.totalCount) ? notifications.list.pagination.totalCount : 10}\r\n                                    onChangePage={this.onChangePage} />\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst notificationSelector = createSelector(\r\n    state => state.notifications,\r\n    notifications => notifications\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector, notificationSelector,\r\n    (process, notifications) => ({\r\n        process, notifications\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(Notifications);\r\n","import React, { Component } from 'react';\r\nimport {createSelector} from \"reselect\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Main } from '../../../layout';\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport NavBar from './partials/NavBar';\r\n\r\nclass UserDetails extends Component {\r\n    render() {\r\n        const { authentication } = this.props;\r\n        let user = authentication.authentication.user;\r\n        return (<Main>\r\n            <DocumentTitle title={`Account Info`}/>\r\n\r\n            <div className=\"update-profile bg-body\">\r\n                <div className=\"container\">\r\n                    <Card className=\"mb-4 mb-lg-5\">\r\n                        <Card.Header>My Account Settings</Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"4\" xl=\"3\">\r\n                                    <NavBar />\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"8\" xl=\"9\" className=\"add-stripe-account\">\r\n                                    <Card.Title>\r\n                                        <span>My Account </span>\r\n                                        <small><Link to={`/user/update`} className=\"float-right\">Edit Profile</Link></small>\r\n                                    </Card.Title>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 mb-3\">\r\n                                            <b className=\"w-20 float-left\">Name:</b>\r\n                                            <span>{user.userProfile.name}</span>\r\n                                        </div>\r\n                                        <div className=\"col-12 mb-3\">\r\n                                            <b className=\"w-20 float-left\">Email:</b>\r\n                                            <span>{authentication.authentication.user.email}</span>\r\n                                        </div>\r\n                                        <div className=\"col mb-3\">\r\n                                            <b className=\"w-20 float-left\">Mobile:</b>\r\n                                            <span>{user.userProfile.mobile}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        {/* <div className=\"col\">\r\n                                            <b className=\"w-40 float-left\">Home Town:</b>\r\n                                            <span>{user.userProfile.hometown}</span>\r\n                                        </div> */}\r\n                                    </div>\r\n                                    {/* <div className=\"row\">\r\n                                        <div className=\"col-12 mb-3\">\r\n                                            <b className=\"w-100 float-left\">Title:</b>\r\n                                            <span>{user.userProfile.title}</span>\r\n                                        </div>\r\n                                        <div className=\"col-12 mb-3\">\r\n                                            <b className=\"w-100 float-left\">About:</b>\r\n                                            <span>{user.userProfile.about}</span>\r\n                                        </div>\r\n                                    </div> */}\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    authenticationSelector,\r\n    (process, authentication) => ({\r\n        process, authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(UserDetails);","import React, {Component, Fragment} from 'react';\r\nimport { Main } from '../../../layout';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport NavBar from './partials/NavBar';\r\nimport Select from 'react-select';\r\nimport { userActions, defaultActions } from \"../../../../common/redux/actions\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { DocumentTitle } from '../../../../helpers/DocumentTitle';\r\nimport InputMask from 'react-input-mask';\r\nimport FormValidator from '../../../../helpers/FormValidator';\r\nimport mccList from '../../../../common/utils/mcc.json';\r\nimport Form from \"react-bootstrap/esm/Form\";\r\nimport DetailsPreview from \"./partials/DetailsPreview\";\r\n\r\nclass StripConnect extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                mcc: '',\r\n                bank_name: '',\r\n                id_number: '',\r\n                routing_number: '',\r\n                account_number: '',\r\n                ssn_last_4: '',\r\n                date_of_birth: '',\r\n                address: '',\r\n                state: '',\r\n                city: '',\r\n                postal_code: '',\r\n                phone: '',\r\n                currency: '',\r\n            },\r\n            submitted: false,\r\n            validation: this.validator().valid(),\r\n            loading: false,\r\n            viewDetails: false,\r\n        };\r\n    }\r\n\r\n    validator() {\r\n        return new FormValidator([\r\n            { field: 'mcc', method: 'isEmpty', validWhen: false, message: 'Industry is required.' },\r\n            { field: 'routing_number', method: 'isEmpty', validWhen: false, message: 'Routing number is required.' },\r\n            { field: 'account_number', method: 'isEmpty', validWhen: false, message: 'Routing Number is required.' },\r\n            { field: 'date_of_birth', method: 'isEmpty', validWhen: false, message: 'Date of birth is required.' },\r\n            { field: 'currency', method: 'isEmpty', validWhen: false, message: 'Currency is required.' },\r\n            { field: 'phone', method: 'isEmpty', validWhen: false, message: 'Phone is required.' },\r\n            { field: 'address', method: 'isEmpty', validWhen: false, message: 'Address is required.' },\r\n            { field: 'state', method: 'isEmpty', validWhen: false, message: 'State is required.' },\r\n            { field: 'city', method: 'isEmpty', validWhen: false, message: 'City is required.' },\r\n            { field: 'postal_code', method: 'isEmpty', validWhen: false, message: 'Postal code is required.' },\r\n        ]);\r\n    };\r\n\r\n    componentWillMount() {\r\n        const { dispatch, countries } = this.props;\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const code = query.get('code');\r\n        code && dispatch(userActions.stripeConnect(\"POST\", { code: code }));\r\n        Object.getOwnPropertyNames(countries).length === 0 && dispatch(defaultActions.countries());\r\n    }\r\n\r\n    stripeDisconnect() {\r\n        const { dispatch } = this.props;\r\n        dispatch(userActions.stripeDisconnect());\r\n    }\r\n\r\n    stripeConnect = () => {\r\n        const { dispatch, } = this.props;\r\n        dispatch(userActions.stripeConnect(\"POST\", {}, { type: \"custom\" }));\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    stripeRetrieve = () => {\r\n        const { dispatch } = this.props;\r\n        dispatch(userActions.stripeRetrieve(\"GET\"));\r\n    };\r\n\r\n    stripeViewDetails = () => {\r\n        this.setState({viewDetails: true})\r\n    }\r\n\r\n    stripeHideDetails = () => {\r\n        this.setState({viewDetails: false})\r\n    }\r\n\r\n    handleSelect = (item, { action, name }) => {\r\n        let formField = { ...this.state.formField };\r\n        formField[name] = item.value;\r\n        this.setState({ formField });\r\n    };\r\n\r\n    handleConnect = (e) => {\r\n        e.preventDefault();\r\n        const { formField } = this.state;\r\n        const validation = this.validator().validate(formField);\r\n        this.setState({ validation, submitted: true, loading: true });\r\n        if (validation.isValid) {\r\n            const { dispatch } = this.props;\r\n            dispatch(userActions.stripeConnect(\"POST\", { userProfile: formField }, { type: \"custom\" }));\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        //const STRIPE_CLIENT_ID = process.env.REACT_APP_STRIPE_CLIENT_ID;\r\n        //const STRIPE_REDIRECT_URI = process.env.REACT_APP_STRIPE_REDIRECT_URI;\r\n        const { countries, authentication } = this.props;\r\n        const { userProfile } = authentication.authentication.user;\r\n        //const STRIPE_STATE_VALUE = 'authorization_code';\r\n        const isStripeConnect = ((userProfile.strip_account_number === null) || (userProfile.strip_account_number === '') || (userProfile.strip_account_number === '0'));\r\n\r\n        const { formField, submitted, validation, viewDetails } = this.state;\r\n        let isValid = submitted ? this.validator().validate(formField) : validation;\r\n        let countriesList = countries.data ? countries.data : [];\r\n\r\n        return (<Main>\r\n            <DocumentTitle title={`Bank Information`} />\r\n            <div className=\"update-profile bg-body\">\r\n                <div className=\"container\">\r\n                    <Card className=\"mb-4 mb-lg-5\">\r\n                        {isStripeConnect && <Card.Header>Add Bank Information to Receive Cash Payments <br /> <small style={{fontSize: '14px', marginTop: '6px', float: 'left'}}>Please enter the bank account information where you would like to receive cash payments made to you.</small></Card.Header>}\r\n                        {!isStripeConnect && <Card.Header>Bank Details <br /> <small style={{fontSize: '14px', marginTop: '6px', float: 'left'}}><b>Disclaimer:</b> The information is confidential and payment are powered by Stripe.</small></Card.Header>}\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"3\" xl=\"4\">\r\n                                    <NavBar instruction=\"bank-details\" />\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\" xl=\"8\" className=\"add-stripe-account\">\r\n                                    <div className=\"py-3 w-100 float-left border-bottom mb-3\">\r\n                                        <div className=\"on-icon\">\r\n                                       <p className=\"pay-title\">Bank Information</p>\r\n                                       </div>\r\n                                        {/* <Card.Title className=\"mb-0\">Bank Information</Card.Title> */}\r\n                                        {!isStripeConnect && <Card.Text className=\"mt-3\" style={{fontWeight: 400}}>Bank Connect allows you to accept credit card payments within the platform for the services that you offer.</Card.Text>}\r\n                                    </div>\r\n                                    <Card className=\"button pl-0\" style={{ boxShadow: 'none', backgroundImage: 'none' }}>\r\n                                        {/*isStripeConnect && <div className=\" d-flex align-items-center\">\r\n                                            <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-info connect-button\"\r\n                                               href={`https://connect.stripe.com/express/oauth/authorize?redirect_uri=${STRIPE_REDIRECT_URI}&client_id=${STRIPE_CLIENT_ID}&state=${STRIPE_STATE_VALUE}`}\r\n                                               ><span>Connect to Stripe</span></a></div>*/}\r\n\r\n                                        {isStripeConnect && <form onSubmit={this.handleConnect}>\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Account Currency <br />(Only 3 char code)</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <Select\r\n                                                        classNamePrefix=\"multi\"\r\n                                                        isSearchable\r\n                                                        defaultValue={formField.currency}\r\n                                                        name=\"currency\"\r\n                                                        onChange={this.handleSelect}\r\n                                                        options={countriesList.map(item => ({ value: item.currency_code, label: `${item.currency_name} (${item.currency_code})` }))} className={'multiple-select mb-2   ' + (submitted && isValid.currency.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.currency.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.currency.message} </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group row mb-0\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Routing Number</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input type=\"text\" value={formField.routing_number} name=\"routing_number\"\r\n                                                           onChange={this.handleChange}\r\n                                                           className={'form-control ' + (submitted && isValid.routing_number.isInvalid ? 'is-invalid' : '')} />\r\n                                                    <small className=\"form-text text-muted\">This is mandatory</small>\r\n                                                    {submitted && isValid.routing_number.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.routing_number.message} </div>\r\n                                                    }\r\n                                                    <hr/>\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            <div className=\"py-3 w-100 float-left border-bottom mb-3\">\r\n                                            <div className=\"on-icon\">\r\n                                       <p className=\"pay-title\">Account Holder Information</p>\r\n                                       </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Id Number (SSN)</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input type=\"text\" className=\"form-control\" value={formField.id_number} name=\"id_number\" onChange={this.handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Routing Number</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input type=\"text\" value={formField.account_number} name=\"account_number\"\r\n                                                           onChange={this.handleChange}\r\n                                                           className={'form-control ' + (submitted && isValid.account_number.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.account_number.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.account_number.message} </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Name on Account</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input type=\"text\" className=\"form-control\" value={formField.bank_name} name=\"bank_name\" onChange={this.handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Address</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input value={formField.address} name=\"address\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.address.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.address.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.address.message} </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">City</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input value={formField.city} name=\"city\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.city.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.city.isInvalid && <div className=\"invalid-feedback\"> {isValid.city.message} </div>}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">State </label>  {/*(Only 2 Char Code)*/}\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input value={formField.state} name=\"state\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.state.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.state.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.state.message} </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Postal Code</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input value={formField.postal_code} name=\"postal_code\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.city.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.postal_code.isInvalid && <div className=\"invalid-feedback\"> {isValid.postal_code.message} </div>}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Phone Number</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <input value={formField.phone} name=\"phone\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.phone.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.phone.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.phone.message} </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Date Of Birth (MM/DD/YYYY)</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <InputMask value={formField.date_of_birth} name=\"date_of_birth\" mask=\"99/99/9999\" onChange={this.handleChange} className={'form-control ' + (submitted && isValid.date_of_birth.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.date_of_birth.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.date_of_birth.message} </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Industry</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <Select\r\n                                                        classNamePrefix=\"multi\"\r\n                                                        isSearchable\r\n                                                        defaultValue={formField.mcc}\r\n                                                        name=\"mcc\"\r\n                                                        onChange={this.handleSelect}\r\n                                                        options={mccList.map(item => ({ value: item.code, label: item.name }))} className={'multiple-select mb-2   ' + (submitted && isValid.mcc.isInvalid ? 'is-invalid' : '')} />\r\n                                                    {submitted && isValid.mcc.isInvalid &&\r\n                                                    <div className=\"invalid-feedback\"> {isValid.mcc.message} </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"row\">\r\n                                                <label className=\"col-sm-3 col-form-label\"></label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <Form.Check\r\n                                                            labelStyle={{fontWeight: 400, fontSize: '12px'}}\r\n                                                            className=\"payment-label-check\"\r\n                                                            custom\r\n                                                            inline\r\n                                                            //name=\"is_co_founder\"\r\n                                                            label=\"I certify that I am the owner and have full authorization to this bank account\"\r\n                                                            //checked={formField.is_co_founder}\r\n                                                            type={\"checkbox\"}\r\n                                                            id={`custom-inline-1`}\r\n                                                            //onChange={this.handleCheckboxChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group text-info\">\r\n                                                        <h3>Please Double-check your account info!</h3>\r\n                                                        <p>Incorrect or mismatched account name and number can result in withdrawal delays and fees.</p>\r\n                                                    </div>\r\n                                                   <div className=\"form-group\">\r\n                                                       <button className=\"btn btn-info mr-3\" type=\"submit\"><i className=\"fas fa-check\"></i> <span>Add Payment Method</span> </button>\r\n                                                   </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </form>}\r\n\r\n\r\n                                        {/*isStripeConnect && <Row>\r\n                                            <Col xs={12} md={6}>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Social Security Number(Last 4 digit)</label>\r\n                                                    <input type=\"text\" className=\"form-control\" value={formField.ssn_last_4} name=\"ssn_last_4\"\r\n                                                        onChange={this.handleChange} />\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>*/}\r\n                                        {/* onClick={this.stripeConnect} */}\r\n\r\n                                        {/*{(viewDetails === true) && <div className=\"payment-details-view\">*/}\r\n                                            {/*<DetailsPreview />*/}\r\n                                            {/*<div className=\"d-flex\">*/}\r\n                                                {/*<button type=\"button\" onClick={() => this.stripeHideDetails()} className=\"btn btn-dark\"> Back </button>*/}\r\n                                            {/*</div>*/}\r\n                                        {/*</div>}*/}\r\n\r\n                                        <div className=\" d-flex align-items-center\">\r\n                                            {!isStripeConnect && <button type=\"button\" onClick={() => this.stripeDisconnect()} className=\"btn btn-info mr-3\"> Disconnect Account </button>}\r\n                                            {!isStripeConnect && <button type=\"button\" onClick={() => this.stripeRetrieve()} className=\"btn btn-primary mr-3\"> Check Account Status </button>}\r\n                                            {/*!isStripeConnect && <button type=\"button\" onClick={() => this.stripeViewDetails()} className=\"btn btn-dark\"> Details Preview </button>*/}\r\n                                        </div>\r\n\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\nconst countriesSelector = createSelector(\r\n    state => state.countries,\r\n    countries => countries\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector, countriesSelector,\r\n    (authentication, countries) => ({\r\n        authentication, countries\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(StripConnect);\r\n","import React, { Component, Fragment } from 'react';\r\nimport Select from \"react-select\";\r\nimport Card from \"react-bootstrap/esm/Card\";\r\nimport InputMask from \"react-input-mask\";\r\nimport mccList from \"../../../../../common/utils/mcc\";\r\nimport Form from \"react-bootstrap/esm/Form\";\r\n\r\nclass DetailsPreview extends Component {\r\n    render() {\r\n        return (<Fragment>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Account Currency <br />(Only 3 char code)</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row mb-0\">\r\n                <label className=\"col-sm-3 col-form-label\">Routing Number</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"py-3 w-100 float-left border-bottom mb-3\">\r\n                <Card.Title className=\"mb-0\">Account Holder Information</Card.Title>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Id Number (SSN)</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Account Number</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Name on Account</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Address</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">City</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">State </label>  {/*(Only 2 Char Code)*/}\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Postal Code</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Phone Number</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Date Of Birth (MM/DD/YYYY)</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Industry</label>\r\n                <div className=\"col-sm-8\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>)\r\n    }\r\n}\r\n\r\nexport default DetailsPreview;","import React, {Component} from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\nimport Select from \"react-select\";\r\nimport {Main} from '../../../layout';\r\nimport Pagination from '../../../../helpers/Pagination';\r\nimport {Table, TableHead, TableRow, TableCell, TableBody,Paper,TableContainer,makeStyles} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {itemService} from \"../../../../common/services\";\r\nimport {DocumentTitle} from \"../../../../helpers/DocumentTitle\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport NavBar from \"./partials/NavBar\";\r\nimport Card from \"react-bootstrap/esm/Card\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    table: {\r\n      minWidth: 50,\r\n    },\r\n  });\r\n\r\nclass Transactions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                startDate: null,\r\n                endDate: null,\r\n                sort: '',\r\n            },\r\n            transactions: null,\r\n            loading: false,\r\n            page: 1,\r\n            pagesize: 20,\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    handleDateChange = (name, fulldate, date) => {\r\n        const formField = {...this.state.formField};\r\n        formField[name] = date;\r\n        this.setState({formField});\r\n        console.log(this.state);\r\n    };\r\n\r\n    handleAll = (item, {action, name}) => {\r\n        const formField = {...this.state.formField};\r\n        formField[name] = item;\r\n        this.setState({formField});\r\n    };\r\n\r\n    onChangePage = (page) => {\r\n        itemService.transactions(\"GET\", {'per-page': 20, page: page}).then(response => {\r\n            //console.log('Responce', response);\r\n            this.setState({transactions: response});\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {formField, transactions} = this.state;\r\n        let results = (transactions && transactions.items) ? transactions.items : null;\r\n        let pagination = (transactions && transactions.pagination) ? transactions.pagination : null;\r\n        const { classes } = this.props;\r\n\r\n        return (<Main>\r\n            <DocumentTitle title={`My Transactions`}/>\r\n            <div className=\"update-profile bg-body pt-5\">\r\n                <div className=\"container\">\r\n                    {/*<div className=\"print text-right\">*/}\r\n                    {/*<Link className=\"btn btn-info mr-2\" to={`/setting/account-info`}>Back</Link>*/}\r\n                    {/*<button className=\"btn btn-primary\">Print</button>*/}\r\n                    {/*</div>*/}\r\n                    <div className=\"card\">\r\n                        {/*<div className=\"card-header d-flex align-items-center\">\r\n                                <h1 className=\"mb-0 pb-0 col pl-0\">My Transactions</h1>\r\n                                <div className=\"action d-flex align-items-center justify-content-center flex-wrap\">*/}\r\n                        {/*<MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                        {/*<div className=\"date\">*/}\r\n                        {/*<KeyboardDatePicker*/}\r\n                        {/*format=\"MM/dd/yyyy\"*/}\r\n                        {/*margin=\"normal\"*/}\r\n                        {/*inputVariant=\"outlined\"*/}\r\n                        {/*id=\"start-date\"*/}\r\n                        {/*name=\"startDate\"*/}\r\n                        {/*label=\"Start Date\"*/}\r\n                        {/*maxDate={new Date()}*/}\r\n                        {/*value={formField.startDate}*/}\r\n                        {/*onChange={this.handleDateChange.bind(this, 'startDate')}*/}\r\n                        {/*/>*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"date\">*/}\r\n                        {/*<KeyboardDatePicker*/}\r\n                        {/*format=\"MM/dd/yyyy\"*/}\r\n                        {/*margin=\"normal\"*/}\r\n                        {/*inputVariant=\"outlined\"*/}\r\n                        {/*id=\"end-date\"*/}\r\n                        {/*name=\"endDate\"*/}\r\n                        {/*label=\"End Date\"*/}\r\n                        {/*value={formField.endDate}*/}\r\n                        {/*onChange={this.handleDateChange}*/}\r\n                        {/*KeyboardButtonProps={{*/}\r\n                        {/*'aria-label': 'change date',*/}\r\n                        {/*}}*/}\r\n                        {/*/>*/}\r\n                        {/*</div>*/}\r\n                        {/*</MuiPickersUtilsProvider>*/}\r\n                        {/*<div className=\"sort\">*/}\r\n                        {/*<Select*/}\r\n                        {/*className=\"multiple-select\"*/}\r\n                        {/*classNamePrefix=\"multi\"*/}\r\n                        {/*placeholder=\"Sort By\"*/}\r\n                        {/*name=\"sort\"*/}\r\n                        {/*onChange={this.handleAll}*/}\r\n                        {/*options={[{ value: \"id\", label: \"Ascending\" }, { value: \"-id\", label: \"Descending\" }]} />*/}\r\n                        {/*</div>*/}\r\n                        {/*</div>\r\n                            </div>*/}\r\n                        <Card.Header>My Transactions</Card.Header>\r\n                        <div className=\"card-body\">\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"3\" xl=\"3\">\r\n                                    <NavBar/>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\" xl=\"9\" className=\"add-stripe-account\">\r\n                                <div className=\"on-icon\">\r\n                                       <p className=\"pay-title\">My Transactions</p>\r\n                                       </div>\r\n                                    {/* <Table aria-label=\"simple table\" className=\"mb-4 border\" >\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Transaction ID</TableCell>\r\n                                                <TableCell>Transaction Date</TableCell>\r\n                                                <TableCell>Contract Name</TableCell>\r\n                                                <TableCell>Admin Fee</TableCell>\r\n                                                <TableCell>Amount</TableCell>\r\n                                                <TableCell>Transfer</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {(results && results.length === 0) && <TableRow>\r\n                                                <TableCell colSpan={5}>\r\n                                                    <div\r\n                                                        className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                                        <div className=\"inner text-center\">\r\n                                                            <figure>\r\n                                                                <img src=\"/images/not-found/My-Transactions.png\"\r\n                                                                     alt=\"Image\" width=\"100\"/>\r\n                                                            </figure>\r\n                                                            <h5>YOU DON’T HAVE ANY TRANSACTION YET</h5>\r\n                                                            <p className=\"title\">This is where you’ll be able to track\r\n                                                                all your transactions</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                            </TableRow>}\r\n                                            {results && results.map(item => (\r\n                                                <TableRow key={item.id}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {item.transactionID}\r\n                                                    </TableCell>\r\n                                                    <TableCell>{moment(item.created_at * 1000).format('LLL')}</TableCell>\r\n                                                    <TableCell>{item.proposal.item.title}</TableCell>\r\n                                                    <TableCell>${item.admin_fee}</TableCell>\r\n                                                    <TableCell>${item.total_amount}</TableCell>\r\n                                                    <TableCell>${item.transfer_amount}</TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table> */}\r\n <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"right\" className=\"table-text\">Transaction ID</TableCell>\r\n            <TableCell align=\"right\" className=\"table-text\">Transaction Date</TableCell>\r\n            <TableCell align=\"right\" className=\"table-text\">Contract Name</TableCell>\r\n            <TableCell align=\"right\" className=\"table-text\">Admin Fee</TableCell>\r\n            <TableCell align=\"right\" className=\"table-text\">Amount</TableCell>\r\n            <TableCell align=\"right\" className=\"table-text\">Transfer</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {(results && results.length === 0) && <TableRow>\r\n              <TableCell colSpan={5}>\r\n              <div\r\n                                                        className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n                                                        <div className=\"inner text-center\">\r\n                                                            <figure>\r\n                                                                <img src=\"/images/not-found/My-Transactions.png\"\r\n                                                                     alt=\"Image\" width=\"100\"/>\r\n                                                            </figure>\r\n                                                            <h5>YOU DON’T HAVE ANY TRANSACTION YET</h5>\r\n                                                            <p className=\"title\">This is where you’ll be able to track\r\n                                                                all your transactions</p>\r\n                                                        </div>\r\n                                                    </div>\r\n              </TableCell>\r\n            </TableRow>}\r\n\r\n{results && results.map(item => (\r\n    <TableRow key={item.id}>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n            {item.transactionID}\r\n        </TableCell>\r\n        <TableCell>{moment(item.created_at * 1000).format('LLL')}</TableCell>\r\n        <TableCell>{item.proposal.item.title}</TableCell>\r\n        <TableCell>${item.admin_fee}</TableCell>\r\n        <TableCell>${item.total_amount}</TableCell>\r\n        <TableCell>${item.transfer_amount}</TableCell>\r\n    </TableRow>\r\n))}\r\n          \r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n\r\n\r\n\r\n                                    <Pagination className=\"justify-content-center\"\r\n                                                pageSize={pagination && pagination.pageSize}\r\n                                                totalCount={(pagination && pagination.pageCount) ? pagination.pageCount : 1}\r\n                                                onChangePage={this.onChangePage}/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Transactions);","import React from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ContractNavbar = (props) => {\r\n\r\n    const { itemLink } = props;\r\n    return (\r\n        <div className=\"public-navbar card mb-4\">\r\n            <div className=\"card-body\">\r\n                <nav className=\"nav\">\r\n                    <NavLink className=\"nav-link\" to={itemLink +`/cash`}>Cash</NavLink>\r\n                    <NavLink className=\"nav-link\" to={itemLink + `/exchange`}>Exchange</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst userSelector = createSelector(\r\n    state => state.user,\r\n    user => user\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    userSelector,\r\n    (user) => ({\r\n        user\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ContractNavbar);\r\n","import React, { Component } from 'react';\r\nimport { Main } from '../../layout';\r\nimport ContractNavbar from './partials/ContractNavbar';\r\nimport { DocumentTitle } from \"../../../helpers/DocumentTitle\";\r\n\r\nclass ContractLayout extends Component {\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { children, title, status, itemLink } = this.props;\r\n        return (<Main>\r\n            <DocumentTitle title={ title } />\r\n            <div className=\"my-services bg-body RecievedProposals\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-1\">\r\n                            <h1 className=\"d-flex align-items-center\">\r\n                                <span className=\"col pl-0\">{title}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <ContractNavbar itemLink={itemLink} title={title} status={status} />\r\n                            {children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nexport default ContractLayout;\r\n","import React, { Component } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { globalService as gs, itemService } from '../../../common/services';\r\nimport { ContractItems } from './partials';\r\nimport ContractLayout from './ContractLayout';\r\nimport Pagination from \"../../../helpers/Pagination\";\r\n\r\nclass ContractListing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: null,\r\n            status: null,\r\n            module: null,\r\n            settlement: null,\r\n            itemLink: null,\r\n            q: '',\r\n            loading: false,\r\n            page: 1\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(this.props.path !== nextProps.path) {\r\n            this.props = nextProps;\r\n            //this.setState({ ...this.state, q:'' });\r\n            const { title, status, module, settlement, itemLink} = this.props;\r\n            this.loadProposal(status, module, settlement, 1);\r\n            this.setState({ title, status, module, settlement, itemLink});\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const  { title, status, module, settlement, itemLink} = this.props;\r\n        //this.loadProposal(status, module, settlement);\r\n        this.setState( { title, status, module, settlement, itemLink});\r\n    }\r\n\r\n    loadProposal = (status, module, settlement, page, q = null) => {\r\n        this.setState({ loading: true });\r\n        const user_id = gs.identity && gs.identity.user && gs.identity.user.id;\r\n        if(user_id){\r\n            itemService.proposal(\"GET\", null, { recipient_id: user_id, status: status, module: module, settlement: settlement, page: page, q: q }).then(response => {\r\n                this.setState({ proposals: response, loading: false });\r\n            });\r\n        }\r\n    };\r\n\r\n    onChangePage = (page) => {\r\n        this.setState({ page });\r\n        const { status, module, settlement} = this.props;\r\n        this.loadProposal(status, module, settlement, page, this.state.q);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        let formField = { ...this.state };\r\n        formField[e.target.name] = e.target.value;\r\n        this.setState( formField );\r\n    };\r\n\r\n    submitSerch = () => {\r\n        const { status, module, settlement} = this.props;\r\n        this.loadProposal(status, module, settlement, 1, this.state.q);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { settlement } = this.props;\r\n        const { title, status, proposals, itemLink, loading , q} = this.state;\r\n        let results = proposals && proposals.items ? proposals.items : [];\r\n        let pagination = proposals && proposals.pagination ? proposals.pagination : [];\r\n        return (<ContractLayout title={title} status={status} itemLink={itemLink}>\r\n            <div className=\"card service-box\">\r\n                <div className=\"card-body p-3\">\r\n                    <div className=\"input-group mb-0\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"q\" value={q} placeholder=\"Search...\" onChange={this.handleChange} style={{height: '40px'}} />\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-info\" type=\"button\" onClick={this.submitSerch}>Search</button>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {loading ? <div className=\"card service-box\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"spinner-border text-info\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : results && \r\n            <ContractItems results={results} pagination={pagination} status={status} settlement={settlement} title={title}  />}\r\n            <div>\r\n                <Pagination className=\"justify-content-end\"\r\n                            pageSize={pagination && pagination.pageSize}\r\n                            totalCount={(pagination && pagination.totalCount) ? pagination.totalCount : 1}\r\n                            onChangePage={this.onChangePage} />\r\n            </div>\r\n        </ContractLayout>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst proposalSelector = createSelector(\r\n    state => state.proposals,\r\n    proposals => proposals\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    proposalSelector,\r\n    (process, proposals) => ({\r\n        process,\r\n        proposals\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ContractListing);","import React, { Component } from 'react';\r\nimport { Main } from \"../../layout\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { proposalActions } from \"../../../common/redux/actions\";\r\nimport { DocumentTitle } from \"../../../helpers/DocumentTitle\";\r\nimport { globalService as gs } from '../../../common/services';\r\nimport ContractItems from './partials/ContractItems';\r\n\r\nclass OffersListing extends Component {\r\n\r\n    componentWillMount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(proposalActions.index(\"GET\", null, { recipient_id: gs.identity.user.id, type: \"Offers\" }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(proposalActions.clear());\r\n    }\r\n\r\n    deleteProposal = () => {\r\n\r\n    };\r\n\r\n    render() {\r\n        const { proposals, process } = this.props;\r\n        let results = proposals.items ? proposals.items : [];\r\n\r\n        return (<Main>\r\n            <DocumentTitle title=\"Offers\" />\r\n            <div className=\"my-services bg-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-3\">\r\n                            <h1 className=\"d-flex align-items-center\">\r\n                                <span className=\"col pl-0\">My Offers</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {process.loading ? <div className=\"card service-box\"><div className=\"card-body\"><div className=\"d-flex justify-content-center\"><div className=\"spinner-border text-info\"><span className=\"sr-only\">Loading...</span></div></div></div></div> : <ContractItems results={results} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst proposalSelector = createSelector(\r\n    state => state.proposals,\r\n    proposals => proposals\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    proposalSelector,\r\n    (process, proposals) => ({\r\n        process,\r\n        proposals\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(OffersListing);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CoverLatter extends Component {\r\n\r\n    render() {\r\n        const { proposal } = this.props;\r\n        const media = proposal.media;\r\n        const questions = proposal.userItemProposalAnswers;\r\n        return (<Fragment>\r\n            <div className=\"card mb-4 milestones\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"offer\">\r\n                        <h5>Job Proposal</h5>\r\n                    </div>\r\n                    <div className=\"milestones-box \">\r\n                        <div className=\"card-body\">\r\n                            {(proposal.budget) && <h6 className=\"card-title pb-3\">\r\n                                <span className=\"pr-2\">Budget:</span> <span className=\"font-weight-bold text-primary\">${proposal.budget}</span>\r\n                            </h6>}\r\n\r\n                            <h6 className=\"card-title mb-1\">Job Proposal</h6>\r\n\r\n                            <div className=\"card-text\" style={{fontSize: '13px', fontWeight: 400}}>{proposal.comment}</div>\r\n\r\n                            <h6 className=\"card-title mb-1\">Questions About this Job</h6>\r\n\r\n                            <div className=\"card-text\" style={{fontSize: '13px', fontWeight: 400}}>{proposal.comment}</div>\r\n\r\n                            {((media && media.image) || (media && media.docs) || (media && media.video)) && <Fragment>\r\n                                <h6 className=\"card-title mb-3\">Documents</h6>\r\n                                <div className=\"image-list mb-3\">\r\n                                    <div className=\"row padding-5\">\r\n                                        {media.image && media.image.map((item) =>\r\n                                            <div className=\"col-lg-2 col-4\" key={`image-${item.media.id}`} >\r\n                                                <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                    <img src={item.media.thumb} alt=\"\" className=\"img-fluid w-100\"\r\n                                                         style={{ maxHeight: '170px', maxWidth: \"100%\" }} />\r\n                                                    <div className=\"text-truncate px-1\" title={item.media.filename}>\r\n                                                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={item.media.path} download><small>{item.media.filename}</small></a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {media.docs && media.docs.map((item) =>\r\n                                            <div className=\"col-lg-2 col-4\" key={`image-${item.media.id}`} >\r\n                                                <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                    <div className=\"d-flex align-items-center justify-content-center\" style={{height: '110px'}}>\r\n                                                        {(item.media.mimetype === 'application/pdf') ?\r\n                                                            <i className=\"far fa-file-pdf fa-3x text-info\"></i>\r\n                                                            : (item.media.mimetype === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') ?\r\n                                                                <i className=\"far fa-file-word fa-3x text-info\"></i>\r\n                                                                : <i className=\"far fa-file fa-3x text-info\"></i>}\r\n                                                    </div>\r\n                                                    <div className=\"text-truncate px-1\" title={item.media.filename}>\r\n                                                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={item.media.path} download><small>{item.media.filename}</small></a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {media.video && media.video.map((item) =>\r\n                                            <div className=\"col-lg-2 col-4\" key={`video-${item.media.id}`}>\r\n                                                <div className=\"upload-box border text-center mb-2 bg-white\">\r\n                                                    <video style={{ height: '100px', width: \"100%\" }} controls>\r\n                                                        <source src={item.path} type={item.media.type} />\r\n                                                        Your browser does not support the video tag.\r\n                                                    </video>\r\n                                                    <div className=\"text-truncate px-1\" title={item.media.filename}>\r\n                                                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={item.media.path} download><small>{item.media.filename}</small></a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>}\r\n\r\n\r\n                            {(questions.length > 0) && <Fragment>\r\n                                <h6 className=\"card-title mb-3\">Questions</h6>\r\n\r\n                                {questions && questions.map((item) =>\r\n                                    <Fragment key={`ques${item.question_id}`}>\r\n                                        <h6 className=\"card-title mb-1\"><small className=\"font-weight-bold\">{item.question.question}</small></h6>\r\n                                        <div className=\"card-text\" style={{fontSize: '13px', fontWeight: 400}}>{item.answer}</div>\r\n                                    </Fragment>\r\n                                )}\r\n                            </Fragment>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>)\r\n    }\r\n}\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    (process) => ({\r\n        process,\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(CoverLatter);","import React, {Component, Fragment} from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { Main } from '../../layout';\r\nimport { DocumentTitle } from '../../../helpers/DocumentTitle';\r\nimport { BuyerView, ItemView, CounterOffer, RatingReviewForm, ContractDeclined, MessageForm, MilestoneForm, Milestones, DisputeForm, BidProposal } from './partials';\r\nimport { globalService as gs } from '../../../common/services';\r\nimport { ModuleHelper as mh, commonHelper as common } from '../../../helpers';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { alertSelectors } from '../../../common/redux/selectors';\r\nimport { proposalActions } from '../../../common/redux/actions';\r\nimport { messageActions } from '../../../common/redux/actions/message.actions';\r\nimport { SearchLoader } from '../../../common/loaders';\r\nimport moment from 'moment';\r\nimport RatingReview from \"../../components/Service/partials/RatingReview\";\r\nimport CoverLatter from \"./partials/CoverLatter\";\r\nimport { history } from '../../../helpers/history';\r\n\r\nconst status_pending = 0;\r\nconst status_declined = 2;\r\nconst status_accepted = 1;\r\nconst status_offers = 3;\r\nconst status_counter_offers = 9;\r\nconst status_payment_confirm = 4;\r\nconst status_mark_as_completed = 5;\r\nconst status_not_completed = 6;\r\nconst status_completed = 7;\r\nconst status_accepted_and_closed = 8;\r\nconst status_refund = 10;\r\nconst status_bid = 11;\r\n\r\n/* Milestone status */\r\nconst status_milestone_new = 0;\r\nconst status_milestone_submission = 1;\r\nconst status_milestone_approved = 2;\r\nconst status_milestone_not_approved = 3;\r\nconst status_milestone_payment = 4;\r\n\r\nconst confirmedStatuses = [\r\n    status_accepted,\r\n    status_accepted_and_closed,\r\n    status_payment_confirm,\r\n    status_mark_as_completed,\r\n    status_not_completed,\r\n    status_completed\r\n];\r\n\r\nconst paymentConfirmedStatuses = [status_payment_confirm, status_mark_as_completed, status_not_completed];\r\nconst offersStatuses = [status_bid, status_offers, status_counter_offers, status_pending];\r\nconst forWaitingStatuses = [status_offers, status_pending, status_mark_as_completed, status_counter_offers];\r\nconst deletedStatuses = [status_offers, status_pending];\r\nconst acceptedStatuses = [status_accepted, status_accepted_and_closed];\r\n\r\nclass ContractView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formField: {\r\n                comment: '',\r\n                status: '',\r\n            },\r\n            messageKey: null,\r\n            setOffer: false,\r\n            setReview: false,\r\n            setDispute: false,\r\n            setMessage: false,\r\n            setAccepted: false,\r\n            setDeclined: false,\r\n            setMilestone: false,\r\n            proposal: null,\r\n            proposalItem: null,\r\n            settlement: null,\r\n            proposalServices: null,\r\n            proposalHistories: null,\r\n            buyer: null,\r\n            isProvider: false,\r\n            id: null,\r\n            attachment: null,\r\n            stripeKey: process.env.REACT_APP_STRIPE_PUBLIC_KEY,\r\n            proposalInitialOffer: null,\r\n            proposalCounterOffer: null,\r\n            proposalDeclinedOffer: null,\r\n            viewCoverLatter: false,\r\n        };\r\n        this.messageKey = null;\r\n        this.isHideMesageButton = false;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(proposalActions.clear());\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        const { dispatch, match } = this.props;\r\n        const id = match.params.id ? match.params.id : null;\r\n        dispatch(proposalActions.proposal(\"GET\", null, { proposal_id: id }));\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { match } = this.props;\r\n        const id = match.params.id ? match.params.id : null;\r\n        this.setState({ id: id });\r\n    }\r\n\r\n    componentWillUpdate = (props) => {\r\n        if (props.proposals && props.proposals.item && this.state.messageKey === null) {\r\n            this.messageKey = props.proposals.item.model.message_id;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    proposalDeclined = () => {\r\n        this.setState({\r\n            setDeclined: true\r\n        });\r\n    };\r\n\r\n    declinedClose = () => {\r\n        this.setState({\r\n            setDeclined: false\r\n        });\r\n    };\r\n\r\n    offerOpen = () => {\r\n        this.setState({\r\n            setOffer: true\r\n        })\r\n    };\r\n\r\n    offerClose = () => {\r\n        this.setState({\r\n            setOffer: false\r\n        });\r\n    };\r\n\r\n    milestoneOpen = () => {\r\n        this.setState({\r\n            setMilestone: true\r\n        })\r\n    };\r\n\r\n    milestoneClose = () => {\r\n        this.setState({\r\n            setMilestone: false\r\n        });\r\n    };\r\n\r\n    messageOpen = () => {\r\n        this.messageKey ?\r\n            gs.navigation('message', true, {'key':this.messageKey}) :\r\n            this.setState({\r\n                setMessage: true\r\n            });\r\n    };\r\n\r\n    messageClose = () => {\r\n        this.setState({\r\n            setMessage: false\r\n        });\r\n    };\r\n\r\n    reviewOpen = () => {\r\n        this.setState({\r\n            setReview: true\r\n        });\r\n    };\r\n\r\n    reviewClose = () => {\r\n        const { dispatch, match } = this.props;\r\n        const id = match.params.id ? match.params.id : null;\r\n        this.setState({\r\n            setReview: false\r\n        });\r\n        dispatch(proposalActions.proposal(\"GET\", null, { proposal_id: id }));\r\n    };\r\n\r\n    disputeOpen = () => {\r\n        this.setState({\r\n            setDispute: true\r\n        });\r\n    };\r\n\r\n    disputeClose = () => {\r\n        const { dispatch, match } = this.props;\r\n        const id = match.params.id ? match.params.id : null;\r\n        this.setState({\r\n            setDispute: false\r\n        });\r\n        dispatch(proposalActions.proposal(\"GET\", null, { proposal_id: id }));\r\n    };\r\n\r\n\r\n\r\n    message = (text, subject = null) => {\r\n        const { dispatch, proposals } = this.props;\r\n        const { attachment } = this.state;\r\n        const proposal = proposals.item.model;\r\n        const messageKey = proposals.item.model.message_id;\r\n        let params = common.messenger(text, subject, proposal, attachment);\r\n        dispatch(messageActions.sendMessageToFirebase(params, messageKey));\r\n        this.isHideMesageButton = false;\r\n        return true;\r\n    };\r\n\r\n    onPayment = (token) => {\r\n        const { dispatch } = this.props;\r\n        const { id } = this.state;\r\n        const param = {};\r\n        param.action_by = gs.identity.user.id;\r\n        param.token = token;\r\n        param.userMessage = (param.status === 4) ? this.message('Payment successfully done.') : null;\r\n        dispatch(proposalActions.proposal(\"POST\", { userProposal: param }, { proposal_id: id }));\r\n    };\r\n\r\n    proposalAccepted = (e) => {\r\n        e.preventDefault();\r\n        this.isConfirmDialog('status_accepted', 'Are you sure you want to accept this offer?');\r\n    };\r\n\r\n    markAsCompleted = (e) => {\r\n        e.preventDefault();\r\n        const { proposals } = this.props;\r\n        const proposal = proposals.item.model;\r\n        let module = (proposal.moduleId === mh.UserService) ? 'service' : 'job';\r\n        this.isConfirmDialog('status_mark_as_completed', `Are you sure you want to mark this ${module} contract as completed?`);\r\n    };\r\n\r\n    contractAccepted = (e) => {\r\n        e.preventDefault();\r\n        this.isConfirmDialog('status_completed');\r\n    };\r\n\r\n    contractDeclined = (e) => {\r\n        e.preventDefault();\r\n        this.isConfirmDialog('status_not_completed', 'Are you sure you want to decline the completion request?');\r\n    };\r\n\r\n    proposalAcceptAndClosed = (e) => {\r\n        e.preventDefault();\r\n        this.isConfirmDialog('status_accepted_and_closed', 'Are you sure you want to accept this offer?');\r\n    };\r\n\r\n    proposalRemoved = (e) => {\r\n        e.preventDefault();\r\n        this.isConfirmDialog('status_delete_proposal', 'Are you sure, you want to delete the Offer?');\r\n    };\r\n\r\n    viewCoverLatter = () => {\r\n        const { viewCoverLatter } = this.state;\r\n        this.setState((currentState) => ({\r\n            viewCoverLatter: !viewCoverLatter,\r\n        }));\r\n        //console.log(this.state.viewCoverLatter)\r\n    }\r\n\r\n    proposalAction = (action = 'offer', comment = null) => {\r\n        const { dispatch, type, proposals } = this.props;\r\n        const proposal = proposals.item.model;\r\n        let module = (proposal.moduleId === mh.UserService) ? 'services' : 'jobs';\r\n\r\n        let menuTitle = gs.capitalize(module);\r\n        let menuItem = (proposal.moduleId === mh.UserService) ? 'Offers' : 'Proposal';\r\n        const { id } = this.state;\r\n        if (action === \"status_delete_proposal\") {\r\n            let link = `offers-${type.toLowerCase()}-${module}-${proposal.settlement}`;\r\n            console.log(\"message_id:\", proposal.message_id)\r\n            gs.deleteFirebaseMessage(proposal.message_id);\r\n            dispatch(proposalActions.proposal(\"DELETE\", null, { proposal_id: id }, link));\r\n            return;\r\n        }\r\n\r\n        const param = {};\r\n        if (comment !== null) {\r\n            param.comment = comment;\r\n        }\r\n        param.userMessage = null;\r\n        let alert_message = null;\r\n\r\n        switch (action) {\r\n            case 'status_accepted':\r\n                param.status = status_accepted;\r\n                param.userMessage = this.message(`Offer is accepted, You can now access it under ${menuTitle} > Accepted ${menuItem}`);\r\n                alert_message = `You have accepted the offer.`;\r\n                this.tip = `Offer is accepted, You can now access it under ${menuTitle} > Accepted ${menuItem}`;\r\n                break;\r\n            case 'status_accepted_and_closed':\r\n                param.status = status_accepted_and_closed;\r\n                param.userMessage = this.message(`Offer accepted and closed, You can now access it under ${menuTitle} > Accepted ${menuItem}`);\r\n                alert_message = `You have accepted and closed the job offer.`;\r\n                break;\r\n            case 'status_declined':\r\n                param.status = status_declined;\r\n                alert_message = `You have declined the offer.`;\r\n                break;\r\n            case 'status_mark_as_completed':\r\n                param.status = status_mark_as_completed;\r\n                param.userMessage = this.message(`Your ${menuItem} contract has been marked as complete, please go to ${menuItem} details to approve it.`);\r\n                alert_message = `You have mark as completed the work.`;\r\n                break;\r\n            case 'status_not_completed':\r\n                param.status = status_not_completed;\r\n                param.userMessage = this.message('It is not completed, please continue.');\r\n                alert_message = `You have mark as not completed the work.`;\r\n                break;\r\n            case 'status_completed':\r\n                param.status = status_completed;\r\n                param.userMessage = this.message('It is completed.');\r\n                alert_message = `You have completed the work.`;\r\n                break;\r\n            case 'status_payment_confirm':\r\n                param.status = status_payment_confirm;\r\n                param.userMessage = this.message(`Congratulations! $${proposal.budget} has been funded for this contract.`);\r\n                alert_message = `You completed the Payment.`;\r\n                break;\r\n            case 'status_counter_offers':\r\n                param.status = status_counter_offers;\r\n                param.userMessage = this.message('You have submit the counter offer.');\r\n                alert_message = `You have submit the counter offer.`;\r\n                break;\r\n\r\n            default:\r\n                param.status = status_offers;\r\n                alert_message = `You submit the offer.`;\r\n        }\r\n        param.action_by = gs.identity.user.id;\r\n        dispatch(proposalActions.proposal(\"POST\", { userProposal: param }, { proposal_id: id }));\r\n        dispatch(alertSelectors.success(alert_message));\r\n    };\r\n\r\n\r\n\r\n    isConfirmDialog = (action, message = null) => {\r\n        const { dispatch } = this.props;\r\n        confirmAlert({\r\n            //title: `Confirm Request`,\r\n            message: (message === null ? `Are you sure you want to accept the completion request?` : message),\r\n            buttons: [\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => dispatch(alertSelectors.success(\"You have not accepted the request.\"))\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => this.proposalAction(action)\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    stripeConnect = () => {\r\n        history.push('/setting/stripe-connect');\r\n        //const { dispatch, } = this.props;\r\n        //dispatch(userActions.stripeConnect(\"POST\", {}, { type: \"custom\" }));\r\n    };\r\n\r\n    proposalOffers = (proposalHistories) => {\r\n        const offers = {};\r\n        if (proposalHistories) {\r\n            proposalHistories.map((item) => {\r\n                switch (true) {\r\n                    case (parseInt(item.status) === parseInt(status_offers)):\r\n                        offers.initialize = item;\r\n                        break;\r\n                    case (parseInt(item.status) === parseInt(status_counter_offers)):\r\n                        offers.counter = item;\r\n                        break;\r\n                    case (parseInt(item.status) === parseInt(status_declined)):\r\n                        offers.declined = item;\r\n                        break;\r\n                    default:\r\n                }\r\n            });\r\n        }\r\n        return offers;\r\n    };\r\n\r\n    showTip = (proposal, isJob = false) => {\r\n        let tip = null;\r\n        switch (true) {\r\n            case (paymentConfirmedStatuses.includes(proposal.status) && (proposal.settlement === \"cash\") && !isJob):\r\n                tip = `Congratulations! $${proposal.budget} has been funded for this contract. <br/ >`;\r\n                tip += `Please note: Payment will be transferred once the contract is completed.`;\r\n                break;\r\n            case ((proposal.status === status_completed) && (proposal.settlement === \"cash\") && !isJob):\r\n                tip = `Congratulations! $${proposal.budget} has been transferred to your account.`;\r\n                break;\r\n        }\r\n        this.tip = tip;\r\n    };\r\n\r\n    render() {\r\n        const { proposals, authentication } = this.props;\r\n        const strip_account_number = authentication.authentication.user.userProfile.strip_account_number;\r\n\r\n        if (proposals && proposals.item) {\r\n            const { setReview, setDispute, setDeclined, setOffer, setMessage, setMilestone, viewCoverLatter } = this.state;\r\n            const proposal = proposals.item.model;\r\n            const proposalItem = proposal.item;\r\n            const proposalMilestones = proposal.userItemProposalMilestones;\r\n            const settlement = proposal.settlement;\r\n            const proposalServices = proposal.userItemProposalServices;\r\n            const proposalHistories = this.proposalOffers(proposal.userItemProposalHistories);\r\n\r\n            const isJobProposal = (proposal.moduleId === mh.UserItem);\r\n            const itemModule = isJobProposal ? mh.UserItem : mh.UserService;\r\n            const itemProvider = proposal.provider;\r\n            const itemOwner = proposalItem && proposalItem.user;\r\n            const itemType = proposalItem && proposalItem.type;\r\n            const isProvider = gs.isOwner(proposal.provider_id);\r\n            const isActionBy = gs.isOwner(proposal.action_by);\r\n            const proposalFromProvider = proposal.proposalFromProvider;\r\n            const proposalFromOwner = proposal.proposalFromOwner;\r\n            const isDispute = (proposal.isDispute === true);\r\n\r\n            const messageKey = proposal.message_id;\r\n            const proposalMarkCompleted = (proposal.status === status_mark_as_completed);\r\n            const proposalMarkNotCompleted = (proposal.status === status_not_completed);\r\n            const proposalCompleted = (proposal.status === status_completed);\r\n            const isVisibleConformation = !isActionBy && offersStatuses.includes(proposal.status);\r\n            const proposalApproved = confirmedStatuses.includes(proposal.status);\r\n            const isFinalOffer = (proposal.status === status_counter_offers);\r\n            const isRefunded = (proposal.status === status_refund);\r\n\r\n            const isStripeConnect = !((strip_account_number === null) || (strip_account_number === '') || (strip_account_number === '0') || (strip_account_number === undefined));\r\n\r\n            const isVisibleOffer = ((proposal.status === status_offers) || (proposal.status === status_bid)) && !isActionBy && !isFinalOffer && offersStatuses.includes(proposal.status) && isStripeConnect;\r\n            const isBid = (proposal.status === status_bid);\r\n\r\n            const isVisibleWaitingApproval = isActionBy && forWaitingStatuses.includes(proposal.status);\r\n            const isVisibleDelete = isProvider && deletedStatuses.includes(proposal.status);\r\n\r\n            const isVisibleMilestone = (acceptedStatuses.includes(proposal.status) && (isJobProposal === true) && (proposal.settlement === \"cash\"));\r\n\r\n            const isVisiblePayment = ((isProvider && isJobProposal === false) && acceptedStatuses.includes(proposal.status) && (proposal.transcation_id === null) && (proposal.settlement === \"cash\"));\r\n\r\n            const isVisibleMessage = (messageKey || ((isJobProposal === true && !isProvider) || (isProvider && isJobProposal === false))) && (proposal.status !== status_declined) && (this.isHideMesageButton === false);\r\n\r\n           // console.log(\"isVisibleMessage:\", isVisibleMessage, this.isHideMesageButton , messageKey)\r\n\r\n            const proposalPaymentConfirm = ((proposal.settlement === \"exchange\" && acceptedStatuses.includes(proposal.status)) || (proposal.settlement === \"cash\" && proposal.status === status_payment_confirm)) || (isJobProposal === true && acceptedStatuses.includes(proposal.status)) ;\r\n\r\n            const isVisibleReview = (proposal.isReview === false) && proposalCompleted && !isDispute;\r\n            const isVisibleRatingReview = (proposal.isReview === true);\r\n\r\n            const isVisibleEndContract = (proposalPaymentConfirm || (proposalMarkNotCompleted && !isActionBy)) && !isVisibleReview;\r\n            const isVisibleConfirmEndContract = proposalMarkCompleted && !isActionBy && !isVisibleReview;\r\n\r\n            const isVisibleDispute = proposalApproved && !isDispute && !proposal.isReview && (proposal.settlement !== \"exchange\");\r\n\r\n            const proposalAmount = (proposal.settlement === \"cash\") ? ((parseInt(proposal.budget) + parseInt(proposal.budget) * 3 / 100) * 100) : null;\r\n            const moduleTitle = (isJobProposal === true) ? 'Job' : 'Service';\r\n            const proposalTitle = `${moduleTitle} Proposal`;\r\n            const providerTitle = (isJobProposal === true) ? 'Bidder' : 'Buyer';\r\n            const proposalTypeTitle = (isJobProposal === true) ? ((itemType === 'fixed') ? 'Milestone' : 'Timesheet') : '';\r\n            const contractCompletedTitle = (proposal.settlement === \"cash\") ? \"If the service is fulfilled\" : \"If both the services have been fulfilled\";\r\n            this.showTip(proposal, isJobProposal);\r\n            const offerTitle = (proposal.settlement === \"cash\") ? `Submit ${isBid === true ? '' : 'Counter'} Offer` : \"Request a different Service to exchange\";\r\n\r\n            return (<Main>\r\n                <DocumentTitle title={`${proposalTitle}`} />\r\n                {proposal && proposalItem && <div className=\"service-proposal bg-body\">\r\n\r\n                    {isVisibleReview && setReview && <RatingReviewForm open={setReview} item={proposal} buyer={isProvider ? itemOwner : itemProvider} reviewClose={this.reviewClose} moduleTitle={moduleTitle} />}\r\n\r\n                    {isVisibleDispute && setDispute && <DisputeForm open={setDispute} item={proposal} disputeClose={this.disputeClose} moduleTitle={moduleTitle} />}\r\n\r\n                    {setOffer && <CounterOffer open={setOffer} item={proposal} offerClose={this.offerClose} moduleTitle={offerTitle} status={proposal.status} message={this.message}/>}\r\n\r\n                    {setMessage && <MessageForm open={setMessage} item={proposal} messageKey={messageKey} module={mh.UserItemProposal} messageClose={this.messageClose} message={this.message} moduleTitle={moduleTitle} />}\r\n\r\n                   {setDeclined && <ContractDeclined open={setDeclined} item={proposal} declinedClose={this.declinedClose} moduleTitle={moduleTitle} />}\r\n\r\n                   {setMilestone && <MilestoneForm open={setMilestone} proposal_id={proposal.id} budget={proposal.budget} milestoneClose={this.milestoneClose} message={this.message} type={proposalTypeTitle} />}\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"pb-2\">{`${proposalTitle}`} <small style={{fontSize: '13px', paddingLeft: '15px'}}>{moment(proposal.updated_at * 1000).format('LLL')}</small></h1>\r\n                                {/*<div className=\"date pr-3 w-25\">*/}\r\n                                    {/*{moment(proposal.updated_at * 1000).format('LLL')}*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n                            <div className=\"col-md-4 col-12\">\r\n                                <ItemView item={proposalItem} settlement={settlement} itemType={itemType} moduleTitle={moduleTitle} />\r\n                                {(!isBid || gs.isOwner(proposalItem.user_id)) && <BuyerView messageOpen={this.messageOpen} isVisibleMessage={isVisibleMessage} item={isProvider ? itemOwner : itemProvider} settlement={settlement} title={isProvider ? 'Owner Info' : `${providerTitle} Info`} moduleTitle={moduleTitle} />}\r\n                            </div>\r\n                            {proposal && <div className=\"col-md-8 col-12\">\r\n                                {!isBid && <div className=\"card mb-4 offerInfo\">\r\n                                    <div className=\"card-body p-3\">\r\n                                        <div className=\"bg-body p-3\">\r\n                                            {this.tip && <div className=\"alert alert-success mb-3\" dangerouslySetInnerHTML={{ __html: this.tip }}></div>}\r\n\r\n                                            {/* Service cass offer start */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"offer col-12\">\r\n                                                    <h5>Offer Type</h5>\r\n                                                    <div className=\"mb-1 d-flex justify-content-between\">\r\n                                                        <div className=\"fixed badge badge-primary\">{settlement}</div>\r\n                                                        <div>\r\n                                                            {(mh.UserItem === itemModule) && <button className=\"btn btn-outline-primary scroll\" onClick={this.viewCoverLatter}>View Job Proposal </button>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                {proposalHistories && proposalHistories.initialize && <div className=\"offer col-12\">\r\n                                                    {settlement === \"cash\" && <div className=\"mb-0\">\r\n                                                        <h5 className=\"mb-1\">Initial Offer Price - <big className=\"font-weight-bold text-primary\">${proposalHistories.initialize.budget}</big></h5>\r\n                                                        <small style={{fontSize: '85%'}}>{proposalHistories.initialize.comment}</small>\r\n                                                    </div>}\r\n                                                </div>}\r\n                                                {proposalHistories && proposalHistories.counter && <div className=\"offer col-12\">\r\n                                                    {settlement === \"cash\" && <div className=\"mb-0\">\r\n                                                        <h5 className=\"mb-1\">Counter Offer Price - <big className=\"font-weight-bold text-primary\">${proposalHistories.counter.budget}</big></h5>\r\n                                                        <small style={{fontSize: '85%'}}>{proposalHistories.counter.comment}</small>\r\n                                                    </div>}\r\n                                                </div>}\r\n                                            </div>\r\n                                            {/* Service cass offer end */}\r\n\r\n                                            {/* Service cass exchange start */}\r\n                                            {settlement === 'exchange' && <div className=\"W-100\">\r\n                                                {proposalHistories && proposalHistories.initialize && <div className=\"initial-offer\">\r\n                                                    <h5>Initial Offer</h5>\r\n                                                    <div className=\"chip-group\">\r\n                                                        {proposalServices.map(item => {\r\n                                                            return ((item.action_by === proposal.provider_id) && (<div className=\"badge badge-secondary\" key={`proposal-service-${item.service_id}-${item.action_by}`}>{item.title.toUpperCase()}</div>))\r\n                                                        })}\r\n                                                        <div className=\"text\">{proposalHistories && proposalHistories.initialize.comment}</div>\r\n                                                    </div>\r\n                                                </div>}\r\n\r\n                                                {(proposalHistories && proposalHistories.counter) && <div className=\"initial-offer\">\r\n                                                    <h5>Request a different service to exchange</h5>\r\n                                                    <div className=\"chip-group\">\r\n                                                        {proposalServices.map(item => {\r\n                                                            return ((item.action_by === proposalItem.user_id) && (<div className=\"badge badge-secondary\" key={`proposal-service-${item.service_id}`}>{item.title.toUpperCase()}</div>))\r\n                                                        })}\r\n                                                        <div className=\"text\"> {proposalHistories.counter.comment}</div>\r\n                                                    </div>\r\n                                                </div>}\r\n                                            </div>}\r\n                                            {/* Service cass exchange end */}\r\n\r\n                                            {isDispute && <h5 className=\"text-center text-info font-weight-bold\">Waiting for dispute to be resolved</h5>}\r\n                                            {isRefunded && <h5 className=\"text-center text-info font-weight-bold\">Refund & Closed</h5>}\r\n\r\n                                            {(proposal.status === status_declined) && (proposalHistories && proposalHistories.declined) &&\r\n                                                <div className=\"offer-declined\"><div className=\"action\">\r\n                                                    <span className=\"badge badge-danger\">Declined</span>\r\n                                                </div>\r\n                                                    <div className=\"chip-group\">\r\n                                                        <div className=\"text\"><b>Reason:</b> {proposalHistories.declined.comment}</div>\r\n                                                    </div>\r\n                                                </div>}\r\n\r\n\r\n                                            {(!isDispute || !isRefunded) && <div className=\"action\">\r\n\r\n                                                {isVisibleConformation && !isBid && <h5>Would you like to accept the offer request?</h5>}\r\n                                                <div className=\"mb-3\">\r\n                                                    {/* {isVisibleMessage && <button className=\"btn btn-primary\" onClick={this.messageOpen}><i className=\"far fa-comments\"></i> Message</button>} */}\r\n\r\n                                                    {isVisibleConformation && !isBid && <Fragment>\r\n\r\n                                                        {(isStripeConnect === true) && <button className=\"btn btn-outline-primary\" onClick={this.proposalAccepted}><i className=\"fas fa-check\"></i> Accept </button>}\r\n\r\n                                                        {(isStripeConnect === false) && <button className=\"btn btn-outline-primary\" onClick={this.stripeConnect}><i className=\"fas fa-check\"></i> Add Payment Method </button>}\r\n\r\n                                                        {isJobProposal && gs.isOwner(proposalItem.user_id) && <button className=\"btn btn-outline-primary\" onClick={this.proposalAcceptAndClosed}><i className=\"fas fa-check\"></i> Accept and Close job for bid </button>}\r\n\r\n                                                        <button className=\"btn btn-outline-info\" onClick={this.proposalDeclined}><i className=\"fas fa-times\"></i> Decline</button>\r\n\r\n                                                    </Fragment>}\r\n                                                    {isVisibleOffer && <button className={`btn btn-outline-primary ${(moduleTitle === 'Job') ? 'ml-0' : ''}`} onClick={this.offerOpen}><i className=\"fas fa-redo-alt\"></i> {(settlement === \"cash\") ? `Submit Counter Offer` : 'Request a different Service to exchange'} </button>}\r\n\r\n                                                    {isVisibleWaitingApproval && <button className=\"btn btn-outline-info\" style={{ pointerEvents: \"none\" }}><i className=\"fas fa-check\"></i> WAITING FOR APPROVAL</button>}\r\n\r\n                                                    {isVisibleDelete && <button className=\"btn btn-outline-danger\" onClick={this.proposalRemoved}><i className=\"fas fa-remove\"></i> Delete</button>}\r\n\r\n                                                    {!isDispute && isVisiblePayment && <div className=\"btn btn-info\"><StripeCheckout token={this.onPayment} stripeKey={this.state.stripeKey} amount={proposalAmount} image={`${gs.rootUrl}/images/stripe_logo.png`} ComponentClass=\"div\" label=\"Pay Now\" panelLabel=\"Pay Now\">\r\n                                                        Payment\r\n                                                    </StripeCheckout></div>}\r\n\r\n                                                    {isVisibleDispute && <button className=\"btn btn-outline-primary\" onClick={this.disputeOpen}><i className=\"fas fa-redo-alt\"></i> Dispute</button>}\r\n\r\n                                                    {isVisibleReview && <button className=\"btn btn-outline-primary\" onClick={this.reviewOpen}><i className=\"fas fa-redo-alt\"></i> Rating & Review</button>}\r\n\r\n                                                    {!isDispute && isVisibleMilestone && <button className=\"btn btn-outline-info\" onClick={this.milestoneOpen}><i className=\"fas fa-redo-alt\"></i> {`${proposalTypeTitle} and Payment`}</button>}\r\n\r\n                                                </div>\r\n\r\n                                                {isVisibleEndContract && <div className=\"mt-3\">\r\n                                                    <h5>{`${contractCompletedTitle}, would you like to mark this service contract as completed?`}</h5>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <button className=\"btn btn-outline-info\" onClick={this.markAsCompleted}> Contract Completed</button>\r\n                                                    </div>\r\n                                                </div>}\r\n\r\n                                                {isVisibleConfirmEndContract && <div className=\"mt-3\">\r\n                                                    <h5>Do you agree to end the contract? </h5>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <button className=\"btn btn-outline-success\" onClick={this.contractAccepted}><i className=\"fas fa-check\"></i> Accept </button>\r\n                                                        <button className=\"btn btn-outline-info\" onClick={this.contractDeclined}><i className=\"fas fa-times\"></i> Decline</button>\r\n                                                    </div>\r\n                                                </div>}\r\n\r\n                                            </div>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                                {isBid && <BidProposal item={proposalItem} proposal={proposal} offerOpen={this.offerOpen} messageOpen={this.messageOpen} proposalDeclined={this.proposalDeclined} isVisibleMessage={isVisibleMessage}/>}\r\n                                {(proposalMilestones.length > 0) && <Milestones items={proposalMilestones} proposal={proposal} message={this.message} type={proposalTypeTitle} />}\r\n                                {viewCoverLatter && <CoverLatter proposal={proposal} /> }\r\n                                {isVisibleRatingReview && <RatingReview item={proposalItem} moduleId={itemModule} isShowDropdown={false} isShowAvgRating={false} proposal={proposal} />}\r\n\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </Main>);\r\n        }\r\n        return (<Main>\r\n            <DocumentTitle title=\"Proposals\" />\r\n            <div className=\"service-proposal bg-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1>Proposals</h1>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-12\">\r\n                            <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={1} width={150} />\r\n                        </div>\r\n                        <div className=\"col-md-8 col-12\">\r\n                            <SearchLoader primaryBg={\"#ddd\"} secondaryBg={\"#999\"} listCount={2} width={500} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Main>);\r\n    }\r\n}\r\n\r\n\r\nconst processSelector = createSelector(\r\n    state => state.process,\r\n    process => process\r\n);\r\n\r\nconst proposalSelector = createSelector(\r\n    state => state.proposals,\r\n    proposals => proposals\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    processSelector,\r\n    proposalSelector,\r\n    authenticationSelector,\r\n    (process, proposals, authentication) => ({\r\n        process,\r\n        proposals,\r\n        authentication\r\n    })\r\n);\r\n\r\nexport default connect(mapStateToProps)(ContractView);\r\n","import React, { Component } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport \"./Compose.css\";\r\nimport FormValidator from \"../../../../helpers/FormValidator\";\r\nimport { messageActions } from \"../../../../common/redux/actions\";\r\nimport { globalService as gs } from \"../../../../common/services\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Compose extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { current } = props;\r\n\t\tconst authentication = gs.parseItem('authentication');\r\n\t\tthis.state = {\r\n\t\t\tactiveKey:  current.key,\r\n\t\t\tcurrent: current,\r\n\t\t\tuser_id: authentication.user.id,\r\n\t\t\tcreatedAt: null,\r\n\t\t\tformField: {\r\n\t\t\t\ttext: '',\r\n\t\t\t},\r\n\t\t\tsubmitted: false,\r\n\t\t\tis_attachment: false,\r\n\t\t\tattachment: false,\r\n\t\t\tdocs: [],\r\n\t\t\timages: [],\r\n\t\t\tis_uploaded: true,\r\n\t\t\tvalidation: this.validator().valid(),\r\n\t\t};\r\n\t\t//this.attachments = [];\r\n\t\tthis.group = current.group;\r\n\t\tthis.item = current.item;\r\n\t\tthis.initializeState = this.state;\r\n\t}\r\n\r\n\tcomponentDidMount = async () => {\r\n\t\tawait this.findUnRead();\r\n\t};\r\n\r\n\tcomponentWillReceiveProps = async () => {\r\n\t\tawait this.findUnRead();\r\n\t};\r\n\r\n\tfindUnRead = async () => {\r\n\t\tconst { profile, activeKey, current } = this.props;\r\n\t\tconst currentRecipients = gs.ObjectToArray(current.message.recipients);\r\n\t\tconst rootRef = await gs.db.ref(`UserMessage/${activeKey}`);\r\n\t\tconst user_id = parseInt(this.state.user_id);\r\n\t\tcurrentRecipients.map((recipient) => {\r\n\t\t\tconst userId = recipient.id;\r\n\t\t\trootRef.orderByChild(`recipients/${userId}/status`)\r\n\t\t\t\t.equalTo('unread')\r\n\t\t\t\t.once(\"value\").then(async (snap) => {\r\n\t\t\t\t\tconst items = gs.ObjectToArray(snap.val());\r\n\t\t\t\t\tlet count = parseInt(items.length);\r\n\t\t\t\t\trecipient.unread = (userId === user_id) ? count : (count + 1);\r\n\t\t\t\t\tcurrent.message.recipients[userId] = recipient;\r\n\t\t\t\t\tthis.setState({ profile, activeKey, current });\r\n\t\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\r\n\thandleChange = (e) => {\r\n\t\tlet formField = { ...this.state.formField };\r\n\t\tformField[e.target.name] = e.target.value;\r\n\t\tthis.setState({ formField });\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { formField, user_id, activeKey, current } = this.state;\r\n\t\tconst { dispatch, } = this.props;\r\n\t\tconst validation = this.validator().validate(formField);\r\n\t\tthis.setState({ validation, submitted: true });\r\n\t\tconst params = {};\r\n\t\tparams.text = formField.text;\r\n\t\tparams.recipients = gs.ObjectToArray(current.message.recipients);\r\n\t\tparams.group = current.group;\r\n\t\tparams.item = current.item;\r\n\t\tparams.user_id = user_id;\r\n\t\tparams.attachment = null;\r\n\t\tif (validation.isValid) {\r\n\t\t\tdispatch(messageActions.sendMessageToFirebase(params, activeKey));\r\n\t\t\tthis.setState(this.initializeState);\r\n\t\t}\r\n\t};\r\n\r\n\tvalidator() {\r\n\t\treturn new FormValidator([\r\n\t\t\t{ field: 'text', method: 'isEmpty', validWhen: false, message: 'Text is required.' },\r\n\t\t]);\r\n\t};\r\n\r\n\taddAttachment = (attachment, createdAt) => {\r\n\t\tconst { user_id, activeKey, current } = this.state;\r\n\t\tconst { dispatch, } = this.props;\r\n\t\tconst params = {};\r\n\t\tparams.text = attachment;\r\n\t\tparams.recipients = gs.ObjectToArray(current.message.recipients);\r\n\t\tparams.group = this.group;\r\n\t\tparams.item = this.item;\r\n\t\tparams.user_id = user_id;\r\n\t\tif (createdAt !== null) {\r\n\t\t\tparams.created_at = createdAt;\r\n\t\t}\r\n\t\tparams.attachment = attachment;\r\n\t\tdispatch(messageActions.sendMessageToFirebase(params, activeKey));\r\n\t\tthis.setState(this.initializeState);\r\n\t};\r\n\r\n\thandleUpload = (e) => {\r\n\t\t// Create file metadata including the content type\r\n\t\tconst files = e.target.files;\r\n\t\tconst storage = gs.storage;\r\n\t\tconst { activeKey } = this.state;\r\n\t\tconst self = this;\r\n\t\tif (files !== null) {\r\n\t\t\tthis.setState({ attachment: files, });\r\n\t\t\tlet i = 0;\r\n\t\t\tfor (let file of files) {\r\n\t\t\t\ti = i + 1;\r\n\t\t\t\tconst mime = (file.type === null) ? 'application/octet-stream' : file.type;\r\n\t\t\t\tvar metadata = { contentType: mime, };\r\n\t\t\t\tconst createdAt = parseInt(Date.now()) + parseInt(i);\r\n\t\t\t\tconst upload = storage.ref(`${activeKey}/${createdAt}/${file.name}`).put(file, metadata);\r\n\t\t\t\tupload.on('state_changed', this.progress, this.error, this.success);\r\n\t\t\t\tupload.then(function (snapshot) {\r\n\t\t\t\t\tlet attachment = snapshot.ref.getDownloadURL();\r\n\t\t\t\t\tattachment.then(function (downloadURL) {\r\n\t\t\t\t\t\tself.addAttachment(downloadURL, createdAt);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tprogress = (snapshot) => {\r\n\t\t// Observe state change events such as progress, pause, and resume\r\n\t\tlet progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n\t\tconsole.log('Upload is ' + progress + '% done');\r\n\t\tswitch (snapshot.state) {\r\n\t\t\tcase 'paused': // or 'paused'\r\n\t\t\t\tconsole.log('Upload is paused');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'running': // or 'running'\r\n\t\t\t\tconsole.log('Upload is running');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\terror = (error) => {\r\n\t\tconsole.error(error);\r\n\t}\r\n\r\n\tsuccess = () => {\r\n\t\t//this.setState({ is_uploaded: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { formField, submitted, validation } = this.state;\r\n\t\tlet isValid = submitted ? this.validator().validate(formField) : validation;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"w-100\">\r\n\t\t\t\t<form className=\"compose border-top\" name=\"service\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\" noValidate>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName={'compose-input ' + (submitted && isValid.text.isInvalid ? 'is-invalid' : '')}\r\n\t\t\t\t\t\tplaceholder=\"Write a reply...\"\r\n\t\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={formField.text}\r\n\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\taccept=\"*\"\r\n\t\t\t\t\t\tid=\"icon-button-file\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tclassName=\"d-none\"\r\n\t\t\t\t\t\tonChange={this.handleUpload}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"icon-button-file\" className=\"mt-2 mr-1\">\r\n\t\t\t\t\t\t<IconButton variant=\"contained\" aria-label=\"upload picture\" component=\"span\">\r\n\t\t\t\t\t\t\t<Icon color=\"primary\" className=\"fas fa-paperclip\"></Icon>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<div className=\"fab-loading\">\r\n                        <Fab color=\"primary\" type=\"submit\" size=\"small\" disabled={false} aria-label=\"add\">\r\n                            <Icon size=\"22\">send</Icon>\r\n                        </Fab>\r\n                        {/*<CircularProgress size={68} className=\"circular\" />*/}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst processSelector = createSelector(\r\n\tstate => state.process,\r\n\tprocess => process\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n\tstate => state.authentication,\r\n\tauthentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n\tprocessSelector,\r\n\tauthenticationSelector,\r\n\t(process, authentication) => ({\r\n\t\tprocess,\r\n\t\tauthentication\r\n\t})\r\n);\r\n\r\nexport default connect(mapStateToProps)(Compose);\r\n","import React, { Component } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./UserProfile.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ModuleHelper as mh } from \"../../../../helpers\";\r\n\r\nclass UserProfile extends Component {\r\n\r\n  _showName = () => {\r\n    const { profile } = this.props\r\n    return (profile && <h6 className=\"mb-0\">{profile.name}</h6>);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { current, profile } = this.props;\r\n    let image = (current.group.image === \"\") ? profile.avater : current.group.image;\r\n    return (\r\n      current && current.group &&\r\n      <div className=\"w-100\">\r\n        <div className=\"top-profile border-bottom d-flex align-items-center\">\r\n          <div className=\"profile\">\r\n            <img\r\n              src={image}\r\n              alt=\"Profile\"\r\n              width=\"60\"\r\n              height=\"60\"\r\n              className=\"img-fluid rounded-circle\"\r\n            />\r\n          </div>\r\n          <div className=\"caption col pr-0 d-flex align-items-center\">\r\n            <div className=\"title col pl-0\">\r\n              <h5 className=\"mb-0 conv-title\">{current.group.title}</h5>\r\n              <p className=\"user-name\">{(current.item.module === mh.UserItemProposal) && this._showName()}</p>\r\n              <p className=\"mb-0\">{current.group.hometown}</p>\r\n            </div>\r\n            <div className=\"action\">\r\n              {((current.item.module === mh.UserItemProposal) && (<Link to={`/contracts/view/${current.item.item_id}`} className=\"btn btn-info view-det-btn\">View Details</Link>))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst processSelector = createSelector(\r\n  state => state.process,\r\n  process => process\r\n);\r\n\r\nconst messageSelector = createSelector(\r\n  state => state.message,\r\n  message => message\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n  state => state.authentication,\r\n  authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n  processSelector,\r\n  messageSelector,\r\n  authenticationSelector,\r\n  (process, message, authentication) => ({\r\n    process,\r\n    message,\r\n    authentication\r\n  })\r\n);\r\n\r\nexport default connect(mapStateToProps)(UserProfile);\r\n","import React, { Component } from 'react';\r\nimport { globalService as gs } from '../../../../common/services';\r\n\r\n\r\nclass Attachment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            activeKey: props.activeKey,\r\n            createdAt: props.createdAt,\r\n            text: props.text,\r\n            attachment: props.attachment,\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { attachment } = this.state;\r\n        let extension = gs.fileExtension(attachment);\r\n        if(gs.checkImage(extension) === true){\r\n            this.getImagesHttpUrl();\r\n        }\r\n        // this.getAttachmentHttpUrl();\r\n        // this.getLargeImagesHttpUrl();\r\n    };\r\n\r\n    /*getAttachmentHttpUrl = () => {\r\n        const { activeKey, createdAt } = this.state;\r\n        const self = this;\r\n        const storageRef = gs.storage.ref(`${activeKey}/${createdAt}`);\r\n        storageRef && storageRef.listAll().then((result) => {\r\n            if (result.items.length > 0) {\r\n                result.items.forEach(async (imageRef) => {\r\n                    await imageRef.getDownloadURL().then(async (url) => {\r\n                        let extension = gs.fileExtension(url);\r\n                        if (gs.checkImage(extension) === false) {\r\n                            this.attachments.push(url);\r\n                        }\r\n                    });\r\n                    self.setState({ loading: false, attachments: this.attachments });\r\n                });\r\n            }\r\n        });\r\n    };\r\n    getLargeImagesHttpUrl = () => {\r\n        const { activeKey, createdAt } = this.state;\r\n        const self = this;\r\n        const storageRef = gs.storage.ref(`${activeKey}/${createdAt}`);\r\n        storageRef && storageRef.listAll().then((result) => {\r\n            if (result.items.length > 0) {\r\n                result.items.forEach(async (imageRef) => {\r\n                    await imageRef.getDownloadURL().then(async (url) => {\r\n                        let extension = gs.fileExtension(url);\r\n                        if (gs.checkImage(extension) === true) {\r\n                            await this.largeAttachments.push(url);\r\n                        }\r\n                    });\r\n                    self.setState({ largeAttachments: this.largeAttachments });\r\n                });\r\n            }\r\n        });\r\n    };\r\n    */\r\n\r\n    getImagesHttpUrl = () => {\r\n        const { activeKey, createdAt } = this.state;\r\n        const self = this;\r\n        const storageRef = gs.storage.ref(`${activeKey}/${createdAt}/thumbs`);\r\n        storageRef && storageRef.listAll().then((result) => {\r\n            if (result.items.length > 0) {\r\n                result.items.forEach(async (imageRef) => {\r\n                    await imageRef.getDownloadURL().then(async (url) => {\r\n                        let extension = gs.fileExtension(url);\r\n                        if (gs.checkImage(extension) === true && url.indexOf('200x200') !== -1) {\r\n                            self.setState({ attachment: url });\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    renderItem = (uri) => {\r\n        const { attachment } = this.state;\r\n        let extension = gs.fileExtension(uri);\r\n        let icons = gs.classIcon(extension);\r\n        return (uri !== undefined || uri !== '' || uri !== null) ? ((gs.checkImage(extension) === true) ?\r\n            (<a href={`${uri}`} target=\"_blank\" rel=\"noopener noreferrer\"><img src={attachment} width=\"200\" /></a>) : (<a href={`${uri}`} target=\"_blank\" rel=\"noopener noreferrer\"><i className={`fa-6x far fa-file-${icons}`}></i></a>)) : (<span></span>);\r\n    };\r\n\r\n    render() {\r\n        const { attachment } = this.state;\r\n        let extension = gs.fileExtension(attachment);\r\n        if (gs.checkImage(extension) === true) {\r\n            return ( attachment === null ) ? (<div className=\"attachments\">Loading....</div>) : (<div className=\"attachments\">{this.renderItem(this.props.attachment)}</div>)\r\n        } else {\r\n            return (<div className=\"attachments\">{this.renderItem(this.props.attachment)}</div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Attachment;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport Compose from \"../Compose\";\r\nimport moment from 'moment';\r\nimport UserProfile from \"../UserProfile\";\r\nimport Attachment from \"./Attachment\";\r\nimport { globalService as gs } from \"../../../../common/services\";\r\nimport { animateScroll } from \"react-scroll\";\r\nimport \"./MessageList.scss\";\r\nimport \"./Message.css\";\r\n\r\nclass MessageList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: null,\r\n      threads: [],\r\n      activeKey: props.activeKey,\r\n      current: props.current,\r\n      profile: props.recipient,\r\n      user_id: gs.identity.user.id,\r\n      previousAt: null,\r\n      lastAt: Date.now(),\r\n      loading: true,\r\n      error: null,\r\n      refreshing: false,\r\n      isOnly: false,\r\n      attachment: null,\r\n      attachments: null,\r\n    };\r\n    this.attachmentDated = null;\r\n    this.initilizeState = this.state;\r\n    this.previousAt = Date.now();\r\n    this.lastAt = Date.now();\r\n    this.messagingRef = React.createRef();\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    const { activeKey } = this.state;\r\n    this._isMounted = true;\r\n    let query = gs.db.ref(`UserMessage/${activeKey}`)\r\n    query.on(\"child_added\", (snap) => {\r\n      this.setState((preState) => {\r\n        return { threads: [...preState.threads, snap.val()] }\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this._mount(this.props);\r\n    this.scrollToBottom()\r\n  }\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom = () => {\r\n    animateScroll.scrollToBottom({containerId: \"messagingContainer\"});\r\n    //this.messagingRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.setState(this.initilizeState);\r\n  }\r\n\r\n  /*\r\n  componentWillReceiveProps = (props) => {\r\n    let newCurrent = props && props.current;\r\n    const { activeKey, current } = this.props;\r\n    if (newCurrent && (props.activeKey === activeKey)) {\r\n      this.scrollDown(current);\r\n    }\r\n  }\r\n  scrollDown = (current) => {\r\n    this.setState({ refreshing: true, isOnly: true, current, activeKey: current.key }, () => {\r\n      this.load(current);\r\n    });\r\n  };\r\n  _mount = (props) => {\r\n    let current = props && props.current;\r\n    if (current && (current.key !== this.state.activeKey)) {\r\n      this.setState({ threads: [], current, activeKey: current.key }, () => {\r\n        this.load(current, Date.now());\r\n      });\r\n    }\r\n  };\r\n\r\n  load = (current) => {\r\n    const { isOnly, lastAt, previousAt } = this.state;\r\n    let currentPreviousAt = (isOnly) ? Date.now() : this.previousAt;\r\n    if (current) {\r\n      gs.db.ref(`UserMessage/${current.key}`)\r\n        .orderByChild('created_at')\r\n        .endAt(currentPreviousAt)\r\n        .limitToLast(isOnly ? 1 : 50)\r\n        .on(\"value\", (snap) => {\r\n          if ((this.lastAt === lastAt || lastAt === null) && (this.previousAt === previousAt || previousAt === null)) {\r\n            let threads = snap && gs.ObjectToArray(snap.val());\r\n            this.process(threads);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  process = (items) => {\r\n    const { current } = this.state;\r\n    let threads = [];\r\n    const isOnly = this.state.isOnly;\r\n    if (current !== null) {\r\n      let tempThreads = (isOnly === true) ? [...this.state.threads, ...items] : [...items, ...this.state.threads];\r\n      tempThreads = tempThreads.filter((v, i, a) => a.indexOf(v) === i);\r\n      threads = tempThreads.sort((a, b) => (a.created_at > b.created_at ? 1 : (a.created_at < b.created_at ? -1 : 0)));\r\n      this.previousAt = threads && threads[0] && (parseInt(threads[0]['created_at'] - 1));\r\n      this.lastAt = threads && (parseInt(threads[threads.length - 1]['created_at'] - 1));\r\n      this.setState({ threads, previousAt: this.previousAt, lastAt: this.lastAt, refreshing: false, isOnly: false });\r\n      if (isOnly === true) {\r\n        let ref = this.messagingRef;\r\n        if (ref.current !== null) {\r\n          ref.current.scrollTop = ref.current.scrollHeight;\r\n        }\r\n      }\r\n    }\r\n  };\r\n    handleRefresh = () => {\r\n    let ref = this.messagingRef;\r\n    const scrollTop = ref.current.scrollTop;\r\n    if (scrollTop === 0) {\r\n      this.setState({ refreshing: true, isOnly: false }, () => {\r\n        this.load(this.state.current);\r\n        ref.current.scrollTop = 20;\r\n      });\r\n    }\r\n  }\r\n  */\r\n\r\n  getProfile = (current) => {\r\n    const { profile } = this.state;\r\n    return (profile) && (<UserProfile current={current} profile={profile} />);\r\n  };\r\n\r\n  renderMessage = (idx, data, activeKey) => {\r\n    const isMine = Number.isInteger(data.sender) ? (parseInt(gs.identity.user.id) === parseInt(data.sender)) :\r\n      (parseInt(gs.identity.user.id) === parseInt(data.sender.id));\r\n    const friendlyTimestamp = moment(data.created_at).format('LLLL');\r\n\r\n    return (\r\n      <div key={idx} className={isMine === true ? 'message mine' : 'message'}>\r\n        <div className=\"bubble-container\">\r\n          <div className=\"bubble\" title={friendlyTimestamp}>\r\n            {(data.is_attachment === true) ? (<Attachment activeKey={activeKey} createdAt={data.created_at} attachment={data.text} />) : (<div dangerouslySetInnerHTML={{ __html: (data && data.text) }}></div>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { threads, profile, activeKey, current } = this.state;\r\n    return (\r\n      <Fragment>\r\n        {current &&\r\n          <div className=\"message-list\">\r\n            {(current.group === undefined || current.group === null) && profile ? this.getProfile(current) : (<UserProfile current={current} profile={profile} />)}\r\n            {<div name=\"messaging\" className={\"message-list-container css-scroll\"}\r\n              id=\"messagingContainer\">\r\n                {(threads && threads.length) ? threads.map((thread, idx) => this.renderMessage(idx, thread, activeKey)) : this.renderLoading()}\r\n            </div>}\r\n            <Compose profile={profile} activeKey={activeKey} current={current} />\r\n          </div>\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  renderLoading = () => {\r\n    return (\r\n      <div className=\"blank_page d-flex align-items-center justify-content-center w-100 h-100\">\r\n        <div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n          <div className=\"inner text-center\">\r\n            <figure>\r\n              <img src=\"/images/not-found/message-empty.png\" alt=\"message empty\" width=\"100\" />\r\n            </figure>\r\n            <h5>Loading.....</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst processSelector = createSelector(\r\n  state => state.process,\r\n  process => process\r\n);\r\n\r\nconst authenticationSelector = createSelector(\r\n  state => state.authentication,\r\n  authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n  processSelector,\r\n  authenticationSelector,\r\n  (process, authentication) => ({\r\n    process,\r\n    authentication,\r\n  })\r\n);\r\n\r\nexport default connect(mapStateToProps)(MessageList);\r\n","import React, { Component } from 'react';\r\nimport './ConversationSearch.css';\r\n\r\nclass ConversationSearch extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  search: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//console.log(this.props);\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t  search: e.target.value\r\n\t\t});\r\n\t\tthis.props.onChange(e.target.value)\r\n\t};\r\n\r\n  \trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"conversation-search border-bottom\">\r\n\t\t\t\t<input type=\"search\" className=\"conversation-search-input\" placeholder=\"Search Messages\" name=\"search\" value={this.state.search} onChange={this.handleChange} />\r\n\t\t\t</div>\r\n\t\t);\r\n  \t}\r\n}\r\n\r\nexport default ConversationSearch;","import React, { Component } from 'react';\r\nimport { FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\r\nimport './ConversationModule.css';\r\nimport { ModuleHelper as mh } from '../../../../helpers';\r\n\r\n\r\nclass ConversationModule extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmodule: 'All',\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { module, modules } = this.props;\r\n\t\tthis.setState({ module })\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tconst { module } = props;\r\n\t\tthis.setState({ module });\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tmodule: e.target.value\r\n\t\t});\r\n\t\tthis.props.setModule(e.target.value);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { module } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"pr-3\">\r\n\t\t\t\t<FormControl className=\"select-type\">\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tid=\"simple-message-type\"\r\n\t\t\t\t\t\tvalue={module}\r\n\t\t\t\t\t\tname=\"messageType\"\r\n\t\t\t\t\t\tonChange={this.handleChange}>\r\n\t\t\t\t\t\t<MenuItem value={'All'}>All</MenuItem>\r\n\t\t\t\t\t\t{this.props.modules && this.props.modules.map((item) => (<MenuItem key={item} value={item}>{mh.moduleTitle(item)}</MenuItem>))}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</div>);\r\n\t}\r\n}\r\n\r\nexport default ConversationModule;","import React, { Component } from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport { history } from '../../../../helpers/history';\r\nimport { globalService as gs } from '../../../../common/services';\r\nimport { commonHelper as common } from '../../../../helpers';\r\nimport './ConversationListItem.scss';\r\n\r\nclass ConversationListItem extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeKey: null, user_id: parseInt(gs.identity.user.id), recipient: props.recipient };\r\n  }\r\n\r\n  loadNewMessage = (current) => {\r\n\r\n    const {  activeKey } = this.props;\r\n    if (activeKey === current.key) return false;\r\n\r\n    if (current.group === null || current.group === undefined) {\r\n      current.group = { image: this.state.recipient.avatar, name: this.state.recipient.name };\r\n    }\r\n    this.props.changeCurrent(current);\r\n    this.setState({ activeKey: current.key });\r\n    history.push(`/messages/?${common.urlParams('key', current.key)}`);\r\n  };\r\n\r\n  getImage = () => {\r\n    const { recipient } = this.state;\r\n    return recipient && (<img className=\"conversation-photo\" src={recipient.avater} alt={recipient.name} />)\r\n  }\r\n\r\n  getTitle = () => {\r\n    const { recipient } = this.state;\r\n    return (recipient) && (<span className=\"col pl-0 pr-2\">{recipient.name}</span>);\r\n  };\r\n\r\n  groupImage = (group) => {\r\n    let groupImage = group.image === '' ? '/images/no-image.jpg' : group.image;\r\n    return (<img className=\"conversation-photo\" src={groupImage} alt={group.title} />)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { data, searchParam, activeKey } = this.props;\r\n    const { message, key } = data;\r\n    if (data.group === null || data.group === undefined) {\r\n      data.group = null;\r\n    }\r\n\r\n    const search = new URLSearchParams(searchParam.location.search);\r\n    const searchKey = search.get(\"key\") === null ? activeKey : search.get(\"key\");\r\n    let cr = data.recipients[gs.identity.user.id];\r\n    const unread = cr === undefined ? 0 : cr.unread;\r\n    const dateTime = moment(message.created_at).format('HH:mm');\r\n    const oldDay = new Date().getTime() - (24 * 60 * 60 * 1000);\r\n    const dateFormat = (message.created_at > oldDay) ? dateTime : moment(message.created_at).format('LL');\r\n\r\n    return (message) &&\r\n      (<div className={'conversation-list-item border-bottom ' + ((key === searchKey) ? 'active' : '') + ' ' + ((unread !== 0) ? 'unread' : '')} onClick={() => this.loadNewMessage(data)}>\r\n        {(data.group === null) ? this.getImage() : this.groupImage(data.group)}\r\n        <div className=\"conversation-info\">\r\n          <h2 className=\"conversation-title d-flex align-items-center\">\r\n            {data.group === null ? this.getTitle() : (<span className=\"col pl-0 pr-2\">{data.group && gs.truncateString(data.group.title, 50)}</span>)}\r\n            <small> {dateFormat}</small>\r\n            {(unread !== 0) && <small className=\"unreadCircle\">{unread} </small>}\r\n          </h2>\r\n          <p className=\"conversation-snippet\" dangerouslySetInnerHTML={{ __html: message && gs.truncateString(message.text, 45) }}></p>\r\n        </div>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst authSelector = createSelector(\r\n  state => state.authentication,\r\n  authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n  authSelector,\r\n  (authentication) => ({\r\n    authentication\r\n  })\r\n);\r\n\r\n\r\nexport default connect(mapStateToProps)(ConversationListItem);","import React, { Component, Fragment } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport ConversationSearch from \"../ConversationSearch\";\r\nimport ConversationModule from \"../ConversationModule\";\r\nimport ConversationListItem from \"../ConversationListItem\";\r\nimport \"./ConversationList.css\";\r\n\r\n\r\nclass ConversationList extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmessages: [],\r\n\t\t\thasMore: true,\r\n\t\t\tper_page: 20,\r\n\t\t\tpage: 1,\r\n\t\t\tactiveKey: null,\r\n\t\t\tsearchResult: [],\r\n\t\t\trecipient: props.recipient,\r\n\t\t\tmodule: 'All'\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tconst { messages, activeKey, module } = this.props;\r\n\t\tthis.loadMessage(messages, activeKey, module);\r\n\t};\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tconst { messages, activeKey, module } = props;\r\n\t\tthis.loadMessage(messages, activeKey, module);\r\n\t}\r\n\r\n\tloadMessage = (messages, activeKey, module, value = null) => {\r\n\t\tif (value !== null && value.length > 0) {\r\n\t\t\tlet result = messages;\r\n\t\t\tresult = result.filter((item) => {\r\n\t\t\t\tlet itemName = item.group.title.toLowerCase() + item.message.text.toLowerCase();\r\n\t\t\t\treturn itemName.indexOf(value.toLowerCase()) !== -1\r\n\t\t\t});\r\n\t\t\tthis.setState({\r\n\t\t\t\tactiveKey,\r\n\t\t\t\tmessages: result,\r\n\t\t\t\tmodule\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({ activeKey, messages, module });\r\n\t\t}\r\n\t};\r\n\r\n\tsearch = (value = null) => {\r\n\t\tconst { messages, activeKey, module } = this.props;\r\n\t\tthis.loadMessage(messages, activeKey, module, value);\r\n\t};\r\n\r\n\tsetModule = (module) => {\r\n\t\tthis.setState({ module });\r\n\t\tthis.props.setModule(module);\r\n\t};\r\n\r\n\tchangeCurrent = (item) => {\r\n\t\tthis.setState({ activeKey: item.key });\r\n\t\tthis.props.changeCurrent(item);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { messages, activeKey, module, recipient } = this.state;\r\n\t\treturn (<Fragment>\r\n\t\t\t<div className=\"search-toolbar\">\r\n\t\t\t\t<h3 className=\"toolbar-title col\">Message</h3>\r\n\t\t\t\t<ConversationModule setModule={this.setModule} module={module} modules={this.props.modules} />\r\n\t\t\t</div>\r\n\t\t\t<ConversationSearch onChange={this.search} />\r\n\t\t\t{messages && activeKey && <div className=\"conversation-list pb-1\">\r\n\t\t\t\t<div className=\"scrollable11 css-scroll\" style={{ overflowX: 'hidden', overflowY: 'scroll' }}>\r\n\t\t\t\t\t{messages && messages.map(item => (item && <ConversationListItem key={item.key} data={item} activeKey={activeKey} searchParam={this.props.searchParam} recipient={recipient} changeCurrent={this.changeCurrent} />))}\r\n\t\t\t\t\t{(messages && messages.length === 0) && <div className=\"p-3 text-center\">Result not found</div>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\r\n\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nconst processSelector = createSelector(\r\n\tstate => state.process,\r\n\tprocess => process\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n\tprocessSelector,\r\n\t(process, ) => ({\r\n\t\tprocess,\r\n\t})\r\n);\r\n\r\nexport default connect(mapStateToProps)(ConversationList);\r\n","import React, { Component } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport MessageList from \"./MessageList\";\r\nimport ConversationList from \"./ConversationList\";\r\nimport \"./Messenger.css\";\r\nimport { globalService as gs, itemService } from \"../../../common/services\";\r\nimport { ModuleHelper as mh, commonHelper as common } from \"../../../helpers\";\r\nimport { history } from \"../../../helpers/history\";\r\nimport { Main } from \"../../layout\";\r\nimport { DocumentTitle } from \"../../../helpers/DocumentTitle\";\r\n\r\nclass Messenger extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmessages: [],\r\n\t\t\tloading: true,\r\n\t\t\tactiveKey: null,\r\n\t\t\tuser_id: parseInt(gs.identity.user.id),\r\n\t\t\trecipient: null,\r\n\t\t\tcurrent: null,\r\n\t\t\tmodules: null,\r\n\t\t\tmountCurrent: false,\r\n\t\t};\r\n\t\tthis.module = 'All';\r\n\t\tthis.modules = [];\r\n\t\tthis.activeKey = null;\r\n\t\tthis.messages = [];\r\n\t\tthis.current = null;\r\n\t\tthis.sortedItems = null;\r\n\t\tthis._isMounted = false;\r\n\t\tthis.initilizeState = this.state;\r\n\t}\r\n\r\n\tcomponentWillMount = () => {\r\n\t\tconst userKey = parseInt(this.state.user_id);\r\n\t\tgs.db.ref(`UserMessageRecipient`)\r\n\t\t\t.orderByChild('recipients/' + userKey + '/id')\r\n\t\t\t.equalTo(userKey)\r\n\t\t\t.on(\"value\", (snap) => this.process(snap));\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis._isMounted = true;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.current = null;\r\n\t\tthis._isMounted = false;\r\n\t\tthis.setState(this.initilizeState);\r\n\t}\r\n\r\n\tgetParamKey() {\r\n\t\tlet search = new URLSearchParams(this.props.location.search);\r\n\t\tlet paramKey = search && search.get(\"key\");\r\n\t\treturn (paramKey === undefined || paramKey === null) ? null : paramKey;\r\n\t}\r\n\r\n\r\n\r\n\tprocess = (snap) => {\r\n\t\tconst i = gs.ObjectToArray(snap.val());\r\n\t\tthis.sortedItems = i.sort((a, b) => (a.updated_at < b.updated_at ? 1 : (a.updated_at > b.updated_at ? -1 : 0)));\r\n\t\tlet data = this.sortedItems && this.sortedItems.map((item) => item.item.moduleType);\r\n\t\tthis.modules = data.filter((v, i, a) => a.indexOf(v) === i);\r\n\t\tthis.sortedMessage();\r\n\t};\r\n\r\n\tsortedMessage = () => {\r\n\t\tthis.messages = [];\r\n\t\tthis.sortedItems && this.sortedItems.map((item) => {\r\n\t\t\tif (item && item.message && this.module !== null) {\r\n\t\t\t\tif (this.module === item.item.moduleType) {\r\n\t\t\t\t\tthis.messages.push(item);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.module === 'All') {\r\n\t\t\t\t\tthis.messages.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (this.messages.length > 0) {\r\n\t\t\tthis.currentMessage();\r\n\t\t}\r\n\t\tthis.setState({ loading: false, });\r\n\r\n\r\n\t};\r\n\r\n\tcurrentMessage = () => {\r\n\t\tlet key = this.getParamKey();\r\n\t\tconst { current } = this.state;\r\n\t\tconst message = (current === null && this.messages.length > 0) ? this.messages[0] : current;\r\n\t\tlet keyMessage = (key) ? this.messages.find((thread) => (thread.key === key)) : message;\r\n\t\tkeyMessage = (keyMessage === undefined || keyMessage === null) ? message : keyMessage;\r\n\t\tif (keyMessage) {\r\n\t\t\tthis.setCurrent(keyMessage);\r\n\t\t}\r\n\t};\r\n\r\n\tsetCurrent = (recent) => {\r\n\t\tlet moduleType = (this.module === null) ? recent.item.moduleType : this.module;\r\n\t\tif ((this.activeKey === null) || (this.activeKey !== recent.key)) {\r\n\t\t\tthis.setState({ module: moduleType, messages: this.messages, mountCurrent: false, });\r\n\t\t\tthis.loadRecipient(recent);\r\n\t\t\tthis.activeKey = recent.key;\r\n\t\t\thistory.push(`/messages/?${common.urlParams('key', recent.key)}`);\r\n\t\t} else {\r\n\t\t\tconst { current } = this.state;\r\n\t\t\tif (current && (recent.message.created_at > current.message.created_at)) {\r\n\t\t\t\tcurrent.message = recent.message;\r\n\t\t\t\tthis.setState({ module: moduleType, messages: this.messages, current });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tloadRecipient = (current) => {\r\n\t\tlet rs = Object.values(current.recipients),\r\n\t\t\tr = rs.find((r) => (this.state.user_id !== parseInt(r.id)));\r\n\t\ttry {\r\n\t\t\titemService\r\n\t\t\t\t.profile(\"GET\", null, { item_id: r.id })\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tlet p = response.user;\r\n\t\t\t\t\tlet recipient = { id: r.id, avater: p.avatar, name: p.name, status: r.status, hometown: p.hometown }\r\n\t\t\t\t\tif (current.group === undefined || current.group === null) {\r\n\t\t\t\t\t\tcurrent.group = { image: recipient.avater, title: recipient.name };\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrent.group.hometown = recipient.hometown;\r\n\t\t\t\t\tthis.setState({ recipient, current, activeKey: current.key, mountCurrent: true, });\r\n\t\t\t\t\tgs.readMessageThread(current.key, this.state.user_id);\r\n\t\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(\"Error: \", e);\r\n\t\t}\r\n\t};\r\n\r\n\tsetModule = (module) => {\r\n\t\tthis.module = module;\r\n\t\tthis.setState({ current: null, activeKey: null });\r\n\t\tthis.activeKey = null;\r\n\t\tthis.sortedMessage();\r\n\t};\r\n\r\n\tloadConversation = () => {\r\n\t\tconst { messages, activeKey, recipient } = this.state;\r\n\t\treturn (recipient && <ConversationList messages={messages} activeKey={activeKey} searchParam={this.props} setModule={this.setModule} module={this.module} modules={this.modules} changeCurrent={this.setCurrent} recipient={recipient} />);\r\n\t};\r\n\r\n\tloadMessage = () => {\r\n\t\tconst { activeKey, recipient, current } = this.state;\r\n\t\treturn (recipient && current && <MessageList searchParam={this.props} current={current} recipient={recipient} activeKey={activeKey} />);\r\n\t};\r\n\r\n\trenderEmpty = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"blank_page d-flex align-items-center justify-content-center w-100 h-100\">\r\n\t\t\t\t<div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n\t\t\t\t\t<div className=\"inner text-center\">\r\n\t\t\t\t\t\t<figure>\r\n\t\t\t\t\t\t\t<img src=\"/images/not-found/message-empty.png\" alt=\"message empty\" width=\"100\" />\r\n\t\t\t\t\t\t</figure>\r\n\t\t\t\t\t\t<h5>Your inbox message is empty.</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trenderLoadingEmpty = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"blank_page d-flex align-items-center justify-content-center w-100 h-100\">\r\n\t\t\t\t<div className=\"common-not-found d-flex align-items-center justify-content-center\">\r\n\t\t\t\t\t<div className=\"inner text-center\">\r\n\t\t\t\t\t\t<figure>\r\n\t\t\t\t\t\t\t<img src=\"/images/not-found/message-empty.png\" alt=\"message empty\" width=\"100\" />\r\n\t\t\t\t\t\t</figure>\r\n\t\t\t\t\t\t<h5>Loading ...</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { mountCurrent, messages, current, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Main>\r\n\t\t\t\t<DocumentTitle title={`Messages`} />\r\n\t\t\t\t<div className=\"w-100 pull-left bg-body\">\r\n\t\t\t\t\t{(messages && messages.length > 0) ? (<div className=\"messenger row container my-4\">\r\n\t\t\t\t\t\t<div className=\"sidebar\">\r\n\t\t\t\t\t\t\t{this.loadConversation()}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t{current && mountCurrent && this.loadMessage()}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>) : loading === true ? this.renderLoadingEmpty() : this.renderEmpty() }\r\n\t\t\t\t</div>\r\n\t\t\t</Main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst processSelector = createSelector(\r\n\tstate => state.process,\r\n\tprocess => process\r\n);\r\n\r\nconst messageSelector = createSelector(\r\n\tstate => state.message,\r\n\tmessage => message\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n\tprocessSelector,\r\n\tmessageSelector,\r\n\t(process, message) => ({\r\n\t\tprocess,\r\n\t\tmessage\r\n\t})\r\n);\r\n\r\nexport default connect(mapStateToProps)(Messenger);\r\n","import React, { Fragment } from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport { createSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from './helpers/history';\r\nimport { AuthRoute } from './route';\r\nimport { Login, Register, ForgotPassword, ResetPassword, EmailVerify } from './views/auth';\r\nimport { Home, DashBoard, NotFound, Logout } from './views/components';\r\nimport { HowItWorks, About, Media, PrivacyPolicy, HelpAndFAQ, ContactUs, Testimonials, TermsOfService, ComingSoon, PressRelease, PressReleaseView } from './views/components/common';\r\nimport ScrollToTop from './helpers/ScrollTop';\r\nimport { FreelancerSearch, JobSearch, ServiceSearch } from './views/components/Search';\r\nimport { ServiceCreate, ServiceUpdate, ServiceSuccess, ServiceListing, ServiceView } from './views/components/Service';\r\nimport { JobCreate, JobUpdate, JobView, JobSuccess, JobListing } from './views/components/Job';\r\nimport { BlogList, BlogView } from './views/components/Blog';\r\nimport Notifier from \"./helpers/Notifier\";\r\nimport { ProfileUpdate, ExperienceAndEducation, StripConnect, CoFounder, PublicAbout, PublicJob, PublicService, PublicCoFounder, PublicRating, PublicServiceView, FavoriteJobs, FavoriteFreelancer, PublicJobView, ConnectionsRequest, FavoriteService, Membership, Transactions, ChangePassword, ManageMembership, Notifications, Support, UserDetails, ConnectionsMy, ConnectionsSent, FavoriteCoFounder } from './views/components/User';\r\nimport { ContractListing, ContractView } from './views/components/Contract';\r\nimport Message from './views/components/Messanger';\r\nimport {userActions} from \"./common/redux/actions\";\r\n// import Dashboard from './views/components/User/Private/Dashboard';\r\n\r\nclass App extends React.Component {\r\n\r\n    componentWillMount() {\r\n        const { dispatch, authentication } = this.props;\r\n        if(authentication.loggedIn) {\r\n            const { user } = authentication.authentication;\r\n            dispatch(userActions.publicProfile(\"GET\", null, {item_id: user && user.id}));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Notifier />\r\n                <Router history={history}>\r\n                    <ScrollToTop>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route path=\"/home\" component={Home}/>\r\n\r\n                            {/* Auth pages routs */}\r\n                            <Route path=\"/register\" component={Register} />\r\n\r\n                            <Route path=\"/login\" component={Login} />\r\n                            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                            <Route path=\"/reset-password\" component={ResetPassword} />\r\n                            <Route path=\"/email-verification\" component={EmailVerify} />\r\n                            {/* Content pages routs */}\r\n                            <Route path=\"/how-it-works\" component={HowItWorks} />\r\n                            <Route path=\"/about-us\" component={About} />\r\n                            <Route path=\"/terms-of-service\" component={TermsOfService} />\r\n                            <Route path=\"/media\" component={Media} />\r\n                            <Route exact path=\"/press-release\" component={PressRelease} />\r\n                            <Route exact path=\"/press-release/:slug\" component={PressReleaseView} />\r\n                            <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\r\n                            <Route path=\"/help-and-faq\" component={HelpAndFAQ} />\r\n                            <Route path=\"/contact-us\" component={ContactUs} />\r\n                            <Route path=\"/testimonials\" component={Testimonials} />\r\n                            <Route path=\"/comming/:slug\" component={ComingSoon} />\r\n                            {/* Seaech page routs */}\r\n\r\n                            <AuthRoute path=\"/welcome\" component={Home} type=\"welcome\" />\r\n                            <AuthRoute path=\"/freelancer-search\" component={FreelancerSearch} title={`Freelancer Search`} />\r\n                            <AuthRoute path=\"/cofounders-search\" component={FreelancerSearch} title={`Co-founder Search`} is_co_founder={true} />\r\n                            <AuthRoute path=\"/job-search\" component={JobSearch} is_publish=\"publish\" is_closed=\"0\"/>\r\n                            <AuthRoute path=\"/service-search\" component={ServiceSearch} />\r\n                            {/* <AuthRoute path=\"/dashboard\" component={Dashboard} /> */}\r\n\r\n                            {/* Create Service */}\r\n                            <AuthRoute exact path=\"/services\" component={ServiceListing} />\r\n                            <AuthRoute exact path=\"/service/create\" component={ServiceCreate} />\r\n                            <AuthRoute exact path=\"/service/update/:id\" component={ServiceUpdate} />\r\n                            <AuthRoute exact path=\"/service/view/:id\" private={true} component={PublicServiceView} />\r\n                            {/* <AuthRoute exact path=\"/service/proposal/:id\" component={ServiceProposalView} /> */}\r\n                            <AuthRoute exact path=\"/service/success\" component={ServiceSuccess} />\r\n\r\n                            {/* Job Links */}\r\n                            <AuthRoute exact path=\"/jobs\" component={JobListing} is_publish=\"publish\"/>\r\n                            <AuthRoute exact path=\"/job/draft\" component={JobListing} is_publish=\"draft\" />\r\n                            <AuthRoute exact path=\"/job/closed\" component={JobListing} is_closed=\"1\"/>\r\n                            <AuthRoute exact path=\"/job/invited\" component={JobListing} is_visibility=\"private\"/>\r\n                            <AuthRoute exact path=\"/job/create\" component={JobCreate} />\r\n                            <AuthRoute exact path=\"/job/update/:id\" component={JobUpdate} />\r\n                            <AuthRoute exact path=\"/job/view/:id\" component={JobView} />\r\n                            {/* <AuthRoute exact path=\"/job/proposal/:id\" component={JobProposalView} /> */}\r\n                            <AuthRoute exact path=\"/job/success\" component={JobSuccess} />\r\n\r\n                            {/* Contract Links */}\r\n\r\n                            {/* <AuthRoute exact path=\"/offers/jobs\" component={ContractListing} status=\"Offers\" title=\"Offers\" module=\"UserItem\" settlement=\"cash\" itemLink=\"/offers/jobs\"/> */}\r\n\r\n                            <AuthRoute exact path=\"/offers/received/jobs/cash\" component={ContractListing} status=\"Received\" title=\"Received Proposals\" module=\"UserItem\" settlement=\"cash\" itemLink=\"/offers/received/jobs\"/>\r\n                            <AuthRoute exact path=\"/offers/received/jobs/exchange\" component={ContractListing} status=\"Received\" title=\"Received Proposals\" module=\"UserItem\" settlement=\"exchange\" itemLink=\"/offers/received/jobs\"/>\r\n\r\n                            <AuthRoute exact path=\"/offers/received/services/cash\" component={ContractListing} status=\"Received\" title=\"Received Offers\" module=\"UserService\" settlement=\"cash\" itemLink=\"/offers/received/services\" />\r\n                            <AuthRoute exact path=\"/offers/received/services/exchange\" component={ContractListing} status=\"Received\" title=\"Servicse Received Offers\" module=\"UserService\" settlement=\"exchange\" itemLink=\"/offers/received/services\" />\r\n\r\n                            <AuthRoute exact path=\"/offers/sent/services/cash\" component={ContractListing} status=\"Sent\" title=\"Sent Offers\" module=\"UserService\" settlement=\"cash\" itemLink=\"/offers/sent/services\" />\r\n                            <AuthRoute exact path=\"/offers/sent/services/exchange\" component={ContractListing} status=\"Sent\" title=\"Sent Offers\" module=\"UserService\" settlement=\"exchange\" itemLink=\"/offers/sent/services\" />\r\n\r\n                            <AuthRoute exact path=\"/offers/sent/jobs/cash\" component={ContractListing} status=\"Sent\" title=\"Sent Proposals\" module=\"UserItem\" settlement=\"cash\" itemLink=\"/offers/sent/jobs\" />\r\n                            <AuthRoute exact path=\"/offers/sent/jobs/exchange\" component={ContractListing} status=\"Sent\" title=\"Sent Proposals\" module=\"UserItem\" settlement=\"exchange\" itemLink=\"/offers/sent/jobs\" />\r\n\r\n                            <AuthRoute exact path=\"/contracts/jobs\" component={ContractListing} status=\"Contracts\" title=\"Accepted Proposals\" module=\"UserItem\" settlement=\"cash\" itemLink=\"/contracts/jobs\"/>\r\n                            <AuthRoute exact path=\"/contracts/jobs/cash\" component={ContractListing} status=\"Contracts\" title=\"Accepted Proposals\" module=\"UserItem\" settlement=\"cash\" itemLink=\"/contracts/jobs\"/>\r\n                            <AuthRoute exact path=\"/contracts/jobs/exchange\" component={ContractListing} status=\"Contracts\" title=\"Accepted Proposals\" module=\"UserItem\" settlement=\"exchange\" itemLink=\"/contracts/jobs\" />\r\n\r\n                            <AuthRoute exact path=\"/contracts/services\" component={ContractListing} status=\"Contracts\" title=\"Accepted Offers\" module=\"UserService\" settlement=\"cash\" itemLink=\"/contracts/services\" />\r\n                            <AuthRoute exact path=\"/contracts/services/cash\" component={ContractListing} status=\"Contracts\" title=\"Accepted Offers\" module=\"UserService\" settlement=\"cash\" itemLink=\"/contracts/services\"/>\r\n                            <AuthRoute exact path=\"/contracts/services/exchange\" component={ContractListing} status=\"Contracts\" title=\"Accepted Offers\" module=\"UserService\" settlement=\"exchange\" itemLink=\"/contracts/services\"/>\r\n\r\n\r\n                            <AuthRoute exact path=\"/completed/jobs\" component={ContractListing} status=\"Completed\" title=\"Completed Proposals\" module=\"UserItem\" settlement=\"cash\" itemLink=\"/completed/jobs\" />\r\n                            <AuthRoute exact path=\"/completed/jobs/cash\" component={ContractListing} status=\"Completed\" title=\"Completed Proposals\" module=\"UserItem\" settlement=\"cash\" itemLink=\"/completed/jobs\" />\r\n                            <AuthRoute exact path=\"/completed/jobs/exchange\" component={ContractListing} status=\"Completed\" title=\"Completed Proposals\" module=\"UserItem\" settlement=\"exchange\" itemLink=\"/completed/jobs\" />\r\n\r\n\r\n                            <AuthRoute exact path=\"/completed/services\" component={ContractListing} status=\"Completed\" title=\"Completed Offers\" module=\"UserService\" settlement=\"cash\" itemLink=\"/completed/services\" />\r\n                            <AuthRoute exact path=\"/completed/services/cash\" component={ContractListing} status=\"Completed\" title=\"Completed Offers\" module=\"UserService\" settlement=\"cash\" itemLink=\"/completed/services\" />\r\n                            <AuthRoute exact path=\"/completed/services/exchange\" component={ContractListing} status=\"Completed\" title=\"Completed Offers\" module=\"UserService\" settlement=\"exchange\" itemLink=\"/completed/services\" />\r\n\r\n\r\n                            <AuthRoute exact path=\"/active/view/:id\" component={ContractView} type=\"Active\" />\r\n                            <AuthRoute exact path=\"/declined/view/:id\" component={ContractView} type=\"Declined\" />\r\n                            <AuthRoute exact path=\"/bids/view/:id\" component={ContractView} type=\"Bids\" />\r\n\r\n                            <AuthRoute exact path=\"/offers/view/:id\" component={ContractView} type=\"Offer\" />\r\n                            <AuthRoute exact path=\"/received/view/:id\" component={ContractView} type=\"Received\" />\r\n                            <AuthRoute exact path=\"/sent/view/:id\" component={ContractView} type=\"Sent\" />\r\n                            <AuthRoute exact path=\"/contracts/view/:id\" component={ContractView} type=\"Contract\"  />\r\n                            <AuthRoute exact path=\"/completed/view/:id\" component={ContractView} type=\"Completed\"  />\r\n                            <AuthRoute exact path=\"/services/proposal/:id\" component={ContractView} type=\"Service\" />\r\n                            <AuthRoute exact path=\"/jobs/proposal/:id\" component={ContractView} type=\"Job\" />\r\n\r\n                            {/* Blog Pages */}\r\n                            <Route exact path=\"/blogs\" component={BlogList} />\r\n                            <Route exact path=\"/blog/category/:slug\" component={BlogList} />\r\n                            <Route exact path=\"/blog/view/:slug\" component={BlogView} />\r\n\r\n                            {/* User Profile Update */}\r\n                            <AuthRoute exact path=\"/user/update\" component={ProfileUpdate} />\r\n                            <AuthRoute exact path=\"/user/experience-and-education\" component={ExperienceAndEducation} />\r\n                            <AuthRoute exact path=\"/user/co-founder\" component={CoFounder} />\r\n                            <AuthRoute exact path=\"/user/membership\" component={Membership} />\r\n                            <AuthRoute exact path=\"/user/public/about/:id\" component={PublicAbout} />\r\n                            <AuthRoute exact path=\"/user/public/job/:id\" component={PublicJob} />\r\n                            <AuthRoute exact path=\"/user/public/service/:id\" component={PublicService} />\r\n                            <AuthRoute exact path=\"/user/public/service/view/:id\" component={PublicServiceView} />\r\n                            <AuthRoute exact path=\"/user/public/job/view/:id\" component={PublicJobView} />\r\n                            <AuthRoute exact path=\"/user/public/co-founder/:id\" component={PublicCoFounder} />\r\n                            <AuthRoute exact path=\"/user/public/ratings/:id\" component={PublicRating} />\r\n                            <AuthRoute exact path=\"/user/favorite/jobs\" component={FavoriteJobs} />\r\n                            <AuthRoute exact path=\"/user/favorite/freelancers\" component={FavoriteFreelancer} />\r\n                            <AuthRoute exact path=\"/user/favorite/co-founders\" component={FavoriteCoFounder}/>\r\n                            <AuthRoute exact path=\"/user/favorite/services\" component={FavoriteService} />\r\n                            <AuthRoute exact path=\"/user/connection/my-cofounder\" component={ConnectionsMy} />\r\n                            <AuthRoute exact path=\"/user/connection/received-request\" component={ConnectionsRequest} />\r\n                            <AuthRoute exact path=\"/user/connection/sent-request\" component={ConnectionsSent} />\r\n                            <AuthRoute exact path=\"/user/support\" component={Support} />\r\n                            <AuthRoute exact path=\"/setting/account-info\" component={UserDetails} />\r\n                            <AuthRoute exact path=\"/setting/change-password\" component={ChangePassword} />\r\n                            <AuthRoute exact path=\"/setting/manage-membership\" component={ManageMembership} />\r\n                            <AuthRoute exact path=\"/setting/notifications\" component={Notifications} />\r\n                            <AuthRoute exact path=\"/setting/stripe-connect\" component={StripConnect} />\r\n                            <AuthRoute exact path=\"/setting/transactions\" component={Transactions} />\r\n\r\n                            {/* Message */}\r\n                            <AuthRoute exact path=\"/messages\" component={Message} />\r\n                            <AuthRoute exact path=\"/dashboard\" component={DashBoard} />\r\n                            <AuthRoute path=\"/logout\" component={Logout} />\r\n                            <Route path=\"*\" component={NotFound} />\r\n                        </Switch>\r\n                    </ScrollToTop>\r\n\r\n                </Router>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst authenticationSelector = createSelector(\r\n    state => state.authentication,\r\n    authentication => authentication\r\n);\r\n\r\nconst mapStateToProps = createSelector(\r\n    authenticationSelector,\r\n    (authentication) => ({\r\n        authentication\r\n    })\r\n);\r\nexport default connect(mapStateToProps)(App);\r\n"],"sourceRoot":""}